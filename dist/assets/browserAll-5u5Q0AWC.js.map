{"version":3,"file":"browserAll-5u5Q0AWC.js","sources":["../../node_modules/pixi.js/lib/dom/CanvasObserver.mjs","../../node_modules/pixi.js/lib/events/FederatedEvent.mjs","../../node_modules/ismobilejs/esm/isMobile.js","../../node_modules/pixi.js/lib/utils/browser/isMobile.mjs","../../node_modules/pixi.js/lib/accessibility/AccessibilitySystem.mjs","../../node_modules/pixi.js/lib/dom/DOMPipe.mjs","../../node_modules/pixi.js/lib/events/EventTicker.mjs","../../node_modules/pixi.js/lib/events/FederatedMouseEvent.mjs","../../node_modules/pixi.js/lib/events/FederatedPointerEvent.mjs","../../node_modules/pixi.js/lib/events/FederatedWheelEvent.mjs","../../node_modules/pixi.js/lib/events/EventBoundary.mjs","../../node_modules/pixi.js/lib/events/EventSystem.mjs","../../node_modules/pixi.js/lib/events/FederatedEventTarget.mjs","../../node_modules/pixi.js/lib/accessibility/init.mjs","../../node_modules/pixi.js/lib/accessibility/accessibilityTarget.mjs","../../node_modules/pixi.js/lib/events/init.mjs","../../node_modules/pixi.js/lib/dom/init.mjs"],"sourcesContent":["import { UPDATE_PRIORITY } from '../ticker/const.mjs';\nimport { Ticker } from '../ticker/Ticker.mjs';\n\n\"use strict\";\nclass CanvasObserver {\n  constructor(options) {\n    /** A cached value of the last transform applied to the DOM element. */\n    this._lastTransform = \"\";\n    /** A ResizeObserver instance to observe changes in the canvas size. */\n    this._observer = null;\n    /** A flag to indicate whether the observer is attached to the Ticker for continuous updates. */\n    this._tickerAttached = false;\n    /**\n     * Updates the transform of the DOM element based on the canvas size and position.\n     * This method calculates the scale and translation needed to keep the DOM element in sync with the canvas.\n     */\n    this.updateTranslation = () => {\n      if (!this._canvas)\n        return;\n      const rect = this._canvas.getBoundingClientRect();\n      const contentWidth = this._canvas.width;\n      const contentHeight = this._canvas.height;\n      const sx = rect.width / contentWidth * this._renderer.resolution;\n      const sy = rect.height / contentHeight * this._renderer.resolution;\n      const tx = rect.left;\n      const ty = rect.top;\n      const newTransform = `translate(${tx}px, ${ty}px) scale(${sx}, ${sy})`;\n      if (newTransform !== this._lastTransform) {\n        this._domElement.style.transform = newTransform;\n        this._lastTransform = newTransform;\n      }\n    };\n    this._domElement = options.domElement;\n    this._renderer = options.renderer;\n    if (globalThis.OffscreenCanvas && this._renderer.canvas instanceof OffscreenCanvas)\n      return;\n    this._canvas = this._renderer.canvas;\n    this._attachObserver();\n  }\n  /** The canvas element that this CanvasObserver is associated with. */\n  get canvas() {\n    return this._canvas;\n  }\n  /** Attaches the DOM element to the canvas parent if it is not already attached. */\n  ensureAttached() {\n    if (!this._domElement.parentNode && this._canvas.parentNode) {\n      this._canvas.parentNode.appendChild(this._domElement);\n      this.updateTranslation();\n    }\n  }\n  /** Sets up a ResizeObserver if available. This ensures that the DOM element is kept in sync with the canvas size . */\n  _attachObserver() {\n    if (\"ResizeObserver\" in globalThis) {\n      if (this._observer) {\n        this._observer.disconnect();\n        this._observer = null;\n      }\n      this._observer = new ResizeObserver((entries) => {\n        for (const entry of entries) {\n          if (entry.target !== this._canvas) {\n            continue;\n          }\n          const contentWidth = this.canvas.width;\n          const contentHeight = this.canvas.height;\n          const sx = entry.contentRect.width / contentWidth * this._renderer.resolution;\n          const sy = entry.contentRect.height / contentHeight * this._renderer.resolution;\n          const needsUpdate = this._lastScaleX !== sx || this._lastScaleY !== sy;\n          if (needsUpdate) {\n            this.updateTranslation();\n            this._lastScaleX = sx;\n            this._lastScaleY = sy;\n          }\n        }\n      });\n      this._observer.observe(this._canvas);\n    } else if (!this._tickerAttached) {\n      Ticker.shared.add(this.updateTranslation, this, UPDATE_PRIORITY.HIGH);\n    }\n  }\n  /** Destroys the CanvasObserver instance, cleaning up observers and Ticker. */\n  destroy() {\n    if (this._observer) {\n      this._observer.disconnect();\n      this._observer = null;\n    } else if (this._tickerAttached) {\n      Ticker.shared.remove(this.updateTranslation);\n    }\n    this._domElement = null;\n    this._renderer = null;\n    this._canvas = null;\n    this._tickerAttached = false;\n    this._lastTransform = \"\";\n    this._lastScaleX = null;\n    this._lastScaleY = null;\n  }\n}\n\nexport { CanvasObserver };\n//# sourceMappingURL=CanvasObserver.mjs.map\n","import { Point } from '../maths/point/Point.mjs';\n\n\"use strict\";\nclass FederatedEvent {\n  /**\n   * @param manager - The event boundary which manages this event. Propagation can only occur\n   *  within the boundary's jurisdiction.\n   */\n  constructor(manager) {\n    /** Flags whether this event bubbles. This will take effect only if it is set before propagation. */\n    this.bubbles = true;\n    /** @deprecated since 7.0.0 */\n    this.cancelBubble = true;\n    /**\n     * Flags whether this event can be canceled using {@link FederatedEvent.preventDefault}. This is always\n     * false (for now).\n     */\n    this.cancelable = false;\n    /**\n     * Flag added for compatibility with DOM `Event`. It is not used in the Federated Events\n     * API.\n     * @see https://dom.spec.whatwg.org/#dom-event-composed\n     * @ignore\n     */\n    this.composed = false;\n    /** Flags whether the default response of the user agent was prevent through this event. */\n    this.defaultPrevented = false;\n    /**\n     * The propagation phase.\n     * @default {@link FederatedEvent.NONE}\n     */\n    this.eventPhase = FederatedEvent.prototype.NONE;\n    /** Flags whether propagation was stopped. */\n    this.propagationStopped = false;\n    /** Flags whether propagation was immediately stopped. */\n    this.propagationImmediatelyStopped = false;\n    /** The coordinates of the event relative to the nearest DOM layer. This is a non-standard property. */\n    this.layer = new Point();\n    /** The coordinates of the event relative to the DOM document. This is a non-standard property. */\n    this.page = new Point();\n    /**\n     * The event propagation phase NONE that indicates that the event is not in any phase.\n     * @default 0\n     * @advanced\n     */\n    this.NONE = 0;\n    /**\n     * The event propagation phase CAPTURING_PHASE that indicates that the event is in the capturing phase.\n     * @default 1\n     * @advanced\n     */\n    this.CAPTURING_PHASE = 1;\n    /**\n     * The event propagation phase AT_TARGET that indicates that the event is at the target.\n     * @default 2\n     * @advanced\n     */\n    this.AT_TARGET = 2;\n    /**\n     * The event propagation phase BUBBLING_PHASE that indicates that the event is in the bubbling phase.\n     * @default 3\n     * @advanced\n     */\n    this.BUBBLING_PHASE = 3;\n    this.manager = manager;\n  }\n  /** @readonly */\n  get layerX() {\n    return this.layer.x;\n  }\n  /** @readonly */\n  get layerY() {\n    return this.layer.y;\n  }\n  /** @readonly */\n  get pageX() {\n    return this.page.x;\n  }\n  /** @readonly */\n  get pageY() {\n    return this.page.y;\n  }\n  /**\n   * Fallback for the deprecated `InteractionEvent.data`.\n   * @deprecated since 7.0.0\n   */\n  get data() {\n    return this;\n  }\n  /**\n   * The propagation path for this event. Alias for {@link EventBoundary.propagationPath}.\n   * @advanced\n   */\n  composedPath() {\n    if (this.manager && (!this.path || this.path[this.path.length - 1] !== this.target)) {\n      this.path = this.target ? this.manager.propagationPath(this.target) : [];\n    }\n    return this.path;\n  }\n  /**\n   * Unimplemented method included for implementing the DOM interface `Event`. It will throw an `Error`.\n   * @deprecated\n   * @ignore\n   * @param _type\n   * @param _bubbles\n   * @param _cancelable\n   */\n  initEvent(_type, _bubbles, _cancelable) {\n    throw new Error(\"initEvent() is a legacy DOM API. It is not implemented in the Federated Events API.\");\n  }\n  /**\n   * Unimplemented method included for implementing the DOM interface `UIEvent`. It will throw an `Error`.\n   * @ignore\n   * @deprecated\n   * @param _typeArg\n   * @param _bubblesArg\n   * @param _cancelableArg\n   * @param _viewArg\n   * @param _detailArg\n   */\n  initUIEvent(_typeArg, _bubblesArg, _cancelableArg, _viewArg, _detailArg) {\n    throw new Error(\"initUIEvent() is a legacy DOM API. It is not implemented in the Federated Events API.\");\n  }\n  /**\n   * Prevent default behavior of both PixiJS and the user agent.\n   * @example\n   * ```ts\n   * sprite.on('click', (event) => {\n   *     // Prevent both browser's default click behavior\n   *     // and PixiJS's default handling\n   *     event.preventDefault();\n   *\n   *     // Custom handling\n   *     customClickHandler();\n   * });\n   * ```\n   * @remarks\n   * - Only works if the native event is cancelable\n   * - Does not stop event propagation\n   */\n  preventDefault() {\n    if (this.nativeEvent instanceof Event && this.nativeEvent.cancelable) {\n      this.nativeEvent.preventDefault();\n    }\n    this.defaultPrevented = true;\n  }\n  /**\n   * Stop this event from propagating to any additional listeners, including those\n   * on the current target and any following targets in the propagation path.\n   * @example\n   * ```ts\n   * container.on('pointerdown', (event) => {\n   *     // Stop all further event handling\n   *     event.stopImmediatePropagation();\n   *\n   *     // These handlers won't be called:\n   *     // - Other pointerdown listeners on this container\n   *     // - Any pointerdown listeners on parent containers\n   * });\n   * ```\n   * @remarks\n   * - Immediately stops all event propagation\n   * - Prevents other listeners on same target from being called\n   * - More aggressive than stopPropagation()\n   */\n  stopImmediatePropagation() {\n    this.propagationImmediatelyStopped = true;\n  }\n  /**\n   * Stop this event from propagating to the next target in the propagation path.\n   * The rest of the listeners on the current target will still be notified.\n   * @example\n   * ```ts\n   * child.on('pointermove', (event) => {\n   *     // Handle event on child\n   *     updateChild();\n   *\n   *     // Prevent parent handlers from being called\n   *     event.stopPropagation();\n   * });\n   *\n   * // This won't be called if child handles the event\n   * parent.on('pointermove', (event) => {\n   *     updateParent();\n   * });\n   * ```\n   * @remarks\n   * - Stops event bubbling to parent containers\n   * - Does not prevent other listeners on same target\n   * - Less aggressive than stopImmediatePropagation()\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\nexport { FederatedEvent };\n//# sourceMappingURL=FederatedEvent.mjs.map\n","var appleIphone = /iPhone/i;\nvar appleIpod = /iPod/i;\nvar appleTablet = /iPad/i;\nvar appleUniversal = /\\biOS-universal(?:.+)Mac\\b/i;\nvar androidPhone = /\\bAndroid(?:.+)Mobile\\b/i;\nvar androidTablet = /Android/i;\nvar amazonPhone = /(?:SD4930UR|\\bSilk(?:.+)Mobile\\b)/i;\nvar amazonTablet = /Silk/i;\nvar windowsPhone = /Windows Phone/i;\nvar windowsTablet = /\\bWindows(?:.+)ARM\\b/i;\nvar otherBlackBerry = /BlackBerry/i;\nvar otherBlackBerry10 = /BB10/i;\nvar otherOpera = /Opera Mini/i;\nvar otherChrome = /\\b(CriOS|Chrome)(?:.+)Mobile/i;\nvar otherFirefox = /Mobile(?:.+)Firefox\\b/i;\nvar isAppleTabletOnIos13 = function (navigator) {\n    return (typeof navigator !== 'undefined' &&\n        navigator.platform === 'MacIntel' &&\n        typeof navigator.maxTouchPoints === 'number' &&\n        navigator.maxTouchPoints > 1 &&\n        typeof MSStream === 'undefined');\n};\nfunction createMatch(userAgent) {\n    return function (regex) { return regex.test(userAgent); };\n}\nexport default function isMobile(param) {\n    var nav = {\n        userAgent: '',\n        platform: '',\n        maxTouchPoints: 0\n    };\n    if (!param && typeof navigator !== 'undefined') {\n        nav = {\n            userAgent: navigator.userAgent,\n            platform: navigator.platform,\n            maxTouchPoints: navigator.maxTouchPoints || 0\n        };\n    }\n    else if (typeof param === 'string') {\n        nav.userAgent = param;\n    }\n    else if (param && param.userAgent) {\n        nav = {\n            userAgent: param.userAgent,\n            platform: param.platform,\n            maxTouchPoints: param.maxTouchPoints || 0\n        };\n    }\n    var userAgent = nav.userAgent;\n    var tmp = userAgent.split('[FBAN');\n    if (typeof tmp[1] !== 'undefined') {\n        userAgent = tmp[0];\n    }\n    tmp = userAgent.split('Twitter');\n    if (typeof tmp[1] !== 'undefined') {\n        userAgent = tmp[0];\n    }\n    var match = createMatch(userAgent);\n    var result = {\n        apple: {\n            phone: match(appleIphone) && !match(windowsPhone),\n            ipod: match(appleIpod),\n            tablet: !match(appleIphone) &&\n                (match(appleTablet) || isAppleTabletOnIos13(nav)) &&\n                !match(windowsPhone),\n            universal: match(appleUniversal),\n            device: (match(appleIphone) ||\n                match(appleIpod) ||\n                match(appleTablet) ||\n                match(appleUniversal) ||\n                isAppleTabletOnIos13(nav)) &&\n                !match(windowsPhone)\n        },\n        amazon: {\n            phone: match(amazonPhone),\n            tablet: !match(amazonPhone) && match(amazonTablet),\n            device: match(amazonPhone) || match(amazonTablet)\n        },\n        android: {\n            phone: (!match(windowsPhone) && match(amazonPhone)) ||\n                (!match(windowsPhone) && match(androidPhone)),\n            tablet: !match(windowsPhone) &&\n                !match(amazonPhone) &&\n                !match(androidPhone) &&\n                (match(amazonTablet) || match(androidTablet)),\n            device: (!match(windowsPhone) &&\n                (match(amazonPhone) ||\n                    match(amazonTablet) ||\n                    match(androidPhone) ||\n                    match(androidTablet))) ||\n                match(/\\bokhttp\\b/i)\n        },\n        windows: {\n            phone: match(windowsPhone),\n            tablet: match(windowsTablet),\n            device: match(windowsPhone) || match(windowsTablet)\n        },\n        other: {\n            blackberry: match(otherBlackBerry),\n            blackberry10: match(otherBlackBerry10),\n            opera: match(otherOpera),\n            firefox: match(otherFirefox),\n            chrome: match(otherChrome),\n            device: match(otherBlackBerry) ||\n                match(otherBlackBerry10) ||\n                match(otherOpera) ||\n                match(otherFirefox) ||\n                match(otherChrome)\n        },\n        any: false,\n        phone: false,\n        tablet: false\n    };\n    result.any =\n        result.apple.device ||\n            result.android.device ||\n            result.windows.device ||\n            result.other.device;\n    result.phone =\n        result.apple.phone || result.android.phone || result.windows.phone;\n    result.tablet =\n        result.apple.tablet || result.android.tablet || result.windows.tablet;\n    return result;\n}\n//# sourceMappingURL=isMobile.js.map","import isMobileJs from 'ismobilejs';\n\n\"use strict\";\nconst isMobileCall = isMobileJs.default ?? isMobileJs;\nconst isMobile = isMobileCall(globalThis.navigator);\n\nexport { isMobile };\n//# sourceMappingURL=isMobile.mjs.map\n","import { CanvasObserver } from '../dom/CanvasObserver.mjs';\nimport { FederatedEvent } from '../events/FederatedEvent.mjs';\nimport { ExtensionType } from '../extensions/Extensions.mjs';\nimport { isMobile } from '../utils/browser/isMobile.mjs';\nimport { removeItems } from '../utils/data/removeItems.mjs';\n\n\"use strict\";\nconst KEY_CODE_TAB = 9;\nconst DIV_TOUCH_SIZE = 100;\nconst DIV_TOUCH_POS_X = 0;\nconst DIV_TOUCH_POS_Y = 0;\nconst DIV_TOUCH_ZINDEX = 2;\nconst DIV_HOOK_SIZE = 1;\nconst DIV_HOOK_POS_X = -1e3;\nconst DIV_HOOK_POS_Y = -1e3;\nconst DIV_HOOK_ZINDEX = 2;\nconst _AccessibilitySystem = class _AccessibilitySystem {\n  // eslint-disable-next-line jsdoc/require-param\n  /**\n   * @param {WebGLRenderer|WebGPURenderer} renderer - A reference to the current renderer\n   */\n  constructor(renderer, _mobileInfo = isMobile) {\n    this._mobileInfo = _mobileInfo;\n    /** Whether accessibility divs are visible for debugging */\n    this.debug = false;\n    /** Whether to activate on tab key press */\n    this._activateOnTab = true;\n    /** Whether to deactivate accessibility when mouse moves */\n    this._deactivateOnMouseMove = true;\n    /** Internal variable, see isActive getter. */\n    this._isActive = false;\n    /** Internal variable, see isMobileAccessibility getter. */\n    this._isMobileAccessibility = false;\n    /** This is the dom element that will sit over the PixiJS element. This is where the div overlays will go. */\n    this._div = null;\n    /** A simple pool for storing divs. */\n    this._pools = {};\n    /** This is a tick used to check if an object is no longer being rendered. */\n    this._renderId = 0;\n    /** The array of currently active accessible items. */\n    this._children = [];\n    /** Count to throttle div updates on android devices. */\n    this._androidUpdateCount = 0;\n    /**  The frequency to update the div elements. */\n    this._androidUpdateFrequency = 500;\n    // eslint-disable-next-line @typescript-eslint/prefer-readonly\n    this._isRunningTests = false;\n    /** Bound function references for proper event listener removal */\n    this._boundOnKeyDown = this._onKeyDown.bind(this);\n    this._boundOnMouseMove = this._onMouseMove.bind(this);\n    this._hookDiv = null;\n    if (_mobileInfo.tablet || _mobileInfo.phone) {\n      this._createTouchHook();\n    }\n    this._renderer = renderer;\n  }\n  /**\n   * Value of `true` if accessibility is currently active and accessibility layers are showing.\n   * @type {boolean}\n   * @readonly\n   */\n  get isActive() {\n    return this._isActive;\n  }\n  /**\n   * Value of `true` if accessibility is enabled for touch devices.\n   * @type {boolean}\n   * @readonly\n   */\n  get isMobileAccessibility() {\n    return this._isMobileAccessibility;\n  }\n  /**\n   * Button element for handling touch hooks.\n   * @readonly\n   */\n  get hookDiv() {\n    return this._hookDiv;\n  }\n  /**\n   * The DOM element that will sit over the PixiJS element. This is where the div overlays will go.\n   * @readonly\n   */\n  get div() {\n    return this._div;\n  }\n  /**\n   * Creates the touch hooks.\n   * @private\n   */\n  _createTouchHook() {\n    const hookDiv = document.createElement(\"button\");\n    hookDiv.style.width = `${DIV_HOOK_SIZE}px`;\n    hookDiv.style.height = `${DIV_HOOK_SIZE}px`;\n    hookDiv.style.position = \"absolute\";\n    hookDiv.style.top = `${DIV_HOOK_POS_X}px`;\n    hookDiv.style.left = `${DIV_HOOK_POS_Y}px`;\n    hookDiv.style.zIndex = DIV_HOOK_ZINDEX.toString();\n    hookDiv.style.backgroundColor = \"#FF0000\";\n    hookDiv.title = \"select to enable accessibility for this content\";\n    hookDiv.addEventListener(\"focus\", () => {\n      this._isMobileAccessibility = true;\n      this._activate();\n      this._destroyTouchHook();\n    });\n    document.body.appendChild(hookDiv);\n    this._hookDiv = hookDiv;\n  }\n  /**\n   * Destroys the touch hooks.\n   * @private\n   */\n  _destroyTouchHook() {\n    if (!this._hookDiv) {\n      return;\n    }\n    document.body.removeChild(this._hookDiv);\n    this._hookDiv = null;\n  }\n  /**\n   * Activating will cause the Accessibility layer to be shown.\n   * This is called when a user presses the tab key.\n   * @private\n   */\n  _activate() {\n    if (this._isActive) {\n      return;\n    }\n    this._isActive = true;\n    if (!this._div) {\n      this._div = document.createElement(\"div\");\n      this._div.style.position = \"absolute\";\n      this._div.style.top = `${DIV_TOUCH_POS_X}px`;\n      this._div.style.left = `${DIV_TOUCH_POS_Y}px`;\n      this._div.style.pointerEvents = \"none\";\n      this._div.style.zIndex = DIV_TOUCH_ZINDEX.toString();\n      this._canvasObserver = new CanvasObserver({\n        domElement: this._div,\n        renderer: this._renderer\n      });\n    }\n    if (this._activateOnTab) {\n      globalThis.addEventListener(\"keydown\", this._boundOnKeyDown, false);\n    }\n    if (this._deactivateOnMouseMove) {\n      globalThis.document.addEventListener(\"mousemove\", this._boundOnMouseMove, true);\n    }\n    const canvas = this._renderer.view.canvas;\n    if (!canvas.parentNode) {\n      const observer = new MutationObserver(() => {\n        if (canvas.parentNode) {\n          observer.disconnect();\n          this._canvasObserver.ensureAttached();\n          this._initAccessibilitySetup();\n        }\n      });\n      observer.observe(document.body, { childList: true, subtree: true });\n    } else {\n      this._canvasObserver.ensureAttached();\n      this._initAccessibilitySetup();\n    }\n  }\n  // New method to handle initialization after div is ready\n  _initAccessibilitySetup() {\n    this._renderer.runners.postrender.add(this);\n    if (this._renderer.lastObjectRendered) {\n      this._updateAccessibleObjects(this._renderer.lastObjectRendered);\n    }\n  }\n  /**\n   * Deactivates the accessibility system. Removes listeners and accessibility elements.\n   * @private\n   */\n  _deactivate() {\n    if (!this._isActive || this._isMobileAccessibility) {\n      return;\n    }\n    this._isActive = false;\n    globalThis.document.removeEventListener(\"mousemove\", this._boundOnMouseMove, true);\n    if (this._activateOnTab) {\n      globalThis.addEventListener(\"keydown\", this._boundOnKeyDown, false);\n    }\n    this._renderer.runners.postrender.remove(this);\n    for (const child of this._children) {\n      if (child._accessibleDiv && child._accessibleDiv.parentNode) {\n        child._accessibleDiv.parentNode.removeChild(child._accessibleDiv);\n        child._accessibleDiv = null;\n      }\n      child._accessibleActive = false;\n    }\n    for (const accessibleType in this._pools) {\n      const pool = this._pools[accessibleType];\n      pool.forEach((div) => {\n        if (div.parentNode) {\n          div.parentNode.removeChild(div);\n        }\n      });\n      delete this._pools[accessibleType];\n    }\n    if (this._div && this._div.parentNode) {\n      this._div.parentNode.removeChild(this._div);\n    }\n    this._pools = {};\n    this._children = [];\n  }\n  /**\n   * This recursive function will run through the scene graph and add any new accessible objects to the DOM layer.\n   * @private\n   * @param {Container} container - The Container to check.\n   */\n  _updateAccessibleObjects(container) {\n    if (!container.visible || !container.accessibleChildren) {\n      return;\n    }\n    if (container.accessible) {\n      if (!container._accessibleActive) {\n        this._addChild(container);\n      }\n      container._renderId = this._renderId;\n    }\n    const children = container.children;\n    if (children) {\n      for (let i = 0; i < children.length; i++) {\n        this._updateAccessibleObjects(children[i]);\n      }\n    }\n  }\n  /**\n   * Runner init called, view is available at this point.\n   * @ignore\n   */\n  init(options) {\n    const defaultOpts = _AccessibilitySystem.defaultOptions;\n    const mergedOptions = {\n      accessibilityOptions: {\n        ...defaultOpts,\n        ...options?.accessibilityOptions || {}\n      }\n    };\n    this.debug = mergedOptions.accessibilityOptions.debug;\n    this._activateOnTab = mergedOptions.accessibilityOptions.activateOnTab;\n    this._deactivateOnMouseMove = mergedOptions.accessibilityOptions.deactivateOnMouseMove;\n    if (mergedOptions.accessibilityOptions.enabledByDefault) {\n      this._activate();\n    }\n    this._renderer.runners.postrender.remove(this);\n  }\n  /**\n   * Updates the accessibility layer during rendering.\n   * - Removes divs for containers no longer in the scene\n   * - Updates the position and dimensions of the root div\n   * - Updates positions of active accessibility divs\n   * Only fires while the accessibility system is active.\n   * @ignore\n   */\n  postrender() {\n    const now = performance.now();\n    if (this._mobileInfo.android.device && now < this._androidUpdateCount) {\n      return;\n    }\n    this._androidUpdateCount = now + this._androidUpdateFrequency;\n    if ((!this._renderer.renderingToScreen || !this._renderer.view.canvas) && !this._isRunningTests) {\n      return;\n    }\n    const activeIds = /* @__PURE__ */ new Set();\n    if (this._renderer.lastObjectRendered) {\n      this._updateAccessibleObjects(this._renderer.lastObjectRendered);\n      for (const child of this._children) {\n        if (child._renderId === this._renderId) {\n          activeIds.add(this._children.indexOf(child));\n        }\n      }\n    }\n    for (let i = this._children.length - 1; i >= 0; i--) {\n      const child = this._children[i];\n      if (!activeIds.has(i)) {\n        if (child._accessibleDiv && child._accessibleDiv.parentNode) {\n          child._accessibleDiv.parentNode.removeChild(child._accessibleDiv);\n          const pool = this._getPool(child.accessibleType);\n          pool.push(child._accessibleDiv);\n          child._accessibleDiv = null;\n        }\n        child._accessibleActive = false;\n        removeItems(this._children, i, 1);\n      }\n    }\n    if (this._renderer.renderingToScreen) {\n      this._canvasObserver.ensureAttached();\n    }\n    for (let i = 0; i < this._children.length; i++) {\n      const child = this._children[i];\n      if (!child._accessibleActive || !child._accessibleDiv) {\n        continue;\n      }\n      const div = child._accessibleDiv;\n      const hitArea = child.hitArea || child.getBounds().rectangle;\n      if (child.hitArea) {\n        const wt = child.worldTransform;\n        div.style.left = `${wt.tx + hitArea.x * wt.a}px`;\n        div.style.top = `${wt.ty + hitArea.y * wt.d}px`;\n        div.style.width = `${hitArea.width * wt.a}px`;\n        div.style.height = `${hitArea.height * wt.d}px`;\n      } else {\n        this._capHitArea(hitArea);\n        div.style.left = `${hitArea.x}px`;\n        div.style.top = `${hitArea.y}px`;\n        div.style.width = `${hitArea.width}px`;\n        div.style.height = `${hitArea.height}px`;\n      }\n    }\n    this._renderId++;\n  }\n  /**\n   * private function that will visually add the information to the\n   * accessibility div\n   * @param {HTMLElement} div -\n   */\n  _updateDebugHTML(div) {\n    div.innerHTML = `type: ${div.type}</br> title : ${div.title}</br> tabIndex: ${div.tabIndex}`;\n  }\n  /**\n   * Adjust the hit area based on the bounds of a display object\n   * @param {Rectangle} hitArea - Bounds of the child\n   */\n  _capHitArea(hitArea) {\n    if (hitArea.x < 0) {\n      hitArea.width += hitArea.x;\n      hitArea.x = 0;\n    }\n    if (hitArea.y < 0) {\n      hitArea.height += hitArea.y;\n      hitArea.y = 0;\n    }\n    const { width: viewWidth, height: viewHeight } = this._renderer;\n    if (hitArea.x + hitArea.width > viewWidth) {\n      hitArea.width = viewWidth - hitArea.x;\n    }\n    if (hitArea.y + hitArea.height > viewHeight) {\n      hitArea.height = viewHeight - hitArea.y;\n    }\n  }\n  /**\n   * Creates or reuses a div element for a Container and adds it to the accessibility layer.\n   * Sets up ARIA attributes, event listeners, and positioning based on the container's properties.\n   * @private\n   * @param {Container} container - The child to make accessible.\n   */\n  _addChild(container) {\n    const pool = this._getPool(container.accessibleType);\n    let div = pool.pop();\n    if (div) {\n      div.innerHTML = \"\";\n      div.removeAttribute(\"title\");\n      div.removeAttribute(\"aria-label\");\n      div.tabIndex = 0;\n    } else {\n      if (container.accessibleType === \"button\") {\n        div = document.createElement(\"button\");\n      } else {\n        div = document.createElement(container.accessibleType);\n        div.style.cssText = `\n                        color: transparent;\n                        pointer-events: none;\n                        padding: 0;\n                        margin: 0;\n                        border: 0;\n                        outline: 0;\n                        background: transparent;\n                        box-sizing: border-box;\n                        user-select: none;\n                        -webkit-user-select: none;\n                        -moz-user-select: none;\n                        -ms-user-select: none;\n                    `;\n        if (container.accessibleText) {\n          div.innerText = container.accessibleText;\n        }\n      }\n      div.style.width = `${DIV_TOUCH_SIZE}px`;\n      div.style.height = `${DIV_TOUCH_SIZE}px`;\n      div.style.backgroundColor = this.debug ? \"rgba(255,255,255,0.5)\" : \"transparent\";\n      div.style.position = \"absolute\";\n      div.style.zIndex = DIV_TOUCH_ZINDEX.toString();\n      div.style.borderStyle = \"none\";\n      if (navigator.userAgent.toLowerCase().includes(\"chrome\")) {\n        div.setAttribute(\"aria-live\", \"off\");\n      } else {\n        div.setAttribute(\"aria-live\", \"polite\");\n      }\n      if (navigator.userAgent.match(/rv:.*Gecko\\//)) {\n        div.setAttribute(\"aria-relevant\", \"additions\");\n      } else {\n        div.setAttribute(\"aria-relevant\", \"text\");\n      }\n      div.addEventListener(\"click\", this._onClick.bind(this));\n      div.addEventListener(\"focus\", this._onFocus.bind(this));\n      div.addEventListener(\"focusout\", this._onFocusOut.bind(this));\n    }\n    div.style.pointerEvents = container.accessiblePointerEvents;\n    div.type = container.accessibleType;\n    if (container.accessibleTitle && container.accessibleTitle !== null) {\n      div.title = container.accessibleTitle;\n    } else if (!container.accessibleHint || container.accessibleHint === null) {\n      div.title = `container ${container.tabIndex}`;\n    }\n    if (container.accessibleHint && container.accessibleHint !== null) {\n      div.setAttribute(\"aria-label\", container.accessibleHint);\n    }\n    if (container.interactive) {\n      div.tabIndex = container.tabIndex;\n    } else {\n      div.tabIndex = 0;\n    }\n    if (this.debug) {\n      this._updateDebugHTML(div);\n    }\n    container._accessibleActive = true;\n    container._accessibleDiv = div;\n    div.container = container;\n    this._children.push(container);\n    this._div.appendChild(container._accessibleDiv);\n  }\n  /**\n   * Dispatch events with the EventSystem.\n   * @param e\n   * @param type\n   * @private\n   */\n  _dispatchEvent(e, type) {\n    const { container: target } = e.target;\n    const boundary = this._renderer.events.rootBoundary;\n    const event = Object.assign(new FederatedEvent(boundary), { target });\n    boundary.rootTarget = this._renderer.lastObjectRendered;\n    type.forEach((type2) => boundary.dispatchEvent(event, type2));\n  }\n  /**\n   * Maps the div button press to pixi's EventSystem (click)\n   * @private\n   * @param {MouseEvent} e - The click event.\n   */\n  _onClick(e) {\n    this._dispatchEvent(e, [\"click\", \"pointertap\", \"tap\"]);\n  }\n  /**\n   * Maps the div focus events to pixi's EventSystem (mouseover)\n   * @private\n   * @param {FocusEvent} e - The focus event.\n   */\n  _onFocus(e) {\n    if (!e.target.getAttribute(\"aria-live\")) {\n      e.target.setAttribute(\"aria-live\", \"assertive\");\n    }\n    this._dispatchEvent(e, [\"mouseover\"]);\n  }\n  /**\n   * Maps the div focus events to pixi's EventSystem (mouseout)\n   * @private\n   * @param {FocusEvent} e - The focusout event.\n   */\n  _onFocusOut(e) {\n    if (!e.target.getAttribute(\"aria-live\")) {\n      e.target.setAttribute(\"aria-live\", \"polite\");\n    }\n    this._dispatchEvent(e, [\"mouseout\"]);\n  }\n  /**\n   * Is called when a key is pressed\n   * @private\n   * @param {KeyboardEvent} e - The keydown event.\n   */\n  _onKeyDown(e) {\n    if (e.keyCode !== KEY_CODE_TAB || !this._activateOnTab) {\n      return;\n    }\n    this._activate();\n  }\n  /**\n   * Is called when the mouse moves across the renderer element\n   * @private\n   * @param {MouseEvent} e - The mouse event.\n   */\n  _onMouseMove(e) {\n    if (e.movementX === 0 && e.movementY === 0) {\n      return;\n    }\n    this._deactivate();\n  }\n  /**\n   * Destroys the accessibility system. Removes all elements and listeners.\n   * > [!IMPORTANT] This is typically called automatically when the {@link Application} is destroyed.\n   * > A typically user should not need to call this method directly.\n   */\n  destroy() {\n    this._deactivate();\n    this._destroyTouchHook();\n    this._canvasObserver?.destroy();\n    this._canvasObserver = null;\n    this._div = null;\n    this._pools = null;\n    this._children = null;\n    this._renderer = null;\n    this._hookDiv = null;\n    globalThis.removeEventListener(\"keydown\", this._boundOnKeyDown);\n    this._boundOnKeyDown = null;\n    globalThis.document.removeEventListener(\"mousemove\", this._boundOnMouseMove, true);\n    this._boundOnMouseMove = null;\n  }\n  /**\n   * Enables or disables the accessibility system.\n   * @param enabled - Whether to enable or disable accessibility.\n   * @example\n   * ```js\n   * app.renderer.accessibility.setAccessibilityEnabled(true); // Enable accessibility\n   * app.renderer.accessibility.setAccessibilityEnabled(false); // Disable accessibility\n   * ```\n   */\n  setAccessibilityEnabled(enabled) {\n    if (enabled) {\n      this._activate();\n    } else {\n      this._deactivate();\n    }\n  }\n  _getPool(accessibleType) {\n    if (!this._pools[accessibleType]) {\n      this._pools[accessibleType] = [];\n    }\n    return this._pools[accessibleType];\n  }\n};\n/** @ignore */\n_AccessibilitySystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem,\n    ExtensionType.WebGPUSystem\n  ],\n  name: \"accessibility\"\n};\n/**\n * The default options used by the system.\n * You can set these before initializing the {@link Application} to change the default behavior.\n * @example\n * ```js\n * import { AccessibilitySystem } from 'pixi.js';\n *\n * AccessibilitySystem.defaultOptions.enabledByDefault = true;\n *\n * const app = new Application()\n * app.init()\n * ```\n */\n_AccessibilitySystem.defaultOptions = {\n  /**\n   * Whether to enable accessibility features on initialization\n   * @default false\n   */\n  enabledByDefault: false,\n  /**\n   * Whether to visually show the accessibility divs for debugging\n   * @default false\n   */\n  debug: false,\n  /**\n   * Whether to activate accessibility when tab key is pressed\n   * @default true\n   */\n  activateOnTab: true,\n  /**\n   * Whether to deactivate accessibility when mouse moves\n   * @default true\n   */\n  deactivateOnMouseMove: true\n};\nlet AccessibilitySystem = _AccessibilitySystem;\n\nexport { AccessibilitySystem };\n//# sourceMappingURL=AccessibilitySystem.mjs.map\n","import { ExtensionType } from '../extensions/Extensions.mjs';\nimport { CanvasObserver } from './CanvasObserver.mjs';\n\n\"use strict\";\nclass DOMPipe {\n  /**\n   * Constructor for the DOMPipe class.\n   * @param renderer - The renderer instance that this DOMPipe will be associated with.\n   */\n  constructor(renderer) {\n    /** Array to keep track of attached DOM elements */\n    this._attachedDomElements = [];\n    this._renderer = renderer;\n    this._renderer.runners.postrender.add(this);\n    this._renderer.runners.init.add(this);\n    this._domElement = document.createElement(\"div\");\n    this._domElement.style.position = \"absolute\";\n    this._domElement.style.top = \"0\";\n    this._domElement.style.left = \"0\";\n    this._domElement.style.pointerEvents = \"none\";\n    this._domElement.style.zIndex = \"1000\";\n  }\n  /** Initializes the DOMPipe, setting up the main DOM element and adding it to the document body. */\n  init() {\n    this._canvasObserver = new CanvasObserver({\n      domElement: this._domElement,\n      renderer: this._renderer\n    });\n  }\n  /**\n   * Adds a renderable DOM container to the list of attached elements.\n   * @param domContainer - The DOM container to be added.\n   * @param _instructionSet - The instruction set (unused).\n   */\n  addRenderable(domContainer, _instructionSet) {\n    if (!this._attachedDomElements.includes(domContainer)) {\n      this._attachedDomElements.push(domContainer);\n    }\n  }\n  /**\n   * Updates a renderable DOM container.\n   * @param _domContainer - The DOM container to be updated (unused).\n   */\n  updateRenderable(_domContainer) {\n  }\n  /**\n   * Validates a renderable DOM container.\n   * @param _domContainer - The DOM container to be validated (unused).\n   * @returns Always returns true as validation is not required.\n   */\n  validateRenderable(_domContainer) {\n    return true;\n  }\n  /** Handles the post-rendering process, ensuring DOM elements are correctly positioned and visible. */\n  postrender() {\n    const attachedDomElements = this._attachedDomElements;\n    if (attachedDomElements.length === 0) {\n      this._domElement.remove();\n      return;\n    }\n    this._canvasObserver.ensureAttached();\n    for (let i = 0; i < attachedDomElements.length; i++) {\n      const domContainer = attachedDomElements[i];\n      const element = domContainer.element;\n      if (!domContainer.parent || domContainer.globalDisplayStatus < 7) {\n        element?.remove();\n        attachedDomElements.splice(i, 1);\n        i--;\n      } else {\n        if (!this._domElement.contains(element)) {\n          element.style.position = \"absolute\";\n          element.style.pointerEvents = \"auto\";\n          this._domElement.appendChild(element);\n        }\n        const wt = domContainer.worldTransform;\n        const anchor = domContainer._anchor;\n        const ax = domContainer.width * anchor.x;\n        const ay = domContainer.height * anchor.y;\n        element.style.transformOrigin = `${ax}px ${ay}px`;\n        element.style.transform = `matrix(${wt.a}, ${wt.b}, ${wt.c}, ${wt.d}, ${wt.tx - ax}, ${wt.ty - ay})`;\n        element.style.opacity = domContainer.groupAlpha.toString();\n      }\n    }\n  }\n  /** Destroys the DOMPipe, removing all attached DOM elements and cleaning up resources. */\n  destroy() {\n    this._renderer.runners.postrender.remove(this);\n    for (let i = 0; i < this._attachedDomElements.length; i++) {\n      const domContainer = this._attachedDomElements[i];\n      domContainer.element?.remove();\n    }\n    this._attachedDomElements.length = 0;\n    this._domElement.remove();\n    this._canvasObserver.destroy();\n    this._renderer = null;\n  }\n}\n/**\n * Static property defining the extension type and name for the DOMPipe.\n * This is used to register the DOMPipe with different rendering pipelines.\n */\nDOMPipe.extension = {\n  type: [\n    ExtensionType.WebGLPipes,\n    ExtensionType.WebGPUPipes,\n    ExtensionType.CanvasPipes\n  ],\n  name: \"dom\"\n};\n\nexport { DOMPipe };\n//# sourceMappingURL=DOMPipe.mjs.map\n","import { UPDATE_PRIORITY } from '../ticker/const.mjs';\nimport { Ticker } from '../ticker/Ticker.mjs';\n\n\"use strict\";\nclass EventsTickerClass {\n  constructor() {\n    /** The frequency that fake events will be fired. */\n    this.interactionFrequency = 10;\n    this._deltaTime = 0;\n    this._didMove = false;\n    this._tickerAdded = false;\n    this._pauseUpdate = true;\n  }\n  /**\n   * Initializes the event ticker.\n   * @param events - The event system.\n   */\n  init(events) {\n    this.removeTickerListener();\n    this.events = events;\n    this.interactionFrequency = 10;\n    this._deltaTime = 0;\n    this._didMove = false;\n    this._tickerAdded = false;\n    this._pauseUpdate = true;\n  }\n  /** Whether to pause the update checks or not. */\n  get pauseUpdate() {\n    return this._pauseUpdate;\n  }\n  set pauseUpdate(paused) {\n    this._pauseUpdate = paused;\n  }\n  /** Adds the ticker listener. */\n  addTickerListener() {\n    if (this._tickerAdded || !this.domElement) {\n      return;\n    }\n    Ticker.system.add(this._tickerUpdate, this, UPDATE_PRIORITY.INTERACTION);\n    this._tickerAdded = true;\n  }\n  /** Removes the ticker listener. */\n  removeTickerListener() {\n    if (!this._tickerAdded) {\n      return;\n    }\n    Ticker.system.remove(this._tickerUpdate, this);\n    this._tickerAdded = false;\n  }\n  /** Sets flag to not fire extra events when the user has already moved there mouse */\n  pointerMoved() {\n    this._didMove = true;\n  }\n  /** Updates the state of interactive objects. */\n  _update() {\n    if (!this.domElement || this._pauseUpdate) {\n      return;\n    }\n    if (this._didMove) {\n      this._didMove = false;\n      return;\n    }\n    const rootPointerEvent = this.events[\"_rootPointerEvent\"];\n    if (this.events.supportsTouchEvents && rootPointerEvent.pointerType === \"touch\") {\n      return;\n    }\n    globalThis.document.dispatchEvent(this.events.supportsPointerEvents ? new PointerEvent(\"pointermove\", {\n      clientX: rootPointerEvent.clientX,\n      clientY: rootPointerEvent.clientY,\n      pointerType: rootPointerEvent.pointerType,\n      pointerId: rootPointerEvent.pointerId\n    }) : new MouseEvent(\"mousemove\", {\n      clientX: rootPointerEvent.clientX,\n      clientY: rootPointerEvent.clientY\n    }));\n  }\n  /**\n   * Updates the state of interactive objects if at least {@link interactionFrequency}\n   * milliseconds have passed since the last invocation.\n   *\n   * Invoked by a throttled ticker update from {@link Ticker.system}.\n   * @param ticker - The throttled ticker.\n   */\n  _tickerUpdate(ticker) {\n    this._deltaTime += ticker.deltaTime;\n    if (this._deltaTime < this.interactionFrequency) {\n      return;\n    }\n    this._deltaTime = 0;\n    this._update();\n  }\n  /** Destroys the event ticker. */\n  destroy() {\n    this.removeTickerListener();\n    this.events = null;\n    this.domElement = null;\n    this._deltaTime = 0;\n    this._didMove = false;\n    this._tickerAdded = false;\n    this._pauseUpdate = true;\n  }\n}\nconst EventsTicker = new EventsTickerClass();\n\nexport { EventsTicker };\n//# sourceMappingURL=EventTicker.mjs.map\n","import { Point } from '../maths/point/Point.mjs';\nimport { FederatedEvent } from './FederatedEvent.mjs';\n\n\"use strict\";\nclass FederatedMouseEvent extends FederatedEvent {\n  constructor() {\n    super(...arguments);\n    /** The coordinates of the mouse event relative to the canvas. */\n    this.client = new Point();\n    /** The movement in this pointer relative to the last `mousemove` event. */\n    this.movement = new Point();\n    /** The offset of the pointer coordinates w.r.t. target Container in world space. This is not supported at the moment. */\n    this.offset = new Point();\n    /** The pointer coordinates in world space. */\n    this.global = new Point();\n    /**\n     * The pointer coordinates in the renderer's {@link AbstractRenderer.screen screen}. This has slightly\n     * different semantics than native PointerEvent screenX/screenY.\n     */\n    this.screen = new Point();\n  }\n  /** @readonly */\n  get clientX() {\n    return this.client.x;\n  }\n  /** @readonly */\n  get clientY() {\n    return this.client.y;\n  }\n  /**\n   * Alias for {@link FederatedMouseEvent.clientX this.clientX}.\n   * @readonly\n   */\n  get x() {\n    return this.clientX;\n  }\n  /**\n   * Alias for {@link FederatedMouseEvent.clientY this.clientY}.\n   * @readonly\n   */\n  get y() {\n    return this.clientY;\n  }\n  /** @readonly */\n  get movementX() {\n    return this.movement.x;\n  }\n  /** @readonly */\n  get movementY() {\n    return this.movement.y;\n  }\n  /** @readonly */\n  get offsetX() {\n    return this.offset.x;\n  }\n  /** @readonly */\n  get offsetY() {\n    return this.offset.y;\n  }\n  /** @readonly */\n  get globalX() {\n    return this.global.x;\n  }\n  /** @readonly */\n  get globalY() {\n    return this.global.y;\n  }\n  /**\n   * The pointer coordinates in the renderer's screen. Alias for `screen.x`.\n   * @readonly\n   */\n  get screenX() {\n    return this.screen.x;\n  }\n  /**\n   * The pointer coordinates in the renderer's screen. Alias for `screen.y`.\n   * @readonly\n   */\n  get screenY() {\n    return this.screen.y;\n  }\n  /**\n   * Converts global coordinates into container-local coordinates.\n   *\n   * This method transforms coordinates from world space to a container's local space,\n   * useful for precise positioning and hit testing.\n   * @param container - The Container to get local coordinates for\n   * @param point - Optional Point object to store the result. If not provided, a new Point will be created\n   * @param globalPos - Optional custom global coordinates. If not provided, the event's global position is used\n   * @returns The local coordinates as a Point object\n   * @example\n   * ```ts\n   * // Basic usage - get local coordinates relative to a container\n   * sprite.on('pointermove', (event: FederatedMouseEvent) => {\n   *     // Get position relative to the sprite\n   *     const localPos = event.getLocalPosition(sprite);\n   *     console.log('Local position:', localPos.x, localPos.y);\n   * });\n   * // Using custom global coordinates\n   * const customGlobal = new Point(100, 100);\n   * sprite.on('pointermove', (event: FederatedMouseEvent) => {\n   *     // Transform custom coordinates\n   *     const localPos = event.getLocalPosition(sprite, undefined, customGlobal);\n   *     console.log('Custom local position:', localPos.x, localPos.y);\n   * });\n   * ```\n   * @see {@link Container.worldTransform} For the transformation matrix\n   * @see {@link Point} For the point class used to store coordinates\n   */\n  getLocalPosition(container, point, globalPos) {\n    return container.worldTransform.applyInverse(globalPos || this.global, point);\n  }\n  /**\n   * Whether the modifier key was pressed when this event natively occurred.\n   * @param key - The modifier key.\n   */\n  getModifierState(key) {\n    return \"getModifierState\" in this.nativeEvent && this.nativeEvent.getModifierState(key);\n  }\n  /**\n   * Not supported.\n   * @param _typeArg\n   * @param _canBubbleArg\n   * @param _cancelableArg\n   * @param _viewArg\n   * @param _detailArg\n   * @param _screenXArg\n   * @param _screenYArg\n   * @param _clientXArg\n   * @param _clientYArg\n   * @param _ctrlKeyArg\n   * @param _altKeyArg\n   * @param _shiftKeyArg\n   * @param _metaKeyArg\n   * @param _buttonArg\n   * @param _relatedTargetArg\n   * @deprecated since 7.0.0\n   * @ignore\n   */\n  // eslint-disable-next-line max-params\n  initMouseEvent(_typeArg, _canBubbleArg, _cancelableArg, _viewArg, _detailArg, _screenXArg, _screenYArg, _clientXArg, _clientYArg, _ctrlKeyArg, _altKeyArg, _shiftKeyArg, _metaKeyArg, _buttonArg, _relatedTargetArg) {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n\nexport { FederatedMouseEvent };\n//# sourceMappingURL=FederatedMouseEvent.mjs.map\n","import { FederatedMouseEvent } from './FederatedMouseEvent.mjs';\n\n\"use strict\";\nclass FederatedPointerEvent extends FederatedMouseEvent {\n  constructor() {\n    super(...arguments);\n    /**\n     * The width of the pointer's contact along the x-axis, measured in CSS pixels.\n     * radiusX of TouchEvents will be represented by this value.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/width\n     */\n    this.width = 0;\n    /**\n     * The height of the pointer's contact along the y-axis, measured in CSS pixels.\n     * radiusY of TouchEvents will be represented by this value.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/height\n     */\n    this.height = 0;\n    /**\n     * Indicates whether or not the pointer device that created the event is the primary pointer.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/isPrimary\n     */\n    this.isPrimary = false;\n  }\n  /**\n   * Only included for completeness for now\n   * @ignore\n   */\n  getCoalescedEvents() {\n    if (this.type === \"pointermove\" || this.type === \"mousemove\" || this.type === \"touchmove\") {\n      return [this];\n    }\n    return [];\n  }\n  /**\n   * Only included for completeness for now\n   * @ignore\n   */\n  getPredictedEvents() {\n    throw new Error(\"getPredictedEvents is not supported!\");\n  }\n}\n\nexport { FederatedPointerEvent };\n//# sourceMappingURL=FederatedPointerEvent.mjs.map\n","import { FederatedMouseEvent } from './FederatedMouseEvent.mjs';\n\n\"use strict\";\nclass FederatedWheelEvent extends FederatedMouseEvent {\n  constructor() {\n    super(...arguments);\n    /**\n     * Units specified in pixels.\n     * @ignore\n     */\n    this.DOM_DELTA_PIXEL = 0;\n    /**\n     * Units specified in lines.\n     * @ignore\n     */\n    this.DOM_DELTA_LINE = 1;\n    /**\n     * Units specified in pages.\n     * @ignore\n     */\n    this.DOM_DELTA_PAGE = 2;\n  }\n}\n/**\n * Units specified in pixels.\n * @ignore\n */\nFederatedWheelEvent.DOM_DELTA_PIXEL = 0;\n/**\n * Units specified in lines.\n * @ignore\n */\nFederatedWheelEvent.DOM_DELTA_LINE = 1;\n/**\n * Units specified in pages.\n * @ignore\n */\nFederatedWheelEvent.DOM_DELTA_PAGE = 2;\n\nexport { FederatedWheelEvent };\n//# sourceMappingURL=FederatedWheelEvent.mjs.map\n","import EventEmitter from 'eventemitter3';\nimport { Point } from '../maths/point/Point.mjs';\nimport { warn } from '../utils/logging/warn.mjs';\nimport { EventsTicker } from './EventTicker.mjs';\nimport { FederatedMouseEvent } from './FederatedMouseEvent.mjs';\nimport { FederatedPointerEvent } from './FederatedPointerEvent.mjs';\nimport { FederatedWheelEvent } from './FederatedWheelEvent.mjs';\n\n\"use strict\";\nconst PROPAGATION_LIMIT = 2048;\nconst tempHitLocation = new Point();\nconst tempLocalMapping = new Point();\nclass EventBoundary {\n  /**\n   * @param rootTarget - The holder of the event boundary.\n   */\n  constructor(rootTarget) {\n    /**\n     * Emits events after they were dispatched into the scene graph.\n     *\n     * This can be used for global events listening, regardless of the scene graph being used. It should\n     * not be used by interactive libraries for normal use.\n     *\n     * Special events that do not bubble all the way to the root target are not emitted from here,\n     * e.g. pointerenter, pointerleave, click.\n     */\n    this.dispatch = new EventEmitter();\n    /**\n     * This flag would emit `pointermove`, `touchmove`, and `mousemove` events on all Containers.\n     *\n     * The `moveOnAll` semantics mirror those of earlier versions of PixiJS. This was disabled in favor of\n     * the Pointer Event API's approach.\n     */\n    this.moveOnAll = false;\n    /** Enables the global move events. `globalpointermove`, `globaltouchmove`, and `globalmousemove` */\n    this.enableGlobalMoveEvents = true;\n    /**\n     * State object for mapping methods.\n     * @see EventBoundary#trackingData\n     */\n    this.mappingState = {\n      trackingData: {}\n    };\n    /**\n     * The event pool maps event constructors to an free pool of instances of those specific events.\n     * @see EventBoundary#allocateEvent\n     * @see EventBoundary#freeEvent\n     */\n    this.eventPool = /* @__PURE__ */ new Map();\n    /** Every interactive element gathered from the scene. Only used in `pointermove` */\n    this._allInteractiveElements = [];\n    /** Every element that passed the hit test. Only used in `pointermove` */\n    this._hitElements = [];\n    /** Whether or not to collect all the interactive elements from the scene. Enabled in `pointermove` */\n    this._isPointerMoveEvent = false;\n    this.rootTarget = rootTarget;\n    this.hitPruneFn = this.hitPruneFn.bind(this);\n    this.hitTestFn = this.hitTestFn.bind(this);\n    this.mapPointerDown = this.mapPointerDown.bind(this);\n    this.mapPointerMove = this.mapPointerMove.bind(this);\n    this.mapPointerOut = this.mapPointerOut.bind(this);\n    this.mapPointerOver = this.mapPointerOver.bind(this);\n    this.mapPointerUp = this.mapPointerUp.bind(this);\n    this.mapPointerUpOutside = this.mapPointerUpOutside.bind(this);\n    this.mapWheel = this.mapWheel.bind(this);\n    this.mappingTable = {};\n    this.addEventMapping(\"pointerdown\", this.mapPointerDown);\n    this.addEventMapping(\"pointermove\", this.mapPointerMove);\n    this.addEventMapping(\"pointerout\", this.mapPointerOut);\n    this.addEventMapping(\"pointerleave\", this.mapPointerOut);\n    this.addEventMapping(\"pointerover\", this.mapPointerOver);\n    this.addEventMapping(\"pointerup\", this.mapPointerUp);\n    this.addEventMapping(\"pointerupoutside\", this.mapPointerUpOutside);\n    this.addEventMapping(\"wheel\", this.mapWheel);\n  }\n  /**\n   * Adds an event mapping for the event `type` handled by `fn`.\n   *\n   * Event mappings can be used to implement additional or custom events. They take an event\n   * coming from the upstream scene (or directly from the {@link EventSystem}) and dispatch new downstream events\n   * generally trickling down and bubbling up to {@link EventBoundary.rootTarget this.rootTarget}.\n   *\n   * To modify the semantics of existing events, the built-in mapping methods of EventBoundary should be overridden\n   * instead.\n   * @param type - The type of upstream event to map.\n   * @param fn - The mapping method. The context of this function must be bound manually, if desired.\n   */\n  addEventMapping(type, fn) {\n    if (!this.mappingTable[type]) {\n      this.mappingTable[type] = [];\n    }\n    this.mappingTable[type].push({\n      fn,\n      priority: 0\n    });\n    this.mappingTable[type].sort((a, b) => a.priority - b.priority);\n  }\n  /**\n   * Dispatches the given event\n   * @param e - The event to dispatch.\n   * @param type - The type of event to dispatch. Defaults to `e.type`.\n   */\n  dispatchEvent(e, type) {\n    e.propagationStopped = false;\n    e.propagationImmediatelyStopped = false;\n    this.propagate(e, type);\n    this.dispatch.emit(type || e.type, e);\n  }\n  /**\n   * Maps the given upstream event through the event boundary and propagates it downstream.\n   * @param e - The event to map.\n   */\n  mapEvent(e) {\n    if (!this.rootTarget) {\n      return;\n    }\n    const mappers = this.mappingTable[e.type];\n    if (mappers) {\n      for (let i = 0, j = mappers.length; i < j; i++) {\n        mappers[i].fn(e);\n      }\n    } else {\n      warn(`[EventBoundary]: Event mapping not defined for ${e.type}`);\n    }\n  }\n  /**\n   * Finds the Container that is the target of a event at the given coordinates.\n   *\n   * The passed (x,y) coordinates are in the world space above this event boundary.\n   * @param x - The x coordinate of the event.\n   * @param y - The y coordinate of the event.\n   */\n  hitTest(x, y) {\n    EventsTicker.pauseUpdate = true;\n    const useMove = this._isPointerMoveEvent && this.enableGlobalMoveEvents;\n    const fn = useMove ? \"hitTestMoveRecursive\" : \"hitTestRecursive\";\n    const invertedPath = this[fn](\n      this.rootTarget,\n      this.rootTarget.eventMode,\n      tempHitLocation.set(x, y),\n      this.hitTestFn,\n      this.hitPruneFn\n    );\n    return invertedPath && invertedPath[0];\n  }\n  /**\n   * Propagate the passed event from from {@link EventBoundary.rootTarget this.rootTarget} to its\n   * target `e.target`.\n   * @param e - The event to propagate.\n   * @param type - The type of event to propagate. Defaults to `e.type`.\n   */\n  propagate(e, type) {\n    if (!e.target) {\n      return;\n    }\n    const composedPath = e.composedPath();\n    e.eventPhase = e.CAPTURING_PHASE;\n    for (let i = 0, j = composedPath.length - 1; i < j; i++) {\n      e.currentTarget = composedPath[i];\n      this.notifyTarget(e, type);\n      if (e.propagationStopped || e.propagationImmediatelyStopped)\n        return;\n    }\n    e.eventPhase = e.AT_TARGET;\n    e.currentTarget = e.target;\n    this.notifyTarget(e, type);\n    if (e.propagationStopped || e.propagationImmediatelyStopped)\n      return;\n    e.eventPhase = e.BUBBLING_PHASE;\n    for (let i = composedPath.length - 2; i >= 0; i--) {\n      e.currentTarget = composedPath[i];\n      this.notifyTarget(e, type);\n      if (e.propagationStopped || e.propagationImmediatelyStopped)\n        return;\n    }\n  }\n  /**\n   * Emits the event `e` to all interactive containers. The event is propagated in the bubbling phase always.\n   *\n   * This is used in the `globalpointermove` event.\n   * @param e - The emitted event.\n   * @param type - The listeners to notify.\n   * @param targets - The targets to notify.\n   */\n  all(e, type, targets = this._allInteractiveElements) {\n    if (targets.length === 0)\n      return;\n    e.eventPhase = e.BUBBLING_PHASE;\n    const events = Array.isArray(type) ? type : [type];\n    for (let i = targets.length - 1; i >= 0; i--) {\n      events.forEach((event) => {\n        e.currentTarget = targets[i];\n        this.notifyTarget(e, event);\n      });\n    }\n  }\n  /**\n   * Finds the propagation path from {@link EventBoundary.rootTarget rootTarget} to the passed\n   * `target`. The last element in the path is `target`.\n   * @param target - The target to find the propagation path to.\n   */\n  propagationPath(target) {\n    const propagationPath = [target];\n    for (let i = 0; i < PROPAGATION_LIMIT && (target !== this.rootTarget && target.parent); i++) {\n      if (!target.parent) {\n        throw new Error(\"Cannot find propagation path to disconnected target\");\n      }\n      propagationPath.push(target.parent);\n      target = target.parent;\n    }\n    propagationPath.reverse();\n    return propagationPath;\n  }\n  hitTestMoveRecursive(currentTarget, eventMode, location, testFn, pruneFn, ignore = false) {\n    let shouldReturn = false;\n    if (this._interactivePrune(currentTarget))\n      return null;\n    if (currentTarget.eventMode === \"dynamic\" || eventMode === \"dynamic\") {\n      EventsTicker.pauseUpdate = false;\n    }\n    if (currentTarget.interactiveChildren && currentTarget.children) {\n      const children = currentTarget.children;\n      for (let i = children.length - 1; i >= 0; i--) {\n        const child = children[i];\n        const nestedHit = this.hitTestMoveRecursive(\n          child,\n          this._isInteractive(eventMode) ? eventMode : child.eventMode,\n          location,\n          testFn,\n          pruneFn,\n          ignore || pruneFn(currentTarget, location)\n        );\n        if (nestedHit) {\n          if (nestedHit.length > 0 && !nestedHit[nestedHit.length - 1].parent) {\n            continue;\n          }\n          const isInteractive = currentTarget.isInteractive();\n          if (nestedHit.length > 0 || isInteractive) {\n            if (isInteractive)\n              this._allInteractiveElements.push(currentTarget);\n            nestedHit.push(currentTarget);\n          }\n          if (this._hitElements.length === 0)\n            this._hitElements = nestedHit;\n          shouldReturn = true;\n        }\n      }\n    }\n    const isInteractiveMode = this._isInteractive(eventMode);\n    const isInteractiveTarget = currentTarget.isInteractive();\n    if (isInteractiveTarget && isInteractiveTarget)\n      this._allInteractiveElements.push(currentTarget);\n    if (ignore || this._hitElements.length > 0)\n      return null;\n    if (shouldReturn)\n      return this._hitElements;\n    if (isInteractiveMode && (!pruneFn(currentTarget, location) && testFn(currentTarget, location))) {\n      return isInteractiveTarget ? [currentTarget] : [];\n    }\n    return null;\n  }\n  /**\n   * Recursive implementation for {@link EventBoundary.hitTest hitTest}.\n   * @param currentTarget - The Container that is to be hit tested.\n   * @param eventMode - The event mode for the `currentTarget` or one of its parents.\n   * @param location - The location that is being tested for overlap.\n   * @param testFn - Callback that determines whether the target passes hit testing. This callback\n   *  can assume that `pruneFn` failed to prune the container.\n   * @param pruneFn - Callback that determiness whether the target and all of its children\n   *  cannot pass the hit test. It is used as a preliminary optimization to prune entire subtrees\n   *  of the scene graph.\n   * @returns An array holding the hit testing target and all its ancestors in order. The first element\n   *  is the target itself and the last is {@link EventBoundary.rootTarget rootTarget}. This is the opposite\n   *  order w.r.t. the propagation path. If no hit testing target is found, null is returned.\n   */\n  hitTestRecursive(currentTarget, eventMode, location, testFn, pruneFn) {\n    if (this._interactivePrune(currentTarget) || pruneFn(currentTarget, location)) {\n      return null;\n    }\n    if (currentTarget.eventMode === \"dynamic\" || eventMode === \"dynamic\") {\n      EventsTicker.pauseUpdate = false;\n    }\n    if (currentTarget.interactiveChildren && currentTarget.children) {\n      const children = currentTarget.children;\n      const relativeLocation = location;\n      for (let i = children.length - 1; i >= 0; i--) {\n        const child = children[i];\n        const nestedHit = this.hitTestRecursive(\n          child,\n          this._isInteractive(eventMode) ? eventMode : child.eventMode,\n          relativeLocation,\n          testFn,\n          pruneFn\n        );\n        if (nestedHit) {\n          if (nestedHit.length > 0 && !nestedHit[nestedHit.length - 1].parent) {\n            continue;\n          }\n          const isInteractive = currentTarget.isInteractive();\n          if (nestedHit.length > 0 || isInteractive)\n            nestedHit.push(currentTarget);\n          return nestedHit;\n        }\n      }\n    }\n    const isInteractiveMode = this._isInteractive(eventMode);\n    const isInteractiveTarget = currentTarget.isInteractive();\n    if (isInteractiveMode && testFn(currentTarget, location)) {\n      return isInteractiveTarget ? [currentTarget] : [];\n    }\n    return null;\n  }\n  _isInteractive(int) {\n    return int === \"static\" || int === \"dynamic\";\n  }\n  _interactivePrune(container) {\n    if (!container || !container.visible || !container.renderable || !container.measurable) {\n      return true;\n    }\n    if (container.eventMode === \"none\") {\n      return true;\n    }\n    if (container.eventMode === \"passive\" && !container.interactiveChildren) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Checks whether the container or any of its children cannot pass the hit test at all.\n   *\n   * {@link EventBoundary}'s implementation uses the {@link Container.hitArea hitArea}\n   * and {@link Container._maskEffect} for pruning.\n   * @param container - The container to prune.\n   * @param location - The location to test for overlap.\n   */\n  hitPruneFn(container, location) {\n    if (container.hitArea) {\n      container.worldTransform.applyInverse(location, tempLocalMapping);\n      if (!container.hitArea.contains(tempLocalMapping.x, tempLocalMapping.y)) {\n        return true;\n      }\n    }\n    if (container.effects && container.effects.length) {\n      for (let i = 0; i < container.effects.length; i++) {\n        const effect = container.effects[i];\n        if (effect.containsPoint) {\n          const effectContainsPoint = effect.containsPoint(location, this.hitTestFn);\n          if (!effectContainsPoint) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n  /**\n   * Checks whether the container passes hit testing for the given location.\n   * @param container - The container to test.\n   * @param location - The location to test for overlap.\n   * @returns - Whether `container` passes hit testing for `location`.\n   */\n  hitTestFn(container, location) {\n    if (container.hitArea) {\n      return true;\n    }\n    if (container?.containsPoint) {\n      container.worldTransform.applyInverse(location, tempLocalMapping);\n      return container.containsPoint(tempLocalMapping);\n    }\n    return false;\n  }\n  /**\n   * Notify all the listeners to the event's `currentTarget`.\n   *\n   * If the `currentTarget` contains the property `on<type>`, then it is called here,\n   * simulating the behavior from version 6.x and prior.\n   * @param e - The event passed to the target.\n   * @param type - The type of event to notify. Defaults to `e.type`.\n   */\n  notifyTarget(e, type) {\n    if (!e.currentTarget.isInteractive()) {\n      return;\n    }\n    type ?? (type = e.type);\n    const handlerKey = `on${type}`;\n    e.currentTarget[handlerKey]?.(e);\n    const key = e.eventPhase === e.CAPTURING_PHASE || e.eventPhase === e.AT_TARGET ? `${type}capture` : type;\n    this._notifyListeners(e, key);\n    if (e.eventPhase === e.AT_TARGET) {\n      this._notifyListeners(e, type);\n    }\n  }\n  /**\n   * Maps the upstream `pointerdown` events to a downstream `pointerdown` event.\n   *\n   * `touchstart`, `rightdown`, `mousedown` events are also dispatched for specific pointer types.\n   * @param from - The upstream `pointerdown` event.\n   */\n  mapPointerDown(from) {\n    if (!(from instanceof FederatedPointerEvent)) {\n      warn(\"EventBoundary cannot map a non-pointer event as a pointer event\");\n      return;\n    }\n    const e = this.createPointerEvent(from);\n    this.dispatchEvent(e, \"pointerdown\");\n    if (e.pointerType === \"touch\") {\n      this.dispatchEvent(e, \"touchstart\");\n    } else if (e.pointerType === \"mouse\" || e.pointerType === \"pen\") {\n      const isRightButton = e.button === 2;\n      this.dispatchEvent(e, isRightButton ? \"rightdown\" : \"mousedown\");\n    }\n    const trackingData = this.trackingData(from.pointerId);\n    trackingData.pressTargetsByButton[from.button] = e.composedPath();\n    this.freeEvent(e);\n  }\n  /**\n   * Maps the upstream `pointermove` to downstream `pointerout`, `pointerover`, and `pointermove` events, in that order.\n   *\n   * The tracking data for the specific pointer has an updated `overTarget`. `mouseout`, `mouseover`,\n   * `mousemove`, and `touchmove` events are fired as well for specific pointer types.\n   * @param from - The upstream `pointermove` event.\n   */\n  mapPointerMove(from) {\n    if (!(from instanceof FederatedPointerEvent)) {\n      warn(\"EventBoundary cannot map a non-pointer event as a pointer event\");\n      return;\n    }\n    this._allInteractiveElements.length = 0;\n    this._hitElements.length = 0;\n    this._isPointerMoveEvent = true;\n    const e = this.createPointerEvent(from);\n    this._isPointerMoveEvent = false;\n    const isMouse = e.pointerType === \"mouse\" || e.pointerType === \"pen\";\n    const trackingData = this.trackingData(from.pointerId);\n    const outTarget = this.findMountedTarget(trackingData.overTargets);\n    if (trackingData.overTargets?.length > 0 && outTarget !== e.target) {\n      const outType = from.type === \"mousemove\" ? \"mouseout\" : \"pointerout\";\n      const outEvent = this.createPointerEvent(from, outType, outTarget);\n      this.dispatchEvent(outEvent, \"pointerout\");\n      if (isMouse)\n        this.dispatchEvent(outEvent, \"mouseout\");\n      if (!e.composedPath().includes(outTarget)) {\n        const leaveEvent = this.createPointerEvent(from, \"pointerleave\", outTarget);\n        leaveEvent.eventPhase = leaveEvent.AT_TARGET;\n        while (leaveEvent.target && !e.composedPath().includes(leaveEvent.target)) {\n          leaveEvent.currentTarget = leaveEvent.target;\n          this.notifyTarget(leaveEvent);\n          if (isMouse)\n            this.notifyTarget(leaveEvent, \"mouseleave\");\n          leaveEvent.target = leaveEvent.target.parent;\n        }\n        this.freeEvent(leaveEvent);\n      }\n      this.freeEvent(outEvent);\n    }\n    if (outTarget !== e.target) {\n      const overType = from.type === \"mousemove\" ? \"mouseover\" : \"pointerover\";\n      const overEvent = this.clonePointerEvent(e, overType);\n      this.dispatchEvent(overEvent, \"pointerover\");\n      if (isMouse)\n        this.dispatchEvent(overEvent, \"mouseover\");\n      let overTargetAncestor = outTarget?.parent;\n      while (overTargetAncestor && overTargetAncestor !== this.rootTarget.parent) {\n        if (overTargetAncestor === e.target)\n          break;\n        overTargetAncestor = overTargetAncestor.parent;\n      }\n      const didPointerEnter = !overTargetAncestor || overTargetAncestor === this.rootTarget.parent;\n      if (didPointerEnter) {\n        const enterEvent = this.clonePointerEvent(e, \"pointerenter\");\n        enterEvent.eventPhase = enterEvent.AT_TARGET;\n        while (enterEvent.target && enterEvent.target !== outTarget && enterEvent.target !== this.rootTarget.parent) {\n          enterEvent.currentTarget = enterEvent.target;\n          this.notifyTarget(enterEvent);\n          if (isMouse)\n            this.notifyTarget(enterEvent, \"mouseenter\");\n          enterEvent.target = enterEvent.target.parent;\n        }\n        this.freeEvent(enterEvent);\n      }\n      this.freeEvent(overEvent);\n    }\n    const allMethods = [];\n    const allowGlobalPointerEvents = this.enableGlobalMoveEvents ?? true;\n    this.moveOnAll ? allMethods.push(\"pointermove\") : this.dispatchEvent(e, \"pointermove\");\n    allowGlobalPointerEvents && allMethods.push(\"globalpointermove\");\n    if (e.pointerType === \"touch\") {\n      this.moveOnAll ? allMethods.splice(1, 0, \"touchmove\") : this.dispatchEvent(e, \"touchmove\");\n      allowGlobalPointerEvents && allMethods.push(\"globaltouchmove\");\n    }\n    if (isMouse) {\n      this.moveOnAll ? allMethods.splice(1, 0, \"mousemove\") : this.dispatchEvent(e, \"mousemove\");\n      allowGlobalPointerEvents && allMethods.push(\"globalmousemove\");\n      this.cursor = e.target?.cursor;\n    }\n    if (allMethods.length > 0) {\n      this.all(e, allMethods);\n    }\n    this._allInteractiveElements.length = 0;\n    this._hitElements.length = 0;\n    trackingData.overTargets = e.composedPath();\n    this.freeEvent(e);\n  }\n  /**\n   * Maps the upstream `pointerover` to downstream `pointerover` and `pointerenter` events, in that order.\n   *\n   * The tracking data for the specific pointer gets a new `overTarget`.\n   * @param from - The upstream `pointerover` event.\n   */\n  mapPointerOver(from) {\n    if (!(from instanceof FederatedPointerEvent)) {\n      warn(\"EventBoundary cannot map a non-pointer event as a pointer event\");\n      return;\n    }\n    const trackingData = this.trackingData(from.pointerId);\n    const e = this.createPointerEvent(from);\n    const isMouse = e.pointerType === \"mouse\" || e.pointerType === \"pen\";\n    this.dispatchEvent(e, \"pointerover\");\n    if (isMouse)\n      this.dispatchEvent(e, \"mouseover\");\n    if (e.pointerType === \"mouse\")\n      this.cursor = e.target?.cursor;\n    const enterEvent = this.clonePointerEvent(e, \"pointerenter\");\n    enterEvent.eventPhase = enterEvent.AT_TARGET;\n    while (enterEvent.target && enterEvent.target !== this.rootTarget.parent) {\n      enterEvent.currentTarget = enterEvent.target;\n      this.notifyTarget(enterEvent);\n      if (isMouse)\n        this.notifyTarget(enterEvent, \"mouseenter\");\n      enterEvent.target = enterEvent.target.parent;\n    }\n    trackingData.overTargets = e.composedPath();\n    this.freeEvent(e);\n    this.freeEvent(enterEvent);\n  }\n  /**\n   * Maps the upstream `pointerout` to downstream `pointerout`, `pointerleave` events, in that order.\n   *\n   * The tracking data for the specific pointer is cleared of a `overTarget`.\n   * @param from - The upstream `pointerout` event.\n   */\n  mapPointerOut(from) {\n    if (!(from instanceof FederatedPointerEvent)) {\n      warn(\"EventBoundary cannot map a non-pointer event as a pointer event\");\n      return;\n    }\n    const trackingData = this.trackingData(from.pointerId);\n    if (trackingData.overTargets) {\n      const isMouse = from.pointerType === \"mouse\" || from.pointerType === \"pen\";\n      const outTarget = this.findMountedTarget(trackingData.overTargets);\n      const outEvent = this.createPointerEvent(from, \"pointerout\", outTarget);\n      this.dispatchEvent(outEvent);\n      if (isMouse)\n        this.dispatchEvent(outEvent, \"mouseout\");\n      const leaveEvent = this.createPointerEvent(from, \"pointerleave\", outTarget);\n      leaveEvent.eventPhase = leaveEvent.AT_TARGET;\n      while (leaveEvent.target && leaveEvent.target !== this.rootTarget.parent) {\n        leaveEvent.currentTarget = leaveEvent.target;\n        this.notifyTarget(leaveEvent);\n        if (isMouse)\n          this.notifyTarget(leaveEvent, \"mouseleave\");\n        leaveEvent.target = leaveEvent.target.parent;\n      }\n      trackingData.overTargets = null;\n      this.freeEvent(outEvent);\n      this.freeEvent(leaveEvent);\n    }\n    this.cursor = null;\n  }\n  /**\n   * Maps the upstream `pointerup` event to downstream `pointerup`, `pointerupoutside`,\n   * and `click`/`rightclick`/`pointertap` events, in that order.\n   *\n   * The `pointerupoutside` event bubbles from the original `pointerdown` target to the most specific\n   * ancestor of the `pointerdown` and `pointerup` targets, which is also the `click` event's target. `touchend`,\n   * `rightup`, `mouseup`, `touchendoutside`, `rightupoutside`, `mouseupoutside`, and `tap` are fired as well for\n   * specific pointer types.\n   * @param from - The upstream `pointerup` event.\n   */\n  mapPointerUp(from) {\n    if (!(from instanceof FederatedPointerEvent)) {\n      warn(\"EventBoundary cannot map a non-pointer event as a pointer event\");\n      return;\n    }\n    const now = performance.now();\n    const e = this.createPointerEvent(from);\n    this.dispatchEvent(e, \"pointerup\");\n    if (e.pointerType === \"touch\") {\n      this.dispatchEvent(e, \"touchend\");\n    } else if (e.pointerType === \"mouse\" || e.pointerType === \"pen\") {\n      const isRightButton = e.button === 2;\n      this.dispatchEvent(e, isRightButton ? \"rightup\" : \"mouseup\");\n    }\n    const trackingData = this.trackingData(from.pointerId);\n    const pressTarget = this.findMountedTarget(trackingData.pressTargetsByButton[from.button]);\n    let clickTarget = pressTarget;\n    if (pressTarget && !e.composedPath().includes(pressTarget)) {\n      let currentTarget = pressTarget;\n      while (currentTarget && !e.composedPath().includes(currentTarget)) {\n        e.currentTarget = currentTarget;\n        this.notifyTarget(e, \"pointerupoutside\");\n        if (e.pointerType === \"touch\") {\n          this.notifyTarget(e, \"touchendoutside\");\n        } else if (e.pointerType === \"mouse\" || e.pointerType === \"pen\") {\n          const isRightButton = e.button === 2;\n          this.notifyTarget(e, isRightButton ? \"rightupoutside\" : \"mouseupoutside\");\n        }\n        currentTarget = currentTarget.parent;\n      }\n      delete trackingData.pressTargetsByButton[from.button];\n      clickTarget = currentTarget;\n    }\n    if (clickTarget) {\n      const clickEvent = this.clonePointerEvent(e, \"click\");\n      clickEvent.target = clickTarget;\n      clickEvent.path = null;\n      if (!trackingData.clicksByButton[from.button]) {\n        trackingData.clicksByButton[from.button] = {\n          clickCount: 0,\n          target: clickEvent.target,\n          timeStamp: now\n        };\n      }\n      const clickHistory = trackingData.clicksByButton[from.button];\n      if (clickHistory.target === clickEvent.target && now - clickHistory.timeStamp < 200) {\n        ++clickHistory.clickCount;\n      } else {\n        clickHistory.clickCount = 1;\n      }\n      clickHistory.target = clickEvent.target;\n      clickHistory.timeStamp = now;\n      clickEvent.detail = clickHistory.clickCount;\n      if (clickEvent.pointerType === \"mouse\") {\n        const isRightButton = clickEvent.button === 2;\n        this.dispatchEvent(clickEvent, isRightButton ? \"rightclick\" : \"click\");\n      } else if (clickEvent.pointerType === \"touch\") {\n        this.dispatchEvent(clickEvent, \"tap\");\n      }\n      this.dispatchEvent(clickEvent, \"pointertap\");\n      this.freeEvent(clickEvent);\n    }\n    this.freeEvent(e);\n  }\n  /**\n   * Maps the upstream `pointerupoutside` event to a downstream `pointerupoutside` event, bubbling from the original\n   * `pointerdown` target to `rootTarget`.\n   *\n   * (The most specific ancestor of the `pointerdown` event and the `pointerup` event must the\n   * `{@link EventBoundary}'s root because the `pointerup` event occurred outside of the boundary.)\n   *\n   * `touchendoutside`, `mouseupoutside`, and `rightupoutside` events are fired as well for specific pointer\n   * types. The tracking data for the specific pointer is cleared of a `pressTarget`.\n   * @param from - The upstream `pointerupoutside` event.\n   */\n  mapPointerUpOutside(from) {\n    if (!(from instanceof FederatedPointerEvent)) {\n      warn(\"EventBoundary cannot map a non-pointer event as a pointer event\");\n      return;\n    }\n    const trackingData = this.trackingData(from.pointerId);\n    const pressTarget = this.findMountedTarget(trackingData.pressTargetsByButton[from.button]);\n    const e = this.createPointerEvent(from);\n    if (pressTarget) {\n      let currentTarget = pressTarget;\n      while (currentTarget) {\n        e.currentTarget = currentTarget;\n        this.notifyTarget(e, \"pointerupoutside\");\n        if (e.pointerType === \"touch\") {\n          this.notifyTarget(e, \"touchendoutside\");\n        } else if (e.pointerType === \"mouse\" || e.pointerType === \"pen\") {\n          this.notifyTarget(e, e.button === 2 ? \"rightupoutside\" : \"mouseupoutside\");\n        }\n        currentTarget = currentTarget.parent;\n      }\n      delete trackingData.pressTargetsByButton[from.button];\n    }\n    this.freeEvent(e);\n  }\n  /**\n   * Maps the upstream `wheel` event to a downstream `wheel` event.\n   * @param from - The upstream `wheel` event.\n   */\n  mapWheel(from) {\n    if (!(from instanceof FederatedWheelEvent)) {\n      warn(\"EventBoundary cannot map a non-wheel event as a wheel event\");\n      return;\n    }\n    const wheelEvent = this.createWheelEvent(from);\n    this.dispatchEvent(wheelEvent);\n    this.freeEvent(wheelEvent);\n  }\n  /**\n   * Finds the most specific event-target in the given propagation path that is still mounted in the scene graph.\n   *\n   * This is used to find the correct `pointerup` and `pointerout` target in the case that the original `pointerdown`\n   * or `pointerover` target was unmounted from the scene graph.\n   * @param propagationPath - The propagation path was valid in the past.\n   * @returns - The most specific event-target still mounted at the same location in the scene graph.\n   */\n  findMountedTarget(propagationPath) {\n    if (!propagationPath) {\n      return null;\n    }\n    let currentTarget = propagationPath[0];\n    for (let i = 1; i < propagationPath.length; i++) {\n      if (propagationPath[i].parent === currentTarget) {\n        currentTarget = propagationPath[i];\n      } else {\n        break;\n      }\n    }\n    return currentTarget;\n  }\n  /**\n   * Creates an event whose `originalEvent` is `from`, with an optional `type` and `target` override.\n   *\n   * The event is allocated using {@link EventBoundary#allocateEvent this.allocateEvent}.\n   * @param from - The `originalEvent` for the returned event.\n   * @param [type=from.type] - The type of the returned event.\n   * @param target - The target of the returned event.\n   */\n  createPointerEvent(from, type, target) {\n    const event = this.allocateEvent(FederatedPointerEvent);\n    this.copyPointerData(from, event);\n    this.copyMouseData(from, event);\n    this.copyData(from, event);\n    event.nativeEvent = from.nativeEvent;\n    event.originalEvent = from;\n    event.target = target ?? this.hitTest(event.global.x, event.global.y) ?? this._hitElements[0];\n    if (typeof type === \"string\") {\n      event.type = type;\n    }\n    return event;\n  }\n  /**\n   * Creates a wheel event whose `originalEvent` is `from`.\n   *\n   * The event is allocated using {@link EventBoundary#allocateEvent this.allocateEvent}.\n   * @param from - The upstream wheel event.\n   */\n  createWheelEvent(from) {\n    const event = this.allocateEvent(FederatedWheelEvent);\n    this.copyWheelData(from, event);\n    this.copyMouseData(from, event);\n    this.copyData(from, event);\n    event.nativeEvent = from.nativeEvent;\n    event.originalEvent = from;\n    event.target = this.hitTest(event.global.x, event.global.y);\n    return event;\n  }\n  /**\n   * Clones the event `from`, with an optional `type` override.\n   *\n   * The event is allocated using {@link EventBoundary#allocateEvent this.allocateEvent}.\n   * @param from - The event to clone.\n   * @param [type=from.type] - The type of the returned event.\n   */\n  clonePointerEvent(from, type) {\n    const event = this.allocateEvent(FederatedPointerEvent);\n    event.nativeEvent = from.nativeEvent;\n    event.originalEvent = from.originalEvent;\n    this.copyPointerData(from, event);\n    this.copyMouseData(from, event);\n    this.copyData(from, event);\n    event.target = from.target;\n    event.path = from.composedPath().slice();\n    event.type = type ?? event.type;\n    return event;\n  }\n  /**\n   * Copies wheel {@link FederatedWheelEvent} data from `from` into `to`.\n   *\n   * The following properties are copied:\n   * + deltaMode\n   * + deltaX\n   * + deltaY\n   * + deltaZ\n   * @param from - The event to copy data from.\n   * @param to - The event to copy data into.\n   */\n  copyWheelData(from, to) {\n    to.deltaMode = from.deltaMode;\n    to.deltaX = from.deltaX;\n    to.deltaY = from.deltaY;\n    to.deltaZ = from.deltaZ;\n  }\n  /**\n   * Copies pointer {@link FederatedPointerEvent} data from `from` into `to`.\n   *\n   * The following properties are copied:\n   * + pointerId\n   * + width\n   * + height\n   * + isPrimary\n   * + pointerType\n   * + pressure\n   * + tangentialPressure\n   * + tiltX\n   * + tiltY\n   * @param from - The event to copy data from.\n   * @param to - The event to copy data into.\n   */\n  copyPointerData(from, to) {\n    if (!(from instanceof FederatedPointerEvent && to instanceof FederatedPointerEvent))\n      return;\n    to.pointerId = from.pointerId;\n    to.width = from.width;\n    to.height = from.height;\n    to.isPrimary = from.isPrimary;\n    to.pointerType = from.pointerType;\n    to.pressure = from.pressure;\n    to.tangentialPressure = from.tangentialPressure;\n    to.tiltX = from.tiltX;\n    to.tiltY = from.tiltY;\n    to.twist = from.twist;\n  }\n  /**\n   * Copies mouse {@link FederatedMouseEvent} data from `from` to `to`.\n   *\n   * The following properties are copied:\n   * + altKey\n   * + button\n   * + buttons\n   * + clientX\n   * + clientY\n   * + metaKey\n   * + movementX\n   * + movementY\n   * + pageX\n   * + pageY\n   * + x\n   * + y\n   * + screen\n   * + shiftKey\n   * + global\n   * @param from - The event to copy data from.\n   * @param to - The event to copy data into.\n   */\n  copyMouseData(from, to) {\n    if (!(from instanceof FederatedMouseEvent && to instanceof FederatedMouseEvent))\n      return;\n    to.altKey = from.altKey;\n    to.button = from.button;\n    to.buttons = from.buttons;\n    to.client.copyFrom(from.client);\n    to.ctrlKey = from.ctrlKey;\n    to.metaKey = from.metaKey;\n    to.movement.copyFrom(from.movement);\n    to.screen.copyFrom(from.screen);\n    to.shiftKey = from.shiftKey;\n    to.global.copyFrom(from.global);\n  }\n  /**\n   * Copies base {@link FederatedEvent} data from `from` into `to`.\n   *\n   * The following properties are copied:\n   * + isTrusted\n   * + srcElement\n   * + timeStamp\n   * + type\n   * @param from - The event to copy data from.\n   * @param to - The event to copy data into.\n   */\n  copyData(from, to) {\n    to.isTrusted = from.isTrusted;\n    to.srcElement = from.srcElement;\n    to.timeStamp = performance.now();\n    to.type = from.type;\n    to.detail = from.detail;\n    to.view = from.view;\n    to.which = from.which;\n    to.layer.copyFrom(from.layer);\n    to.page.copyFrom(from.page);\n  }\n  /**\n   * @param id - The pointer ID.\n   * @returns The tracking data stored for the given pointer. If no data exists, a blank\n   *  state will be created.\n   */\n  trackingData(id) {\n    if (!this.mappingState.trackingData[id]) {\n      this.mappingState.trackingData[id] = {\n        pressTargetsByButton: {},\n        clicksByButton: {},\n        overTarget: null\n      };\n    }\n    return this.mappingState.trackingData[id];\n  }\n  /**\n   * Allocate a specific type of event from {@link EventBoundary#eventPool this.eventPool}.\n   *\n   * This allocation is constructor-agnostic, as long as it only takes one argument - this event\n   * boundary.\n   * @param constructor - The event's constructor.\n   * @returns An event of the given type.\n   */\n  allocateEvent(constructor) {\n    if (!this.eventPool.has(constructor)) {\n      this.eventPool.set(constructor, []);\n    }\n    const event = this.eventPool.get(constructor).pop() || new constructor(this);\n    event.eventPhase = event.NONE;\n    event.currentTarget = null;\n    event.defaultPrevented = false;\n    event.path = null;\n    event.target = null;\n    return event;\n  }\n  /**\n   * Frees the event and puts it back into the event pool.\n   *\n   * It is illegal to reuse the event until it is allocated again, using `this.allocateEvent`.\n   *\n   * It is also advised that events not allocated from {@link EventBoundary#allocateEvent this.allocateEvent}\n   * not be freed. This is because of the possibility that the same event is freed twice, which can cause\n   * it to be allocated twice & result in overwriting.\n   * @param event - The event to be freed.\n   * @throws Error if the event is managed by another event boundary.\n   */\n  freeEvent(event) {\n    if (event.manager !== this)\n      throw new Error(\"It is illegal to free an event not managed by this EventBoundary!\");\n    const constructor = event.constructor;\n    if (!this.eventPool.has(constructor)) {\n      this.eventPool.set(constructor, []);\n    }\n    this.eventPool.get(constructor).push(event);\n  }\n  /**\n   * Similar to {@link EventEmitter.emit}, except it stops if the `propagationImmediatelyStopped` flag\n   * is set on the event.\n   * @param e - The event to call each listener with.\n   * @param type - The event key.\n   */\n  _notifyListeners(e, type) {\n    const listeners = e.currentTarget._events[type];\n    if (!listeners)\n      return;\n    if (\"fn\" in listeners) {\n      if (listeners.once)\n        e.currentTarget.removeListener(type, listeners.fn, void 0, true);\n      listeners.fn.call(listeners.context, e);\n    } else {\n      for (let i = 0, j = listeners.length; i < j && !e.propagationImmediatelyStopped; i++) {\n        if (listeners[i].once)\n          e.currentTarget.removeListener(type, listeners[i].fn, void 0, true);\n        listeners[i].fn.call(listeners[i].context, e);\n      }\n    }\n  }\n}\n\nexport { EventBoundary };\n//# sourceMappingURL=EventBoundary.mjs.map\n","import { ExtensionType } from '../extensions/Extensions.mjs';\nimport { EventBoundary } from './EventBoundary.mjs';\nimport { EventsTicker } from './EventTicker.mjs';\nimport { FederatedPointerEvent } from './FederatedPointerEvent.mjs';\nimport { FederatedWheelEvent } from './FederatedWheelEvent.mjs';\n\n\"use strict\";\nconst MOUSE_POINTER_ID = 1;\nconst TOUCH_TO_POINTER = {\n  touchstart: \"pointerdown\",\n  touchend: \"pointerup\",\n  touchendoutside: \"pointerupoutside\",\n  touchmove: \"pointermove\",\n  touchcancel: \"pointercancel\"\n};\nconst _EventSystem = class _EventSystem {\n  /**\n   * @param {Renderer} renderer\n   */\n  constructor(renderer) {\n    /**\n     * Indicates whether the current device supports touch events according to the W3C Touch Events spec.\n     * This is used to determine the appropriate event handling strategy.\n     * @see {@link https://www.w3.org/TR/touch-events/} W3C Touch Events Specification\n     * @readonly\n     * @default 'ontouchstart' in globalThis\n     */\n    this.supportsTouchEvents = \"ontouchstart\" in globalThis;\n    /**\n     * Indicates whether the current device supports pointer events according to the W3C Pointer Events spec.\n     * Used to optimize event handling and provide more consistent cross-device interaction.\n     * @see {@link https://www.w3.org/TR/pointerevents/} W3C Pointer Events Specification\n     * @readonly\n     * @default !!globalThis.PointerEvent\n     */\n    this.supportsPointerEvents = !!globalThis.PointerEvent;\n    /**\n     * The DOM element to which the root event listeners are bound. This is automatically set to\n     * the renderer's {@link Renderer#view view}.\n     */\n    this.domElement = null;\n    /** The resolution used to convert between the DOM client space into world space. */\n    this.resolution = 1;\n    this.renderer = renderer;\n    this.rootBoundary = new EventBoundary(null);\n    EventsTicker.init(this);\n    this.autoPreventDefault = true;\n    this._eventsAdded = false;\n    this._rootPointerEvent = new FederatedPointerEvent(null);\n    this._rootWheelEvent = new FederatedWheelEvent(null);\n    this.cursorStyles = {\n      default: \"inherit\",\n      pointer: \"pointer\"\n    };\n    this.features = new Proxy({ ..._EventSystem.defaultEventFeatures }, {\n      set: (target, key, value) => {\n        if (key === \"globalMove\") {\n          this.rootBoundary.enableGlobalMoveEvents = value;\n        }\n        target[key] = value;\n        return true;\n      }\n    });\n    this._onPointerDown = this._onPointerDown.bind(this);\n    this._onPointerMove = this._onPointerMove.bind(this);\n    this._onPointerUp = this._onPointerUp.bind(this);\n    this._onPointerOverOut = this._onPointerOverOut.bind(this);\n    this.onWheel = this.onWheel.bind(this);\n  }\n  /**\n   * The default interaction mode for all display objects.\n   * @see Container.eventMode\n   * @type {EventMode}\n   * @readonly\n   * @since 7.2.0\n   */\n  static get defaultEventMode() {\n    return this._defaultEventMode;\n  }\n  /**\n   * Runner init called, view is available at this point.\n   * @ignore\n   */\n  init(options) {\n    const { canvas, resolution } = this.renderer;\n    this.setTargetElement(canvas);\n    this.resolution = resolution;\n    _EventSystem._defaultEventMode = options.eventMode ?? \"passive\";\n    Object.assign(this.features, options.eventFeatures ?? {});\n    this.rootBoundary.enableGlobalMoveEvents = this.features.globalMove;\n  }\n  /**\n   * Handle changing resolution.\n   * @ignore\n   */\n  resolutionChange(resolution) {\n    this.resolution = resolution;\n  }\n  /** Destroys all event listeners and detaches the renderer. */\n  destroy() {\n    EventsTicker.destroy();\n    this.setTargetElement(null);\n    this.renderer = null;\n    this._currentCursor = null;\n  }\n  /**\n   * Sets the current cursor mode, handling any callbacks or CSS style changes.\n   * The cursor can be a CSS cursor string, a custom callback function, or a key from the cursorStyles dictionary.\n   * @param mode - Cursor mode to set. Can be:\n   * - A CSS cursor string (e.g., 'pointer', 'grab')\n   * - A key from the cursorStyles dictionary\n   * - null/undefined to reset to default\n   * @example\n   * ```ts\n   * // Using predefined cursor styles\n   * app.renderer.events.setCursor('pointer');    // Set standard pointer cursor\n   * app.renderer.events.setCursor('grab');       // Set grab cursor\n   * app.renderer.events.setCursor(null);         // Reset to default\n   *\n   * // Using custom cursor styles\n   * app.renderer.events.cursorStyles.custom = 'url(\"cursor.png\"), auto';\n   * app.renderer.events.setCursor('custom');     // Apply custom cursor\n   *\n   * // Using callback-based cursor\n   * app.renderer.events.cursorStyles.dynamic = (mode) => {\n   *     document.body.style.cursor = mode === 'hover' ? 'pointer' : 'default';\n   * };\n   * app.renderer.events.setCursor('dynamic');    // Trigger cursor callback\n   * ```\n   * @remarks\n   * - Has no effect on OffscreenCanvas except for callback-based cursors\n   * - Caches current cursor to avoid unnecessary DOM updates\n   * - Supports CSS cursor values, style objects, and callback functions\n   * @see {@link EventSystem.cursorStyles} For defining custom cursor styles\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/cursor} MDN Cursor Reference\n   */\n  setCursor(mode) {\n    mode || (mode = \"default\");\n    let applyStyles = true;\n    if (globalThis.OffscreenCanvas && this.domElement instanceof OffscreenCanvas) {\n      applyStyles = false;\n    }\n    if (this._currentCursor === mode) {\n      return;\n    }\n    this._currentCursor = mode;\n    const style = this.cursorStyles[mode];\n    if (style) {\n      switch (typeof style) {\n        case \"string\":\n          if (applyStyles) {\n            this.domElement.style.cursor = style;\n          }\n          break;\n        case \"function\":\n          style(mode);\n          break;\n        case \"object\":\n          if (applyStyles) {\n            Object.assign(this.domElement.style, style);\n          }\n          break;\n      }\n    } else if (applyStyles && typeof mode === \"string\" && !Object.prototype.hasOwnProperty.call(this.cursorStyles, mode)) {\n      this.domElement.style.cursor = mode;\n    }\n  }\n  /**\n   * The global pointer event instance containing the most recent pointer state.\n   * This is useful for accessing pointer information without listening to events.\n   * @example\n   * ```ts\n   * // Access current pointer position at any time\n   * const eventSystem = app.renderer.events;\n   * const pointer = eventSystem.pointer;\n   *\n   * // Get global coordinates\n   * console.log('Position:', pointer.global.x, pointer.global.y);\n   *\n   * // Check button state\n   * console.log('Buttons pressed:', pointer.buttons);\n   *\n   * // Get pointer type and pressure\n   * console.log('Type:', pointer.pointerType);\n   * console.log('Pressure:', pointer.pressure);\n   * ```\n   * @readonly\n   * @since 7.2.0\n   * @see {@link FederatedPointerEvent} For all available pointer properties\n   */\n  get pointer() {\n    return this._rootPointerEvent;\n  }\n  /**\n   * Event handler for pointer down events on {@link EventSystem#domElement this.domElement}.\n   * @param nativeEvent - The native mouse/pointer/touch event.\n   */\n  _onPointerDown(nativeEvent) {\n    if (!this.features.click)\n      return;\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    const events = this._normalizeToPointerData(nativeEvent);\n    if (this.autoPreventDefault && events[0].isNormalized) {\n      const cancelable = nativeEvent.cancelable || !(\"cancelable\" in nativeEvent);\n      if (cancelable) {\n        nativeEvent.preventDefault();\n      }\n    }\n    for (let i = 0, j = events.length; i < j; i++) {\n      const nativeEvent2 = events[i];\n      const federatedEvent = this._bootstrapEvent(this._rootPointerEvent, nativeEvent2);\n      this.rootBoundary.mapEvent(federatedEvent);\n    }\n    this.setCursor(this.rootBoundary.cursor);\n  }\n  /**\n   * Event handler for pointer move events on on {@link EventSystem#domElement this.domElement}.\n   * @param nativeEvent - The native mouse/pointer/touch events.\n   */\n  _onPointerMove(nativeEvent) {\n    if (!this.features.move)\n      return;\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    EventsTicker.pointerMoved();\n    const normalizedEvents = this._normalizeToPointerData(nativeEvent);\n    for (let i = 0, j = normalizedEvents.length; i < j; i++) {\n      const event = this._bootstrapEvent(this._rootPointerEvent, normalizedEvents[i]);\n      this.rootBoundary.mapEvent(event);\n    }\n    this.setCursor(this.rootBoundary.cursor);\n  }\n  /**\n   * Event handler for pointer up events on {@link EventSystem#domElement this.domElement}.\n   * @param nativeEvent - The native mouse/pointer/touch event.\n   */\n  _onPointerUp(nativeEvent) {\n    if (!this.features.click)\n      return;\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    let target = nativeEvent.target;\n    if (nativeEvent.composedPath && nativeEvent.composedPath().length > 0) {\n      target = nativeEvent.composedPath()[0];\n    }\n    const outside = target !== this.domElement ? \"outside\" : \"\";\n    const normalizedEvents = this._normalizeToPointerData(nativeEvent);\n    for (let i = 0, j = normalizedEvents.length; i < j; i++) {\n      const event = this._bootstrapEvent(this._rootPointerEvent, normalizedEvents[i]);\n      event.type += outside;\n      this.rootBoundary.mapEvent(event);\n    }\n    this.setCursor(this.rootBoundary.cursor);\n  }\n  /**\n   * Event handler for pointer over & out events on {@link EventSystem#domElement this.domElement}.\n   * @param nativeEvent - The native mouse/pointer/touch event.\n   */\n  _onPointerOverOut(nativeEvent) {\n    if (!this.features.click)\n      return;\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    const normalizedEvents = this._normalizeToPointerData(nativeEvent);\n    for (let i = 0, j = normalizedEvents.length; i < j; i++) {\n      const event = this._bootstrapEvent(this._rootPointerEvent, normalizedEvents[i]);\n      this.rootBoundary.mapEvent(event);\n    }\n    this.setCursor(this.rootBoundary.cursor);\n  }\n  /**\n   * Passive handler for `wheel` events on {@link EventSystem.domElement this.domElement}.\n   * @param nativeEvent - The native wheel event.\n   */\n  onWheel(nativeEvent) {\n    if (!this.features.wheel)\n      return;\n    const wheelEvent = this.normalizeWheelEvent(nativeEvent);\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    this.rootBoundary.mapEvent(wheelEvent);\n  }\n  /**\n   * Sets the {@link EventSystem#domElement domElement} and binds event listeners.\n   * This method manages the DOM event bindings for the event system, allowing you to\n   * change or remove the target element that receives input events.\n   * > [!IMPORTANT] This will default to the canvas element of the renderer, so you\n   * > should not need to call this unless you are using a custom element.\n   * @param element - The new DOM element to bind events to, or null to remove all event bindings\n   * @example\n   * ```ts\n   * // Set a new canvas element as the target\n   * const canvas = document.createElement('canvas');\n   * app.renderer.events.setTargetElement(canvas);\n   *\n   * // Remove all event bindings\n   * app.renderer.events.setTargetElement(null);\n   *\n   * // Switch to a different canvas\n   * const newCanvas = document.querySelector('#game-canvas');\n   * app.renderer.events.setTargetElement(newCanvas);\n   * ```\n   * @remarks\n   * - Automatically removes event listeners from previous element\n   * - Required for the event system to function\n   * - Safe to call multiple times\n   * @see {@link EventSystem#domElement} The current DOM element\n   * @see {@link EventsTicker} For the ticker system that tracks pointer movement\n   */\n  setTargetElement(element) {\n    this._removeEvents();\n    this.domElement = element;\n    EventsTicker.domElement = element;\n    this._addEvents();\n  }\n  /** Register event listeners on {@link Renderer#domElement this.domElement}. */\n  _addEvents() {\n    if (this._eventsAdded || !this.domElement) {\n      return;\n    }\n    EventsTicker.addTickerListener();\n    const style = this.domElement.style;\n    if (style) {\n      if (globalThis.navigator.msPointerEnabled) {\n        style.msContentZooming = \"none\";\n        style.msTouchAction = \"none\";\n      } else if (this.supportsPointerEvents) {\n        style.touchAction = \"none\";\n      }\n    }\n    if (this.supportsPointerEvents) {\n      globalThis.document.addEventListener(\"pointermove\", this._onPointerMove, true);\n      this.domElement.addEventListener(\"pointerdown\", this._onPointerDown, true);\n      this.domElement.addEventListener(\"pointerleave\", this._onPointerOverOut, true);\n      this.domElement.addEventListener(\"pointerover\", this._onPointerOverOut, true);\n      globalThis.addEventListener(\"pointerup\", this._onPointerUp, true);\n    } else {\n      globalThis.document.addEventListener(\"mousemove\", this._onPointerMove, true);\n      this.domElement.addEventListener(\"mousedown\", this._onPointerDown, true);\n      this.domElement.addEventListener(\"mouseout\", this._onPointerOverOut, true);\n      this.domElement.addEventListener(\"mouseover\", this._onPointerOverOut, true);\n      globalThis.addEventListener(\"mouseup\", this._onPointerUp, true);\n      if (this.supportsTouchEvents) {\n        this.domElement.addEventListener(\"touchstart\", this._onPointerDown, true);\n        this.domElement.addEventListener(\"touchend\", this._onPointerUp, true);\n        this.domElement.addEventListener(\"touchmove\", this._onPointerMove, true);\n      }\n    }\n    this.domElement.addEventListener(\"wheel\", this.onWheel, {\n      passive: true,\n      capture: true\n    });\n    this._eventsAdded = true;\n  }\n  /** Unregister event listeners on {@link EventSystem#domElement this.domElement}. */\n  _removeEvents() {\n    if (!this._eventsAdded || !this.domElement) {\n      return;\n    }\n    EventsTicker.removeTickerListener();\n    const style = this.domElement.style;\n    if (style) {\n      if (globalThis.navigator.msPointerEnabled) {\n        style.msContentZooming = \"\";\n        style.msTouchAction = \"\";\n      } else if (this.supportsPointerEvents) {\n        style.touchAction = \"\";\n      }\n    }\n    if (this.supportsPointerEvents) {\n      globalThis.document.removeEventListener(\"pointermove\", this._onPointerMove, true);\n      this.domElement.removeEventListener(\"pointerdown\", this._onPointerDown, true);\n      this.domElement.removeEventListener(\"pointerleave\", this._onPointerOverOut, true);\n      this.domElement.removeEventListener(\"pointerover\", this._onPointerOverOut, true);\n      globalThis.removeEventListener(\"pointerup\", this._onPointerUp, true);\n    } else {\n      globalThis.document.removeEventListener(\"mousemove\", this._onPointerMove, true);\n      this.domElement.removeEventListener(\"mousedown\", this._onPointerDown, true);\n      this.domElement.removeEventListener(\"mouseout\", this._onPointerOverOut, true);\n      this.domElement.removeEventListener(\"mouseover\", this._onPointerOverOut, true);\n      globalThis.removeEventListener(\"mouseup\", this._onPointerUp, true);\n      if (this.supportsTouchEvents) {\n        this.domElement.removeEventListener(\"touchstart\", this._onPointerDown, true);\n        this.domElement.removeEventListener(\"touchend\", this._onPointerUp, true);\n        this.domElement.removeEventListener(\"touchmove\", this._onPointerMove, true);\n      }\n    }\n    this.domElement.removeEventListener(\"wheel\", this.onWheel, true);\n    this.domElement = null;\n    this._eventsAdded = false;\n  }\n  /**\n   * Maps coordinates from DOM/screen space into PixiJS normalized coordinates.\n   * This takes into account the current scale, position, and resolution of the DOM element.\n   * @param point - The point to store the mapped coordinates in\n   * @param x - The x coordinate in DOM/client space\n   * @param y - The y coordinate in DOM/client space\n   * @example\n   * ```ts\n   * // Map mouse coordinates to PixiJS space\n   * const point = new Point();\n   * app.renderer.events.mapPositionToPoint(\n   *     point,\n   *     event.clientX,\n   *     event.clientY\n   * );\n   * console.log('Mapped position:', point.x, point.y);\n   *\n   * // Using with pointer events\n   * sprite.on('pointermove', (event) => {\n   *     // event.global already contains mapped coordinates\n   *     console.log('Global:', event.global.x, event.global.y);\n   *\n   *     // Map to local coordinates\n   *     const local = event.getLocalPosition(sprite);\n   *     console.log('Local:', local.x, local.y);\n   * });\n   * ```\n   * @remarks\n   * - Accounts for element scaling and positioning\n   * - Adjusts for device pixel ratio/resolution\n   */\n  mapPositionToPoint(point, x, y) {\n    const rect = this.domElement.isConnected ? this.domElement.getBoundingClientRect() : {\n      x: 0,\n      y: 0,\n      width: this.domElement.width,\n      height: this.domElement.height,\n      left: 0,\n      top: 0\n    };\n    const resolutionMultiplier = 1 / this.resolution;\n    point.x = (x - rect.left) * (this.domElement.width / rect.width) * resolutionMultiplier;\n    point.y = (y - rect.top) * (this.domElement.height / rect.height) * resolutionMultiplier;\n  }\n  /**\n   * Ensures that the original event object contains all data that a regular pointer event would have\n   * @param event - The original event data from a touch or mouse event\n   * @returns An array containing a single normalized pointer event, in the case of a pointer\n   *  or mouse event, or a multiple normalized pointer events if there are multiple changed touches\n   */\n  _normalizeToPointerData(event) {\n    const normalizedEvents = [];\n    if (this.supportsTouchEvents && event instanceof TouchEvent) {\n      for (let i = 0, li = event.changedTouches.length; i < li; i++) {\n        const touch = event.changedTouches[i];\n        if (typeof touch.button === \"undefined\")\n          touch.button = 0;\n        if (typeof touch.buttons === \"undefined\")\n          touch.buttons = 1;\n        if (typeof touch.isPrimary === \"undefined\") {\n          touch.isPrimary = event.touches.length === 1 && event.type === \"touchstart\";\n        }\n        if (typeof touch.width === \"undefined\")\n          touch.width = touch.radiusX || 1;\n        if (typeof touch.height === \"undefined\")\n          touch.height = touch.radiusY || 1;\n        if (typeof touch.tiltX === \"undefined\")\n          touch.tiltX = 0;\n        if (typeof touch.tiltY === \"undefined\")\n          touch.tiltY = 0;\n        if (typeof touch.pointerType === \"undefined\")\n          touch.pointerType = \"touch\";\n        if (typeof touch.pointerId === \"undefined\")\n          touch.pointerId = touch.identifier || 0;\n        if (typeof touch.pressure === \"undefined\")\n          touch.pressure = touch.force || 0.5;\n        if (typeof touch.twist === \"undefined\")\n          touch.twist = 0;\n        if (typeof touch.tangentialPressure === \"undefined\")\n          touch.tangentialPressure = 0;\n        if (typeof touch.layerX === \"undefined\")\n          touch.layerX = touch.offsetX = touch.clientX;\n        if (typeof touch.layerY === \"undefined\")\n          touch.layerY = touch.offsetY = touch.clientY;\n        touch.isNormalized = true;\n        touch.type = event.type;\n        normalizedEvents.push(touch);\n      }\n    } else if (!globalThis.MouseEvent || event instanceof MouseEvent && (!this.supportsPointerEvents || !(event instanceof globalThis.PointerEvent))) {\n      const tempEvent = event;\n      if (typeof tempEvent.isPrimary === \"undefined\")\n        tempEvent.isPrimary = true;\n      if (typeof tempEvent.width === \"undefined\")\n        tempEvent.width = 1;\n      if (typeof tempEvent.height === \"undefined\")\n        tempEvent.height = 1;\n      if (typeof tempEvent.tiltX === \"undefined\")\n        tempEvent.tiltX = 0;\n      if (typeof tempEvent.tiltY === \"undefined\")\n        tempEvent.tiltY = 0;\n      if (typeof tempEvent.pointerType === \"undefined\")\n        tempEvent.pointerType = \"mouse\";\n      if (typeof tempEvent.pointerId === \"undefined\")\n        tempEvent.pointerId = MOUSE_POINTER_ID;\n      if (typeof tempEvent.pressure === \"undefined\")\n        tempEvent.pressure = 0.5;\n      if (typeof tempEvent.twist === \"undefined\")\n        tempEvent.twist = 0;\n      if (typeof tempEvent.tangentialPressure === \"undefined\")\n        tempEvent.tangentialPressure = 0;\n      tempEvent.isNormalized = true;\n      normalizedEvents.push(tempEvent);\n    } else {\n      normalizedEvents.push(event);\n    }\n    return normalizedEvents;\n  }\n  /**\n   * Normalizes the native {@link https://w3c.github.io/uievents/#interface-wheelevent WheelEvent}.\n   *\n   * The returned {@link FederatedWheelEvent} is a shared instance. It will not persist across\n   * multiple native wheel events.\n   * @param nativeEvent - The native wheel event that occurred on the canvas.\n   * @returns A federated wheel event.\n   */\n  normalizeWheelEvent(nativeEvent) {\n    const event = this._rootWheelEvent;\n    this._transferMouseData(event, nativeEvent);\n    event.deltaX = nativeEvent.deltaX;\n    event.deltaY = nativeEvent.deltaY;\n    event.deltaZ = nativeEvent.deltaZ;\n    event.deltaMode = nativeEvent.deltaMode;\n    this.mapPositionToPoint(event.screen, nativeEvent.clientX, nativeEvent.clientY);\n    event.global.copyFrom(event.screen);\n    event.offset.copyFrom(event.screen);\n    event.nativeEvent = nativeEvent;\n    event.type = nativeEvent.type;\n    return event;\n  }\n  /**\n   * Normalizes the `nativeEvent` into a federateed {@link FederatedPointerEvent}.\n   * @param event\n   * @param nativeEvent\n   */\n  _bootstrapEvent(event, nativeEvent) {\n    event.originalEvent = null;\n    event.nativeEvent = nativeEvent;\n    event.pointerId = nativeEvent.pointerId;\n    event.width = nativeEvent.width;\n    event.height = nativeEvent.height;\n    event.isPrimary = nativeEvent.isPrimary;\n    event.pointerType = nativeEvent.pointerType;\n    event.pressure = nativeEvent.pressure;\n    event.tangentialPressure = nativeEvent.tangentialPressure;\n    event.tiltX = nativeEvent.tiltX;\n    event.tiltY = nativeEvent.tiltY;\n    event.twist = nativeEvent.twist;\n    this._transferMouseData(event, nativeEvent);\n    this.mapPositionToPoint(event.screen, nativeEvent.clientX, nativeEvent.clientY);\n    event.global.copyFrom(event.screen);\n    event.offset.copyFrom(event.screen);\n    event.isTrusted = nativeEvent.isTrusted;\n    if (event.type === \"pointerleave\") {\n      event.type = \"pointerout\";\n    }\n    if (event.type.startsWith(\"mouse\")) {\n      event.type = event.type.replace(\"mouse\", \"pointer\");\n    }\n    if (event.type.startsWith(\"touch\")) {\n      event.type = TOUCH_TO_POINTER[event.type] || event.type;\n    }\n    return event;\n  }\n  /**\n   * Transfers base & mouse event data from the `nativeEvent` to the federated event.\n   * @param event\n   * @param nativeEvent\n   */\n  _transferMouseData(event, nativeEvent) {\n    event.isTrusted = nativeEvent.isTrusted;\n    event.srcElement = nativeEvent.srcElement;\n    event.timeStamp = performance.now();\n    event.type = nativeEvent.type;\n    event.altKey = nativeEvent.altKey;\n    event.button = nativeEvent.button;\n    event.buttons = nativeEvent.buttons;\n    event.client.x = nativeEvent.clientX;\n    event.client.y = nativeEvent.clientY;\n    event.ctrlKey = nativeEvent.ctrlKey;\n    event.metaKey = nativeEvent.metaKey;\n    event.movement.x = nativeEvent.movementX;\n    event.movement.y = nativeEvent.movementY;\n    event.page.x = nativeEvent.pageX;\n    event.page.y = nativeEvent.pageY;\n    event.relatedTarget = null;\n    event.shiftKey = nativeEvent.shiftKey;\n  }\n};\n/** @ignore */\n_EventSystem.extension = {\n  name: \"events\",\n  type: [\n    ExtensionType.WebGLSystem,\n    ExtensionType.CanvasSystem,\n    ExtensionType.WebGPUSystem\n  ],\n  priority: -1\n};\n/**\n * The event features that are enabled by the EventSystem\n * @since 7.2.0\n * @example\n * ```ts\n * import { EventSystem, EventSystemFeatures } from 'pixi.js';\n * // Access the default event features\n * EventSystem.defaultEventFeatures = {\n *     // Enable pointer movement events\n *     move: true,\n *     // Enable global pointer move events\n *     globalMove: true,\n *     // Enable click events\n *     click: true,\n *     // Enable wheel events\n *     wheel: true,\n * };\n * ```\n */\n_EventSystem.defaultEventFeatures = {\n  /** Enables pointer events associated with pointer movement. */\n  move: true,\n  /** Enables global pointer move events. */\n  globalMove: true,\n  /** Enables pointer events associated with clicking. */\n  click: true,\n  /** Enables wheel events. */\n  wheel: true\n};\nlet EventSystem = _EventSystem;\n\nexport { EventSystem };\n//# sourceMappingURL=EventSystem.mjs.map\n","import { EventSystem } from './EventSystem.mjs';\nimport { FederatedEvent } from './FederatedEvent.mjs';\n\n\"use strict\";\nconst FederatedContainer = {\n  onclick: null,\n  onmousedown: null,\n  onmouseenter: null,\n  onmouseleave: null,\n  onmousemove: null,\n  onglobalmousemove: null,\n  onmouseout: null,\n  onmouseover: null,\n  onmouseup: null,\n  onmouseupoutside: null,\n  onpointercancel: null,\n  onpointerdown: null,\n  onpointerenter: null,\n  onpointerleave: null,\n  onpointermove: null,\n  onglobalpointermove: null,\n  onpointerout: null,\n  onpointerover: null,\n  onpointertap: null,\n  onpointerup: null,\n  onpointerupoutside: null,\n  onrightclick: null,\n  onrightdown: null,\n  onrightup: null,\n  onrightupoutside: null,\n  ontap: null,\n  ontouchcancel: null,\n  ontouchend: null,\n  ontouchendoutside: null,\n  ontouchmove: null,\n  onglobaltouchmove: null,\n  ontouchstart: null,\n  onwheel: null,\n  get interactive() {\n    return this.eventMode === \"dynamic\" || this.eventMode === \"static\";\n  },\n  set interactive(value) {\n    this.eventMode = value ? \"static\" : \"passive\";\n  },\n  _internalEventMode: void 0,\n  get eventMode() {\n    return this._internalEventMode ?? EventSystem.defaultEventMode;\n  },\n  set eventMode(value) {\n    this._internalEventMode = value;\n  },\n  isInteractive() {\n    return this.eventMode === \"static\" || this.eventMode === \"dynamic\";\n  },\n  interactiveChildren: true,\n  hitArea: null,\n  addEventListener(type, listener, options) {\n    const capture = typeof options === \"boolean\" && options || typeof options === \"object\" && options.capture;\n    const signal = typeof options === \"object\" ? options.signal : void 0;\n    const once = typeof options === \"object\" ? options.once === true : false;\n    const context = typeof listener === \"function\" ? void 0 : listener;\n    type = capture ? `${type}capture` : type;\n    const listenerFn = typeof listener === \"function\" ? listener : listener.handleEvent;\n    const emitter = this;\n    if (signal) {\n      signal.addEventListener(\"abort\", () => {\n        emitter.off(type, listenerFn, context);\n      });\n    }\n    if (once) {\n      emitter.once(type, listenerFn, context);\n    } else {\n      emitter.on(type, listenerFn, context);\n    }\n  },\n  removeEventListener(type, listener, options) {\n    const capture = typeof options === \"boolean\" && options || typeof options === \"object\" && options.capture;\n    const context = typeof listener === \"function\" ? void 0 : listener;\n    type = capture ? `${type}capture` : type;\n    listener = typeof listener === \"function\" ? listener : listener.handleEvent;\n    this.off(type, listener, context);\n  },\n  dispatchEvent(e) {\n    if (!(e instanceof FederatedEvent)) {\n      throw new Error(\"Container cannot propagate events outside of the Federated Events API\");\n    }\n    e.defaultPrevented = false;\n    e.path = null;\n    e.target = this;\n    e.manager.dispatchEvent(e);\n    return !e.defaultPrevented;\n  }\n};\n\nexport { FederatedContainer };\n//# sourceMappingURL=FederatedEventTarget.mjs.map\n","import { extensions } from '../extensions/Extensions.mjs';\nimport { Container } from '../scene/container/Container.mjs';\nimport { AccessibilitySystem } from './AccessibilitySystem.mjs';\nimport { accessibilityTarget } from './accessibilityTarget.mjs';\n\n\"use strict\";\nextensions.add(AccessibilitySystem);\nextensions.mixin(Container, accessibilityTarget);\n//# sourceMappingURL=init.mjs.map\n","\"use strict\";\nconst accessibilityTarget = {\n  accessible: false,\n  accessibleTitle: null,\n  accessibleHint: null,\n  tabIndex: 0,\n  accessibleType: \"button\",\n  accessibleText: null,\n  accessiblePointerEvents: \"auto\",\n  accessibleChildren: true,\n  _accessibleActive: false,\n  _accessibleDiv: null,\n  _renderId: -1\n};\n\nexport { accessibilityTarget };\n//# sourceMappingURL=accessibilityTarget.mjs.map\n","import { extensions } from '../extensions/Extensions.mjs';\nimport { Container } from '../scene/container/Container.mjs';\nimport { EventSystem } from './EventSystem.mjs';\nimport { FederatedContainer } from './FederatedEventTarget.mjs';\n\n\"use strict\";\nextensions.add(EventSystem);\nextensions.mixin(Container, FederatedContainer);\n//# sourceMappingURL=init.mjs.map\n","import { extensions } from '../extensions/Extensions.mjs';\nimport { DOMPipe } from './DOMPipe.mjs';\nimport './index.mjs';\nexport { CanvasObserver } from './CanvasObserver.mjs';\nexport { DOMContainer } from './DOMContainer.mjs';\n\n\"use strict\";\nextensions.add(DOMPipe);\n\nexport { DOMPipe };\n//# sourceMappingURL=init.mjs.map\n"],"names":["CanvasObserver","constructor","options","this","_lastTransform","_observer","_tickerAttached","updateTranslation","_canvas","rect","getBoundingClientRect","contentWidth","width","contentHeight","height","sx","_renderer","resolution","sy","newTransform","left","top","_domElement","style","transform","domElement","renderer","globalThis","OffscreenCanvas","canvas","_attachObserver","ensureAttached","parentNode","appendChild","disconnect","ResizeObserver","entries","entry","target","contentRect","_lastScaleX","_lastScaleY","observe","Ticker","shared","add","UPDATE_PRIORITY","HIGH","destroy","remove","FederatedEvent","manager","bubbles","cancelBubble","cancelable","composed","defaultPrevented","eventPhase","prototype","NONE","propagationStopped","propagationImmediatelyStopped","layer","Point","page","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","layerX","x","layerY","y","pageX","pageY","data","composedPath","path","length","propagationPath","initEvent","_type","_bubbles","_cancelable","Error","initUIEvent","_typeArg","_bubblesArg","_cancelableArg","_viewArg","_detailArg","preventDefault","nativeEvent","Event","stopImmediatePropagation","stopPropagation","appleIphone","appleIpod","appleTablet","appleUniversal","androidPhone","androidTablet","amazonPhone","amazonTablet","windowsPhone","windowsTablet","otherBlackBerry","otherBlackBerry10","otherOpera","otherChrome","otherFirefox","isAppleTabletOnIos13","navigator","platform","maxTouchPoints","MSStream","isMobile","param","nav","userAgent","tmp","split","match","regex","test","createMatch","result","apple","phone","ipod","tablet","universal","device","amazon","android","windows","other","blackberry","blackberry10","opera","firefox","chrome","any","isMobileJs","default","_AccessibilitySystem","_mobileInfo","debug","_activateOnTab","_deactivateOnMouseMove","_isActive","_isMobileAccessibility","_div","_pools","_renderId","_children","_androidUpdateCount","_androidUpdateFrequency","_isRunningTests","_boundOnKeyDown","_onKeyDown","bind","_boundOnMouseMove","_onMouseMove","_hookDiv","_createTouchHook","isActive","isMobileAccessibility","hookDiv","div","document","createElement","position","zIndex","toString","backgroundColor","title","addEventListener","_activate","_destroyTouchHook","body","removeChild","pointerEvents","_canvasObserver","view","_initAccessibilitySetup","observer","MutationObserver","childList","subtree","runners","postrender","lastObjectRendered","_updateAccessibleObjects","_deactivate","removeEventListener","child","_accessibleDiv","_accessibleActive","accessibleType","forEach","container","visible","accessibleChildren","accessible","_addChild","children","i","init","mergedOptions","accessibilityOptions","defaultOptions","activateOnTab","deactivateOnMouseMove","enabledByDefault","now","performance","renderingToScreen","activeIds","Set","indexOf","has","_getPool","push","removeItems","hitArea","getBounds","rectangle","wt","worldTransform","tx","a","ty","d","_capHitArea","_updateDebugHTML","innerHTML","type","tabIndex","viewWidth","viewHeight","pop","removeAttribute","cssText","accessibleText","innerText","borderStyle","toLowerCase","includes","setAttribute","_onClick","_onFocus","_onFocusOut","accessiblePointerEvents","accessibleTitle","accessibleHint","interactive","_dispatchEvent","e","boundary","events","rootBoundary","event","Object","assign","rootTarget","type2","dispatchEvent","getAttribute","keyCode","movementX","movementY","setAccessibilityEnabled","enabled","extension","ExtensionType","WebGLSystem","WebGPUSystem","name","AccessibilitySystem","DOMPipe","_attachedDomElements","addRenderable","domContainer","_instructionSet","updateRenderable","_domContainer","validateRenderable","attachedDomElements","element","parent","globalDisplayStatus","splice","contains","anchor","_anchor","ax","ay","transformOrigin","b","c","opacity","groupAlpha","WebGLPipes","WebGPUPipes","CanvasPipes","EventsTicker","interactionFrequency","_deltaTime","_didMove","_tickerAdded","_pauseUpdate","removeTickerListener","pauseUpdate","paused","addTickerListener","system","_tickerUpdate","INTERACTION","pointerMoved","_update","rootPointerEvent","supportsTouchEvents","pointerType","supportsPointerEvents","PointerEvent","clientX","clientY","pointerId","MouseEvent","ticker","deltaTime","FederatedMouseEvent","super","arguments","client","movement","offset","global","screen","offsetX","offsetY","globalX","globalY","screenX","screenY","getLocalPosition","point","globalPos","applyInverse","getModifierState","key","initMouseEvent","_canBubbleArg","_screenXArg","_screenYArg","_clientXArg","_clientYArg","_ctrlKeyArg","_altKeyArg","_shiftKeyArg","_metaKeyArg","_buttonArg","_relatedTargetArg","FederatedPointerEvent","isPrimary","getCoalescedEvents","getPredictedEvents","FederatedWheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","DOM_DELTA_PAGE","tempHitLocation","tempLocalMapping","EventBoundary","dispatch","EventEmitter","moveOnAll","enableGlobalMoveEvents","mappingState","trackingData","eventPool","Map","_allInteractiveElements","_hitElements","_isPointerMoveEvent","hitPruneFn","hitTestFn","mapPointerDown","mapPointerMove","mapPointerOut","mapPointerOver","mapPointerUp","mapPointerUpOutside","mapWheel","mappingTable","addEventMapping","fn","priority","sort","propagate","emit","mapEvent","mappers","j","warn","hitTest","invertedPath","eventMode","set","currentTarget","notifyTarget","all","targets","Array","isArray","reverse","hitTestMoveRecursive","location","testFn","pruneFn","ignore","shouldReturn","_interactivePrune","interactiveChildren","nestedHit","_isInteractive","isInteractive","isInteractiveMode","isInteractiveTarget","hitTestRecursive","relativeLocation","int","renderable","measurable","effects","effect","containsPoint","handlerKey","_notifyListeners","from","createPointerEvent","isRightButton","button","pressTargetsByButton","freeEvent","isMouse","outTarget","findMountedTarget","overTargets","outType","outEvent","leaveEvent","overType","overEvent","clonePointerEvent","overTargetAncestor","enterEvent","allMethods","allowGlobalPointerEvents","cursor","pressTarget","clickTarget","clickEvent","clicksByButton","clickCount","timeStamp","clickHistory","detail","wheelEvent","createWheelEvent","allocateEvent","copyPointerData","copyMouseData","copyData","originalEvent","copyWheelData","slice","to","deltaMode","deltaX","deltaY","deltaZ","pressure","tangentialPressure","tiltX","tiltY","twist","altKey","buttons","copyFrom","ctrlKey","metaKey","shiftKey","isTrusted","srcElement","which","id","overTarget","get","listeners","_events","once","removeListener","call","context","TOUCH_TO_POINTER","touchstart","touchend","touchendoutside","touchmove","touchcancel","_EventSystem","autoPreventDefault","_eventsAdded","_rootPointerEvent","_rootWheelEvent","cursorStyles","pointer","features","Proxy","defaultEventFeatures","value","_onPointerDown","_onPointerMove","_onPointerUp","_onPointerOverOut","onWheel","defaultEventMode","_defaultEventMode","setTargetElement","eventFeatures","globalMove","resolutionChange","_currentCursor","setCursor","mode","applyStyles","hasOwnProperty","click","_normalizeToPointerData","isNormalized","nativeEvent2","federatedEvent","_bootstrapEvent","move","normalizedEvents","outside","wheel","normalizeWheelEvent","_removeEvents","_addEvents","msPointerEnabled","msContentZooming","msTouchAction","touchAction","passive","capture","mapPositionToPoint","isConnected","resolutionMultiplier","TouchEvent","li","changedTouches","touch","touches","radiusX","radiusY","identifier","force","tempEvent","_transferMouseData","startsWith","replace","relatedTarget","CanvasSystem","EventSystem","FederatedContainer","onclick","onmousedown","onmouseenter","onmouseleave","onmousemove","onglobalmousemove","onmouseout","onmouseover","onmouseup","onmouseupoutside","onpointercancel","onpointerdown","onpointerenter","onpointerleave","onpointermove","onglobalpointermove","onpointerout","onpointerover","onpointertap","onpointerup","onpointerupoutside","onrightclick","onrightdown","onrightup","onrightupoutside","ontap","ontouchcancel","ontouchend","ontouchendoutside","ontouchmove","onglobaltouchmove","ontouchstart","onwheel","_internalEventMode","listener","signal","listenerFn","handleEvent","emitter","off","on","extensions","mixin","Container"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]}