import{T as e,C as t,b as s,u as i,c as r,d as o,v as h,R as n,D as u,E as a}from"./index-BpHHqana.js";const c=new Map;function l(s,i){if(!c.has(s)){const r=new e({source:new t({resource:s,...i})}),o=()=>{c.get(s)===r&&c.delete(s)};r.once("destroy",o),r.source.once("destroy",o),c.set(s,r)}return c.get(s)}s.register(c);const d=class t{constructor(s={}){if(this.uid=i("renderTarget"),this.colorTextures=[],this.dirtyId=0,this.isRoot=!1,this._size=new Float32Array(2),this._managedColorTextures=!1,s={...t.defaultOptions,...s},this.stencil=s.stencil,this.depth=s.depth,this.isRoot=s.isRoot,"number"==typeof s.colorTextures){this._managedColorTextures=!0;for(let e=0;e<s.colorTextures;e++)this.colorTextures.push(new r({width:s.width,height:s.height,resolution:s.resolution,antialias:s.antialias}))}else{this.colorTextures=[...s.colorTextures.map(e=>e.source)];const e=this.colorTexture.source;this.resize(e.width,e.height,e._resolution)}this.colorTexture.source.on("resize",this.onSourceResize,this),(s.depthStencilTexture||this.stencil)&&(s.depthStencilTexture instanceof e||s.depthStencilTexture instanceof r?this.depthStencilTexture=s.depthStencilTexture.source:this.ensureDepthStencilTexture())}get size(){const e=this._size;return e[0]=this.pixelWidth,e[1]=this.pixelHeight,e}get width(){return this.colorTexture.source.width}get height(){return this.colorTexture.source.height}get pixelWidth(){return this.colorTexture.source.pixelWidth}get pixelHeight(){return this.colorTexture.source.pixelHeight}get resolution(){return this.colorTexture.source._resolution}get colorTexture(){return this.colorTextures[0]}onSourceResize(e){this.resize(e.width,e.height,e._resolution,!0)}ensureDepthStencilTexture(){this.depthStencilTexture||(this.depthStencilTexture=new r({width:this.width,height:this.height,resolution:this.resolution,format:"depth24plus-stencil8",autoGenerateMipmaps:!1,antialias:!1,mipLevelCount:1}))}resize(e,t,s=this.resolution,i=!1){this.dirtyId++,this.colorTextures.forEach((r,o)=>{i&&0===o||r.source.resize(e,t,s)}),this.depthStencilTexture&&this.depthStencilTexture.source.resize(e,t,s)}destroy(){this.colorTexture.source.off("resize",this.onSourceResize,this),this._managedColorTextures&&this.colorTextures.forEach(e=>{e.destroy()}),this.depthStencilTexture&&(this.depthStencilTexture.destroy(),delete this.depthStencilTexture)}};d.defaultOptions={width:0,height:0,resolution:1,colorTextures:1,stencil:!1,depth:!1,antialias:!1,isRoot:!1};let x=d;const p=class e{get autoDensity(){return this.texture.source.autoDensity}set autoDensity(e){this.texture.source.autoDensity=e}get resolution(){return this.texture.source._resolution}set resolution(e){this.texture.source.resize(this.texture.source.width,this.texture.source.height,e)}init(t){(t={...e.defaultOptions,...t}).view&&(o(h,"ViewSystem.view has been renamed to ViewSystem.canvas"),t.canvas=t.view),this.screen=new n(0,0,t.width,t.height),this.canvas=t.canvas||u.get().createCanvas(),this.antialias=!!t.antialias,this.texture=l(this.canvas,t),this.renderTarget=new x({colorTextures:[this.texture],depth:!!t.depth,isRoot:!0}),this.texture.source.transparent=t.backgroundAlpha<1,this.resolution=t.resolution}resize(e,t,s){this.texture.source.resize(e,t,s),this.screen.width=this.texture.frame.width,this.screen.height=this.texture.frame.height}destroy(e=!1){("boolean"==typeof e?e:!!e?.removeView)&&this.canvas.parentNode&&this.canvas.parentNode.removeChild(this.canvas),this.texture.destroy()}};p.extension={type:[a.WebGLSystem,a.WebGPUSystem,a.CanvasSystem],name:"view",priority:0},p.defaultOptions={width:800,height:600,autoDensity:!1,antialias:!1};let T=p;export{x as R,T as V,l as g};
//# sourceMappingURL=ViewSystem-kLHYYXAG.js.map
