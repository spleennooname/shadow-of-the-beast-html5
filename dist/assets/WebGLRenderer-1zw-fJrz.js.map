{"version":3,"file":"WebGLRenderer-1zw-fJrz.js","sources":["../../node_modules/pixi.js/lib/rendering/batcher/gl/GlBatchAdaptor.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/buffer/const.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/buffer/GlBuffer.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/buffer/GlBufferSystem.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/context/GlContextSystem.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/texture/const.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/geometry/utils/getGlTypeFromFormat.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/geometry/GlGeometrySystem.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/GlBackBufferSystem.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/GlColorMaskSystem.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/GlEncoderSystem.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/GlLimitsSystem.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/GlRenderTarget.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/GlStencilSystem.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/utils/createUboElementsSTD40.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/utils/generateArraySyncSTD40.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/utils/createUboSyncSTD40.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/GlUboSystem.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/renderTarget/GlRenderTargetAdaptor.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/renderTarget/GlRenderTargetSystem.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/GlProgramData.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/compileShader.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/defaultValue.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/mapType.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/logProgramError.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/generateProgram.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/extractAttributesFromGlProgram.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/getUniformData.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/getUboData.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/GlShaderSystem.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/GenerateShaderSyncCode.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/utils/generateUniformsSyncTypes.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/GlUniformGroupSystem.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/utils/generateUniformsSync.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/state/GlStateSystem.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/state/mapWebGLBlendModesToPixi.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/texture/GlTexture.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/texture/uploaders/glUploadBufferImageResource.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/texture/uploaders/glUploadCompressedTextureResource.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/texture/uploaders/glUploadImageResource.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/texture/uploaders/glUploadVideoResource.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/texture/utils/pixiToGlMaps.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/texture/utils/applyStyleParams.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/texture/GlTextureSystem.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/texture/utils/mapFormatToGlInternalFormat.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/texture/utils/mapFormatToGlType.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/texture/utils/mapFormatToGlFormat.mjs","../../node_modules/pixi.js/lib/scene/graphics/gl/GlGraphicsAdaptor.mjs","../../node_modules/pixi.js/lib/scene/mesh/gl/GlMeshAdaptor.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/WebGLRenderer.mjs"],"sourcesContent":["import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { State } from '../../renderers/shared/state/State.mjs';\n\n\"use strict\";\nclass GlBatchAdaptor {\n  constructor() {\n    this._tempState = State.for2d();\n    /**\n     * We only want to sync the a batched shaders uniforms once on first use\n     * this is a hash of shader uids to a boolean value.  When the shader is first bound\n     * we set the value to true.  When the shader is bound again we check the value and\n     * if it is true we know that the uniforms have already been synced and we skip it.\n     */\n    this._didUploadHash = {};\n  }\n  init(batcherPipe) {\n    batcherPipe.renderer.runners.contextChange.add(this);\n  }\n  contextChange() {\n    this._didUploadHash = {};\n  }\n  start(batchPipe, geometry, shader) {\n    const renderer = batchPipe.renderer;\n    const didUpload = this._didUploadHash[shader.uid];\n    renderer.shader.bind(shader, didUpload);\n    if (!didUpload) {\n      this._didUploadHash[shader.uid] = true;\n    }\n    renderer.shader.updateUniformGroup(renderer.globalUniforms.uniformGroup);\n    renderer.geometry.bind(geometry, shader.glProgram);\n  }\n  execute(batchPipe, batch) {\n    const renderer = batchPipe.renderer;\n    this._tempState.blendMode = batch.blendMode;\n    renderer.state.set(this._tempState);\n    const textures = batch.textures.textures;\n    for (let i = 0; i < batch.textures.count; i++) {\n      renderer.texture.bind(textures[i], i);\n    }\n    renderer.geometry.draw(batch.topology, batch.size, batch.start);\n  }\n}\n/** @ignore */\nGlBatchAdaptor.extension = {\n  type: [\n    ExtensionType.WebGLPipesAdaptor\n  ],\n  name: \"batch\"\n};\n\nexport { GlBatchAdaptor };\n//# sourceMappingURL=GlBatchAdaptor.mjs.map\n","\"use strict\";\nvar BUFFER_TYPE = /* @__PURE__ */ ((BUFFER_TYPE2) => {\n  BUFFER_TYPE2[BUFFER_TYPE2[\"ELEMENT_ARRAY_BUFFER\"] = 34963] = \"ELEMENT_ARRAY_BUFFER\";\n  BUFFER_TYPE2[BUFFER_TYPE2[\"ARRAY_BUFFER\"] = 34962] = \"ARRAY_BUFFER\";\n  BUFFER_TYPE2[BUFFER_TYPE2[\"UNIFORM_BUFFER\"] = 35345] = \"UNIFORM_BUFFER\";\n  return BUFFER_TYPE2;\n})(BUFFER_TYPE || {});\n\nexport { BUFFER_TYPE };\n//# sourceMappingURL=const.mjs.map\n","\"use strict\";\nclass GlBuffer {\n  constructor(buffer, type) {\n    this._lastBindBaseLocation = -1;\n    this._lastBindCallId = -1;\n    this.buffer = buffer || null;\n    this.updateID = -1;\n    this.byteLength = -1;\n    this.type = type;\n  }\n}\n\nexport { GlBuffer };\n//# sourceMappingURL=GlBuffer.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { BufferUsage } from '../../shared/buffer/const.mjs';\nimport { BUFFER_TYPE } from './const.mjs';\nimport { GlBuffer } from './GlBuffer.mjs';\n\n\"use strict\";\nclass GlBufferSystem {\n  /**\n   * @param {Renderer} renderer - The renderer this System works for.\n   */\n  constructor(renderer) {\n    this._gpuBuffers = /* @__PURE__ */ Object.create(null);\n    /** Cache keeping track of the base bound buffer bases */\n    this._boundBufferBases = /* @__PURE__ */ Object.create(null);\n    this._minBaseLocation = 0;\n    this._nextBindBaseIndex = this._minBaseLocation;\n    this._bindCallId = 0;\n    this._renderer = renderer;\n    this._renderer.renderableGC.addManagedHash(this, \"_gpuBuffers\");\n  }\n  /** @ignore */\n  destroy() {\n    this._renderer = null;\n    this._gl = null;\n    this._gpuBuffers = null;\n    this._boundBufferBases = null;\n  }\n  /** Sets up the renderer context and necessary buffers. */\n  contextChange() {\n    this._gl = this._renderer.gl;\n    this._gpuBuffers = /* @__PURE__ */ Object.create(null);\n    this._maxBindings = this._renderer.limits.maxUniformBindings;\n  }\n  getGlBuffer(buffer) {\n    return this._gpuBuffers[buffer.uid] || this.createGLBuffer(buffer);\n  }\n  /**\n   * This binds specified buffer. On first run, it will create the webGL buffers for the context too\n   * @param buffer - the buffer to bind to the renderer\n   */\n  bind(buffer) {\n    const { _gl: gl } = this;\n    const glBuffer = this.getGlBuffer(buffer);\n    gl.bindBuffer(glBuffer.type, glBuffer.buffer);\n  }\n  /**\n   * Binds an uniform buffer to at the given index.\n   *\n   * A cache is used so a buffer will not be bound again if already bound.\n   * @param glBuffer - the buffer to bind\n   * @param index - the base index to bind it to.\n   */\n  bindBufferBase(glBuffer, index) {\n    const { _gl: gl } = this;\n    if (this._boundBufferBases[index] !== glBuffer) {\n      this._boundBufferBases[index] = glBuffer;\n      glBuffer._lastBindBaseLocation = index;\n      gl.bindBufferBase(gl.UNIFORM_BUFFER, index, glBuffer.buffer);\n    }\n  }\n  nextBindBase(hasTransformFeedback) {\n    this._bindCallId++;\n    this._minBaseLocation = 0;\n    if (hasTransformFeedback) {\n      this._boundBufferBases[0] = null;\n      this._minBaseLocation = 1;\n      if (this._nextBindBaseIndex < 1) {\n        this._nextBindBaseIndex = 1;\n      }\n    }\n  }\n  freeLocationForBufferBase(glBuffer) {\n    let freeIndex = this.getLastBindBaseLocation(glBuffer);\n    if (freeIndex >= this._minBaseLocation) {\n      glBuffer._lastBindCallId = this._bindCallId;\n      return freeIndex;\n    }\n    let loop = 0;\n    let nextIndex = this._nextBindBaseIndex;\n    while (loop < 2) {\n      if (nextIndex >= this._maxBindings) {\n        nextIndex = this._minBaseLocation;\n        loop++;\n      }\n      const curBuf = this._boundBufferBases[nextIndex];\n      if (curBuf && curBuf._lastBindCallId === this._bindCallId) {\n        nextIndex++;\n        continue;\n      }\n      break;\n    }\n    freeIndex = nextIndex;\n    this._nextBindBaseIndex = nextIndex + 1;\n    if (loop >= 2) {\n      return -1;\n    }\n    glBuffer._lastBindCallId = this._bindCallId;\n    this._boundBufferBases[freeIndex] = null;\n    return freeIndex;\n  }\n  getLastBindBaseLocation(glBuffer) {\n    const index = glBuffer._lastBindBaseLocation;\n    if (this._boundBufferBases[index] === glBuffer) {\n      return index;\n    }\n    return -1;\n  }\n  /**\n   * Binds a buffer whilst also binding its range.\n   * This will make the buffer start from the offset supplied rather than 0 when it is read.\n   * @param glBuffer - the buffer to bind\n   * @param index - the base index to bind at, defaults to 0\n   * @param offset - the offset to bind at (this is blocks of 256). 0 = 0, 1 = 256, 2 = 512 etc\n   * @param size - the size to bind at (this is blocks of 256).\n   */\n  bindBufferRange(glBuffer, index, offset, size) {\n    const { _gl: gl } = this;\n    offset || (offset = 0);\n    index || (index = 0);\n    this._boundBufferBases[index] = null;\n    gl.bindBufferRange(gl.UNIFORM_BUFFER, index || 0, glBuffer.buffer, offset * 256, size || 256);\n  }\n  /**\n   * Will ensure the data in the buffer is uploaded to the GPU.\n   * @param {Buffer} buffer - the buffer to update\n   */\n  updateBuffer(buffer) {\n    const { _gl: gl } = this;\n    const glBuffer = this.getGlBuffer(buffer);\n    if (buffer._updateID === glBuffer.updateID) {\n      return glBuffer;\n    }\n    glBuffer.updateID = buffer._updateID;\n    gl.bindBuffer(glBuffer.type, glBuffer.buffer);\n    const data = buffer.data;\n    const drawType = buffer.descriptor.usage & BufferUsage.STATIC ? gl.STATIC_DRAW : gl.DYNAMIC_DRAW;\n    if (data) {\n      if (glBuffer.byteLength >= data.byteLength) {\n        gl.bufferSubData(glBuffer.type, 0, data, 0, buffer._updateSize / data.BYTES_PER_ELEMENT);\n      } else {\n        glBuffer.byteLength = data.byteLength;\n        gl.bufferData(glBuffer.type, data, drawType);\n      }\n    } else {\n      glBuffer.byteLength = buffer.descriptor.size;\n      gl.bufferData(glBuffer.type, glBuffer.byteLength, drawType);\n    }\n    return glBuffer;\n  }\n  /** dispose all WebGL resources of all managed buffers */\n  destroyAll() {\n    const gl = this._gl;\n    for (const id in this._gpuBuffers) {\n      gl.deleteBuffer(this._gpuBuffers[id].buffer);\n    }\n    this._gpuBuffers = /* @__PURE__ */ Object.create(null);\n  }\n  /**\n   * Disposes buffer\n   * @param {Buffer} buffer - buffer with data\n   * @param {boolean} [contextLost=false] - If context was lost, we suppress deleteVertexArray\n   */\n  onBufferDestroy(buffer, contextLost) {\n    const glBuffer = this._gpuBuffers[buffer.uid];\n    const gl = this._gl;\n    if (!contextLost) {\n      gl.deleteBuffer(glBuffer.buffer);\n    }\n    this._gpuBuffers[buffer.uid] = null;\n  }\n  /**\n   * creates and attaches a GLBuffer object tied to the current context.\n   * @param buffer\n   * @protected\n   */\n  createGLBuffer(buffer) {\n    const { _gl: gl } = this;\n    let type = BUFFER_TYPE.ARRAY_BUFFER;\n    if (buffer.descriptor.usage & BufferUsage.INDEX) {\n      type = BUFFER_TYPE.ELEMENT_ARRAY_BUFFER;\n    } else if (buffer.descriptor.usage & BufferUsage.UNIFORM) {\n      type = BUFFER_TYPE.UNIFORM_BUFFER;\n    }\n    const glBuffer = new GlBuffer(gl.createBuffer(), type);\n    this._gpuBuffers[buffer.uid] = glBuffer;\n    buffer.on(\"destroy\", this.onBufferDestroy, this);\n    return glBuffer;\n  }\n  resetState() {\n    this._boundBufferBases = /* @__PURE__ */ Object.create(null);\n  }\n}\n/** @ignore */\nGlBufferSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"buffer\"\n};\n\nexport { GlBufferSystem };\n//# sourceMappingURL=GlBufferSystem.mjs.map\n","import { DOMAdapter } from '../../../../environment/adapter.mjs';\nimport { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { warn } from '../../../../utils/logging/warn.mjs';\n\n\"use strict\";\nconst _GlContextSystem = class _GlContextSystem {\n  /** @param renderer - The renderer this System works for. */\n  constructor(renderer) {\n    /**\n     * Features supported by current renderer.\n     * @type {object}\n     * @readonly\n     */\n    this.supports = {\n      /** Support for 32-bit indices buffer. */\n      uint32Indices: true,\n      /** Support for UniformBufferObjects */\n      uniformBufferObject: true,\n      /** Support for VertexArrayObjects */\n      vertexArrayObject: true,\n      /** Support for SRGB texture format */\n      srgbTextures: true,\n      /** Support for wrapping modes if a texture is non-power of two */\n      nonPowOf2wrapping: true,\n      /** Support for MSAA (antialiasing of dynamic textures) */\n      msaa: true,\n      /** Support for mipmaps if a texture is non-power of two */\n      nonPowOf2mipmaps: true\n    };\n    this._renderer = renderer;\n    this.extensions = /* @__PURE__ */ Object.create(null);\n    this.handleContextLost = this.handleContextLost.bind(this);\n    this.handleContextRestored = this.handleContextRestored.bind(this);\n  }\n  /**\n   * `true` if the context is lost\n   * @readonly\n   */\n  get isLost() {\n    return !this.gl || this.gl.isContextLost();\n  }\n  /**\n   * Handles the context change event.\n   * @param {WebGLRenderingContext} gl - New WebGL context.\n   */\n  contextChange(gl) {\n    this.gl = gl;\n    this._renderer.gl = gl;\n  }\n  init(options) {\n    options = { ..._GlContextSystem.defaultOptions, ...options };\n    let multiView = this.multiView = options.multiView;\n    if (options.context && multiView) {\n      warn(\"Renderer created with both a context and multiview enabled. Disabling multiView as both cannot work together.\");\n      multiView = false;\n    }\n    if (multiView) {\n      this.canvas = DOMAdapter.get().createCanvas(this._renderer.canvas.width, this._renderer.canvas.height);\n    } else {\n      this.canvas = this._renderer.view.canvas;\n    }\n    if (options.context) {\n      this.initFromContext(options.context);\n    } else {\n      const alpha = this._renderer.background.alpha < 1;\n      const premultipliedAlpha = options.premultipliedAlpha ?? true;\n      const antialias = options.antialias && !this._renderer.backBuffer.useBackBuffer;\n      this.createContext(options.preferWebGLVersion, {\n        alpha,\n        premultipliedAlpha,\n        antialias,\n        stencil: true,\n        preserveDrawingBuffer: options.preserveDrawingBuffer,\n        powerPreference: options.powerPreference ?? \"default\"\n      });\n    }\n  }\n  ensureCanvasSize(targetCanvas) {\n    if (!this.multiView) {\n      if (targetCanvas !== this.canvas) {\n        warn(\"multiView is disabled, but targetCanvas is not the main canvas\");\n      }\n      return;\n    }\n    const { canvas } = this;\n    if (canvas.width < targetCanvas.width || canvas.height < targetCanvas.height) {\n      canvas.width = Math.max(targetCanvas.width, targetCanvas.width);\n      canvas.height = Math.max(targetCanvas.height, targetCanvas.height);\n    }\n  }\n  /**\n   * Initializes the context.\n   * @protected\n   * @param {WebGLRenderingContext} gl - WebGL context\n   */\n  initFromContext(gl) {\n    this.gl = gl;\n    this.webGLVersion = gl instanceof DOMAdapter.get().getWebGLRenderingContext() ? 1 : 2;\n    this.getExtensions();\n    this.validateContext(gl);\n    this._renderer.runners.contextChange.emit(gl);\n    const element = this._renderer.view.canvas;\n    element.addEventListener(\"webglcontextlost\", this.handleContextLost, false);\n    element.addEventListener(\"webglcontextrestored\", this.handleContextRestored, false);\n  }\n  /**\n   * Initialize from context options\n   * @protected\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/getContext\n   * @param preferWebGLVersion\n   * @param {object} options - context attributes\n   */\n  createContext(preferWebGLVersion, options) {\n    let gl;\n    const canvas = this.canvas;\n    if (preferWebGLVersion === 2) {\n      gl = canvas.getContext(\"webgl2\", options);\n    }\n    if (!gl) {\n      gl = canvas.getContext(\"webgl\", options);\n      if (!gl) {\n        throw new Error(\"This browser does not support WebGL. Try using the canvas renderer\");\n      }\n    }\n    this.gl = gl;\n    this.initFromContext(this.gl);\n  }\n  /** Auto-populate the {@link GlContextSystem.extensions extensions}. */\n  getExtensions() {\n    const { gl } = this;\n    const common = {\n      anisotropicFiltering: gl.getExtension(\"EXT_texture_filter_anisotropic\"),\n      floatTextureLinear: gl.getExtension(\"OES_texture_float_linear\"),\n      s3tc: gl.getExtension(\"WEBGL_compressed_texture_s3tc\"),\n      s3tc_sRGB: gl.getExtension(\"WEBGL_compressed_texture_s3tc_srgb\"),\n      // eslint-disable-line camelcase\n      etc: gl.getExtension(\"WEBGL_compressed_texture_etc\"),\n      etc1: gl.getExtension(\"WEBGL_compressed_texture_etc1\"),\n      pvrtc: gl.getExtension(\"WEBGL_compressed_texture_pvrtc\") || gl.getExtension(\"WEBKIT_WEBGL_compressed_texture_pvrtc\"),\n      atc: gl.getExtension(\"WEBGL_compressed_texture_atc\"),\n      astc: gl.getExtension(\"WEBGL_compressed_texture_astc\"),\n      bptc: gl.getExtension(\"EXT_texture_compression_bptc\"),\n      rgtc: gl.getExtension(\"EXT_texture_compression_rgtc\"),\n      loseContext: gl.getExtension(\"WEBGL_lose_context\")\n    };\n    if (this.webGLVersion === 1) {\n      this.extensions = {\n        ...common,\n        drawBuffers: gl.getExtension(\"WEBGL_draw_buffers\"),\n        depthTexture: gl.getExtension(\"WEBGL_depth_texture\"),\n        vertexArrayObject: gl.getExtension(\"OES_vertex_array_object\") || gl.getExtension(\"MOZ_OES_vertex_array_object\") || gl.getExtension(\"WEBKIT_OES_vertex_array_object\"),\n        uint32ElementIndex: gl.getExtension(\"OES_element_index_uint\"),\n        // Floats and half-floats\n        floatTexture: gl.getExtension(\"OES_texture_float\"),\n        floatTextureLinear: gl.getExtension(\"OES_texture_float_linear\"),\n        textureHalfFloat: gl.getExtension(\"OES_texture_half_float\"),\n        textureHalfFloatLinear: gl.getExtension(\"OES_texture_half_float_linear\"),\n        vertexAttribDivisorANGLE: gl.getExtension(\"ANGLE_instanced_arrays\"),\n        srgb: gl.getExtension(\"EXT_sRGB\")\n      };\n    } else {\n      this.extensions = {\n        ...common,\n        colorBufferFloat: gl.getExtension(\"EXT_color_buffer_float\")\n      };\n      const provokeExt = gl.getExtension(\"WEBGL_provoking_vertex\");\n      if (provokeExt) {\n        provokeExt.provokingVertexWEBGL(provokeExt.FIRST_VERTEX_CONVENTION_WEBGL);\n      }\n    }\n  }\n  /**\n   * Handles a lost webgl context\n   * @param {WebGLContextEvent} event - The context lost event.\n   */\n  handleContextLost(event) {\n    event.preventDefault();\n    if (this._contextLossForced) {\n      this._contextLossForced = false;\n      setTimeout(() => {\n        if (this.gl.isContextLost()) {\n          this.extensions.loseContext?.restoreContext();\n        }\n      }, 0);\n    }\n  }\n  /** Handles a restored webgl context. */\n  handleContextRestored() {\n    this.getExtensions();\n    this._renderer.runners.contextChange.emit(this.gl);\n  }\n  destroy() {\n    const element = this._renderer.view.canvas;\n    this._renderer = null;\n    element.removeEventListener(\"webglcontextlost\", this.handleContextLost);\n    element.removeEventListener(\"webglcontextrestored\", this.handleContextRestored);\n    this.gl.useProgram(null);\n    this.extensions.loseContext?.loseContext();\n  }\n  /**\n   * this function can be called to force a webGL context loss\n   * this will release all resources on the GPU.\n   * Useful if you need to put Pixi to sleep, and save some GPU memory\n   *\n   * As soon as render is called - all resources will be created again.\n   */\n  forceContextLoss() {\n    this.extensions.loseContext?.loseContext();\n    this._contextLossForced = true;\n  }\n  /**\n   * Validate context.\n   * @param {WebGLRenderingContext} gl - Render context.\n   */\n  validateContext(gl) {\n    const attributes = gl.getContextAttributes();\n    if (attributes && !attributes.stencil) {\n      warn(\"Provided WebGL context does not have a stencil buffer, masks may not render correctly\");\n    }\n    const supports = this.supports;\n    const isWebGl2 = this.webGLVersion === 2;\n    const extensions = this.extensions;\n    supports.uint32Indices = isWebGl2 || !!extensions.uint32ElementIndex;\n    supports.uniformBufferObject = isWebGl2;\n    supports.vertexArrayObject = isWebGl2 || !!extensions.vertexArrayObject;\n    supports.srgbTextures = isWebGl2 || !!extensions.srgb;\n    supports.nonPowOf2wrapping = isWebGl2;\n    supports.nonPowOf2mipmaps = isWebGl2;\n    supports.msaa = isWebGl2;\n    if (!supports.uint32Indices) {\n      warn(\"Provided WebGL context does not support 32 index buffer, large scenes may not render correctly\");\n    }\n  }\n};\n/** @ignore */\n_GlContextSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"context\"\n};\n/** The default options for the system. */\n_GlContextSystem.defaultOptions = {\n  /**\n   * {@link WebGLOptions.context}\n   * @default null\n   */\n  context: null,\n  /**\n   * {@link WebGLOptions.premultipliedAlpha}\n   * @default true\n   */\n  premultipliedAlpha: true,\n  /**\n   * {@link WebGLOptions.preserveDrawingBuffer}\n   * @default false\n   */\n  preserveDrawingBuffer: false,\n  /**\n   * {@link WebGLOptions.powerPreference}\n   * @default default\n   */\n  powerPreference: void 0,\n  /**\n   * {@link WebGLOptions.webGLVersion}\n   * @default 2\n   */\n  preferWebGLVersion: 2,\n  /**\n   * {@link WebGLOptions.multiView}\n   * @default false\n   */\n  multiView: false\n};\nlet GlContextSystem = _GlContextSystem;\n\nexport { GlContextSystem };\n//# sourceMappingURL=GlContextSystem.mjs.map\n","\"use strict\";\nvar GL_FORMATS = /* @__PURE__ */ ((GL_FORMATS2) => {\n  GL_FORMATS2[GL_FORMATS2[\"RGBA\"] = 6408] = \"RGBA\";\n  GL_FORMATS2[GL_FORMATS2[\"RGB\"] = 6407] = \"RGB\";\n  GL_FORMATS2[GL_FORMATS2[\"RG\"] = 33319] = \"RG\";\n  GL_FORMATS2[GL_FORMATS2[\"RED\"] = 6403] = \"RED\";\n  GL_FORMATS2[GL_FORMATS2[\"RGBA_INTEGER\"] = 36249] = \"RGBA_INTEGER\";\n  GL_FORMATS2[GL_FORMATS2[\"RGB_INTEGER\"] = 36248] = \"RGB_INTEGER\";\n  GL_FORMATS2[GL_FORMATS2[\"RG_INTEGER\"] = 33320] = \"RG_INTEGER\";\n  GL_FORMATS2[GL_FORMATS2[\"RED_INTEGER\"] = 36244] = \"RED_INTEGER\";\n  GL_FORMATS2[GL_FORMATS2[\"ALPHA\"] = 6406] = \"ALPHA\";\n  GL_FORMATS2[GL_FORMATS2[\"LUMINANCE\"] = 6409] = \"LUMINANCE\";\n  GL_FORMATS2[GL_FORMATS2[\"LUMINANCE_ALPHA\"] = 6410] = \"LUMINANCE_ALPHA\";\n  GL_FORMATS2[GL_FORMATS2[\"DEPTH_COMPONENT\"] = 6402] = \"DEPTH_COMPONENT\";\n  GL_FORMATS2[GL_FORMATS2[\"DEPTH_STENCIL\"] = 34041] = \"DEPTH_STENCIL\";\n  return GL_FORMATS2;\n})(GL_FORMATS || {});\nvar GL_TARGETS = /* @__PURE__ */ ((GL_TARGETS2) => {\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_2D\"] = 3553] = \"TEXTURE_2D\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP\"] = 34067] = \"TEXTURE_CUBE_MAP\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_2D_ARRAY\"] = 35866] = \"TEXTURE_2D_ARRAY\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_POSITIVE_X\"] = 34069] = \"TEXTURE_CUBE_MAP_POSITIVE_X\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_NEGATIVE_X\"] = 34070] = \"TEXTURE_CUBE_MAP_NEGATIVE_X\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_POSITIVE_Y\"] = 34071] = \"TEXTURE_CUBE_MAP_POSITIVE_Y\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_NEGATIVE_Y\"] = 34072] = \"TEXTURE_CUBE_MAP_NEGATIVE_Y\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_POSITIVE_Z\"] = 34073] = \"TEXTURE_CUBE_MAP_POSITIVE_Z\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_NEGATIVE_Z\"] = 34074] = \"TEXTURE_CUBE_MAP_NEGATIVE_Z\";\n  return GL_TARGETS2;\n})(GL_TARGETS || {});\nvar GL_WRAP_MODES = /* @__PURE__ */ ((GL_WRAP_MODES2) => {\n  GL_WRAP_MODES2[GL_WRAP_MODES2[\"CLAMP\"] = 33071] = \"CLAMP\";\n  GL_WRAP_MODES2[GL_WRAP_MODES2[\"REPEAT\"] = 10497] = \"REPEAT\";\n  GL_WRAP_MODES2[GL_WRAP_MODES2[\"MIRRORED_REPEAT\"] = 33648] = \"MIRRORED_REPEAT\";\n  return GL_WRAP_MODES2;\n})(GL_WRAP_MODES || {});\nvar GL_TYPES = /* @__PURE__ */ ((GL_TYPES2) => {\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_BYTE\"] = 5121] = \"UNSIGNED_BYTE\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_SHORT\"] = 5123] = \"UNSIGNED_SHORT\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_SHORT_5_6_5\"] = 33635] = \"UNSIGNED_SHORT_5_6_5\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_SHORT_4_4_4_4\"] = 32819] = \"UNSIGNED_SHORT_4_4_4_4\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_SHORT_5_5_5_1\"] = 32820] = \"UNSIGNED_SHORT_5_5_5_1\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_INT\"] = 5125] = \"UNSIGNED_INT\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_INT_10F_11F_11F_REV\"] = 35899] = \"UNSIGNED_INT_10F_11F_11F_REV\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_INT_2_10_10_10_REV\"] = 33640] = \"UNSIGNED_INT_2_10_10_10_REV\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_INT_24_8\"] = 34042] = \"UNSIGNED_INT_24_8\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_INT_5_9_9_9_REV\"] = 35902] = \"UNSIGNED_INT_5_9_9_9_REV\";\n  GL_TYPES2[GL_TYPES2[\"BYTE\"] = 5120] = \"BYTE\";\n  GL_TYPES2[GL_TYPES2[\"SHORT\"] = 5122] = \"SHORT\";\n  GL_TYPES2[GL_TYPES2[\"INT\"] = 5124] = \"INT\";\n  GL_TYPES2[GL_TYPES2[\"FLOAT\"] = 5126] = \"FLOAT\";\n  GL_TYPES2[GL_TYPES2[\"FLOAT_32_UNSIGNED_INT_24_8_REV\"] = 36269] = \"FLOAT_32_UNSIGNED_INT_24_8_REV\";\n  GL_TYPES2[GL_TYPES2[\"HALF_FLOAT\"] = 36193] = \"HALF_FLOAT\";\n  return GL_TYPES2;\n})(GL_TYPES || {});\n\nexport { GL_FORMATS, GL_TARGETS, GL_TYPES, GL_WRAP_MODES };\n//# sourceMappingURL=const.mjs.map\n","import { GL_TYPES } from '../../texture/const.mjs';\n\n\"use strict\";\nconst infoMap = {\n  uint8x2: GL_TYPES.UNSIGNED_BYTE,\n  uint8x4: GL_TYPES.UNSIGNED_BYTE,\n  sint8x2: GL_TYPES.BYTE,\n  sint8x4: GL_TYPES.BYTE,\n  unorm8x2: GL_TYPES.UNSIGNED_BYTE,\n  unorm8x4: GL_TYPES.UNSIGNED_BYTE,\n  snorm8x2: GL_TYPES.BYTE,\n  snorm8x4: GL_TYPES.BYTE,\n  uint16x2: GL_TYPES.UNSIGNED_SHORT,\n  uint16x4: GL_TYPES.UNSIGNED_SHORT,\n  sint16x2: GL_TYPES.SHORT,\n  sint16x4: GL_TYPES.SHORT,\n  unorm16x2: GL_TYPES.UNSIGNED_SHORT,\n  unorm16x4: GL_TYPES.UNSIGNED_SHORT,\n  snorm16x2: GL_TYPES.SHORT,\n  snorm16x4: GL_TYPES.SHORT,\n  float16x2: GL_TYPES.HALF_FLOAT,\n  float16x4: GL_TYPES.HALF_FLOAT,\n  float32: GL_TYPES.FLOAT,\n  float32x2: GL_TYPES.FLOAT,\n  float32x3: GL_TYPES.FLOAT,\n  float32x4: GL_TYPES.FLOAT,\n  uint32: GL_TYPES.UNSIGNED_INT,\n  uint32x2: GL_TYPES.UNSIGNED_INT,\n  uint32x3: GL_TYPES.UNSIGNED_INT,\n  uint32x4: GL_TYPES.UNSIGNED_INT,\n  sint32: GL_TYPES.INT,\n  sint32x2: GL_TYPES.INT,\n  sint32x3: GL_TYPES.INT,\n  sint32x4: GL_TYPES.INT\n};\nfunction getGlTypeFromFormat(format) {\n  return infoMap[format] ?? infoMap.float32;\n}\n\nexport { getGlTypeFromFormat };\n//# sourceMappingURL=getGlTypeFromFormat.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { getAttributeInfoFromFormat } from '../../shared/geometry/utils/getAttributeInfoFromFormat.mjs';\nimport { ensureAttributes } from '../shader/program/ensureAttributes.mjs';\nimport { getGlTypeFromFormat } from './utils/getGlTypeFromFormat.mjs';\n\n\"use strict\";\nconst topologyToGlMap = {\n  \"point-list\": 0,\n  \"line-list\": 1,\n  \"line-strip\": 3,\n  \"triangle-list\": 4,\n  \"triangle-strip\": 5\n};\nclass GlGeometrySystem {\n  /** @param renderer - The renderer this System works for. */\n  constructor(renderer) {\n    this._geometryVaoHash = /* @__PURE__ */ Object.create(null);\n    this._renderer = renderer;\n    this._activeGeometry = null;\n    this._activeVao = null;\n    this.hasVao = true;\n    this.hasInstance = true;\n    this._renderer.renderableGC.addManagedHash(this, \"_geometryVaoHash\");\n  }\n  /** Sets up the renderer context and necessary buffers. */\n  contextChange() {\n    const gl = this.gl = this._renderer.gl;\n    if (!this._renderer.context.supports.vertexArrayObject) {\n      throw new Error(\"[PixiJS] Vertex Array Objects are not supported on this device\");\n    }\n    const nativeVaoExtension = this._renderer.context.extensions.vertexArrayObject;\n    if (nativeVaoExtension) {\n      gl.createVertexArray = () => nativeVaoExtension.createVertexArrayOES();\n      gl.bindVertexArray = (vao) => nativeVaoExtension.bindVertexArrayOES(vao);\n      gl.deleteVertexArray = (vao) => nativeVaoExtension.deleteVertexArrayOES(vao);\n    }\n    const nativeInstancedExtension = this._renderer.context.extensions.vertexAttribDivisorANGLE;\n    if (nativeInstancedExtension) {\n      gl.drawArraysInstanced = (a, b, c, d) => {\n        nativeInstancedExtension.drawArraysInstancedANGLE(a, b, c, d);\n      };\n      gl.drawElementsInstanced = (a, b, c, d, e) => {\n        nativeInstancedExtension.drawElementsInstancedANGLE(a, b, c, d, e);\n      };\n      gl.vertexAttribDivisor = (a, b) => nativeInstancedExtension.vertexAttribDivisorANGLE(a, b);\n    }\n    this._activeGeometry = null;\n    this._activeVao = null;\n    this._geometryVaoHash = /* @__PURE__ */ Object.create(null);\n  }\n  /**\n   * Binds geometry so that is can be drawn. Creating a Vao if required\n   * @param geometry - Instance of geometry to bind.\n   * @param program - Instance of program to use vao for.\n   */\n  bind(geometry, program) {\n    const gl = this.gl;\n    this._activeGeometry = geometry;\n    const vao = this.getVao(geometry, program);\n    if (this._activeVao !== vao) {\n      this._activeVao = vao;\n      gl.bindVertexArray(vao);\n    }\n    this.updateBuffers();\n  }\n  /** Reset and unbind any active VAO and geometry. */\n  resetState() {\n    this.unbind();\n  }\n  /** Update buffers of the currently bound geometry. */\n  updateBuffers() {\n    const geometry = this._activeGeometry;\n    const bufferSystem = this._renderer.buffer;\n    for (let i = 0; i < geometry.buffers.length; i++) {\n      const buffer = geometry.buffers[i];\n      bufferSystem.updateBuffer(buffer);\n    }\n  }\n  /**\n   * Check compatibility between a geometry and a program\n   * @param geometry - Geometry instance.\n   * @param program - Program instance.\n   */\n  checkCompatibility(geometry, program) {\n    const geometryAttributes = geometry.attributes;\n    const shaderAttributes = program._attributeData;\n    for (const j in shaderAttributes) {\n      if (!geometryAttributes[j]) {\n        throw new Error(`shader and geometry incompatible, geometry missing the \"${j}\" attribute`);\n      }\n    }\n  }\n  /**\n   * Takes a geometry and program and generates a unique signature for them.\n   * @param geometry - To get signature from.\n   * @param program - To test geometry against.\n   * @returns - Unique signature of the geometry and program\n   */\n  getSignature(geometry, program) {\n    const attribs = geometry.attributes;\n    const shaderAttributes = program._attributeData;\n    const strings = [\"g\", geometry.uid];\n    for (const i in attribs) {\n      if (shaderAttributes[i]) {\n        strings.push(i, shaderAttributes[i].location);\n      }\n    }\n    return strings.join(\"-\");\n  }\n  getVao(geometry, program) {\n    return this._geometryVaoHash[geometry.uid]?.[program._key] || this.initGeometryVao(geometry, program);\n  }\n  /**\n   * Creates or gets Vao with the same structure as the geometry and stores it on the geometry.\n   * If vao is created, it is bound automatically. We use a shader to infer what and how to set up the\n   * attribute locations.\n   * @param geometry - Instance of geometry to to generate Vao for.\n   * @param program\n   * @param _incRefCount - Increment refCount of all geometry buffers.\n   */\n  initGeometryVao(geometry, program, _incRefCount = true) {\n    const gl = this._renderer.gl;\n    const bufferSystem = this._renderer.buffer;\n    this._renderer.shader._getProgramData(program);\n    this.checkCompatibility(geometry, program);\n    const signature = this.getSignature(geometry, program);\n    if (!this._geometryVaoHash[geometry.uid]) {\n      this._geometryVaoHash[geometry.uid] = /* @__PURE__ */ Object.create(null);\n      geometry.on(\"destroy\", this.onGeometryDestroy, this);\n    }\n    const vaoObjectHash = this._geometryVaoHash[geometry.uid];\n    let vao = vaoObjectHash[signature];\n    if (vao) {\n      vaoObjectHash[program._key] = vao;\n      return vao;\n    }\n    ensureAttributes(geometry, program._attributeData);\n    const buffers = geometry.buffers;\n    vao = gl.createVertexArray();\n    gl.bindVertexArray(vao);\n    for (let i = 0; i < buffers.length; i++) {\n      const buffer = buffers[i];\n      bufferSystem.bind(buffer);\n    }\n    this.activateVao(geometry, program);\n    vaoObjectHash[program._key] = vao;\n    vaoObjectHash[signature] = vao;\n    gl.bindVertexArray(null);\n    return vao;\n  }\n  /**\n   * Disposes geometry.\n   * @param geometry - Geometry with buffers. Only VAO will be disposed\n   * @param [contextLost=false] - If context was lost, we suppress deleteVertexArray\n   */\n  onGeometryDestroy(geometry, contextLost) {\n    const vaoObjectHash = this._geometryVaoHash[geometry.uid];\n    const gl = this.gl;\n    if (vaoObjectHash) {\n      if (contextLost) {\n        for (const i in vaoObjectHash) {\n          if (this._activeVao !== vaoObjectHash[i]) {\n            this.unbind();\n          }\n          gl.deleteVertexArray(vaoObjectHash[i]);\n        }\n      }\n      this._geometryVaoHash[geometry.uid] = null;\n    }\n  }\n  /**\n   * Dispose all WebGL resources of all managed geometries.\n   * @param [contextLost=false] - If context was lost, we suppress `gl.delete` calls\n   */\n  destroyAll(contextLost = false) {\n    const gl = this.gl;\n    for (const i in this._geometryVaoHash) {\n      if (contextLost) {\n        for (const j in this._geometryVaoHash[i]) {\n          const vaoObjectHash = this._geometryVaoHash[i];\n          if (this._activeVao !== vaoObjectHash) {\n            this.unbind();\n          }\n          gl.deleteVertexArray(vaoObjectHash[j]);\n        }\n      }\n      this._geometryVaoHash[i] = null;\n    }\n  }\n  /**\n   * Activate vertex array object.\n   * @param geometry - Geometry instance.\n   * @param program - Shader program instance.\n   */\n  activateVao(geometry, program) {\n    const gl = this._renderer.gl;\n    const bufferSystem = this._renderer.buffer;\n    const attributes = geometry.attributes;\n    if (geometry.indexBuffer) {\n      bufferSystem.bind(geometry.indexBuffer);\n    }\n    let lastBuffer = null;\n    for (const j in attributes) {\n      const attribute = attributes[j];\n      const buffer = attribute.buffer;\n      const glBuffer = bufferSystem.getGlBuffer(buffer);\n      const programAttrib = program._attributeData[j];\n      if (programAttrib) {\n        if (lastBuffer !== glBuffer) {\n          bufferSystem.bind(buffer);\n          lastBuffer = glBuffer;\n        }\n        const location = programAttrib.location;\n        gl.enableVertexAttribArray(location);\n        const attributeInfo = getAttributeInfoFromFormat(attribute.format);\n        const type = getGlTypeFromFormat(attribute.format);\n        if (programAttrib.format?.substring(1, 4) === \"int\") {\n          gl.vertexAttribIPointer(\n            location,\n            attributeInfo.size,\n            type,\n            attribute.stride,\n            attribute.offset\n          );\n        } else {\n          gl.vertexAttribPointer(\n            location,\n            attributeInfo.size,\n            type,\n            attributeInfo.normalised,\n            attribute.stride,\n            attribute.offset\n          );\n        }\n        if (attribute.instance) {\n          if (this.hasInstance) {\n            const divisor = attribute.divisor ?? 1;\n            gl.vertexAttribDivisor(location, divisor);\n          } else {\n            throw new Error(\"geometry error, GPU Instancing is not supported on this device\");\n          }\n        }\n      }\n    }\n  }\n  /**\n   * Draws the currently bound geometry.\n   * @param topology - The type primitive to render.\n   * @param size - The number of elements to be rendered. If not specified, all vertices after the\n   *  starting vertex will be drawn.\n   * @param start - The starting vertex in the geometry to start drawing from. If not specified,\n   *  drawing will start from the first vertex.\n   * @param instanceCount - The number of instances of the set of elements to execute. If not specified,\n   *  all instances will be drawn.\n   * @returns This instance of the geometry system.\n   */\n  draw(topology, size, start, instanceCount) {\n    const { gl } = this._renderer;\n    const geometry = this._activeGeometry;\n    const glTopology = topologyToGlMap[topology || geometry.topology];\n    instanceCount ?? (instanceCount = geometry.instanceCount);\n    if (geometry.indexBuffer) {\n      const byteSize = geometry.indexBuffer.data.BYTES_PER_ELEMENT;\n      const glType = byteSize === 2 ? gl.UNSIGNED_SHORT : gl.UNSIGNED_INT;\n      if (instanceCount !== 1) {\n        gl.drawElementsInstanced(glTopology, size || geometry.indexBuffer.data.length, glType, (start || 0) * byteSize, instanceCount);\n      } else {\n        gl.drawElements(glTopology, size || geometry.indexBuffer.data.length, glType, (start || 0) * byteSize);\n      }\n    } else if (instanceCount !== 1) {\n      gl.drawArraysInstanced(glTopology, start || 0, size || geometry.getSize(), instanceCount);\n    } else {\n      gl.drawArrays(glTopology, start || 0, size || geometry.getSize());\n    }\n    return this;\n  }\n  /** Unbind/reset everything. */\n  unbind() {\n    this.gl.bindVertexArray(null);\n    this._activeVao = null;\n    this._activeGeometry = null;\n  }\n  destroy() {\n    this._renderer = null;\n    this.gl = null;\n    this._activeVao = null;\n    this._activeGeometry = null;\n    this._geometryVaoHash = null;\n  }\n}\n/** @ignore */\nGlGeometrySystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"geometry\"\n};\n\nexport { GlGeometrySystem };\n//# sourceMappingURL=GlGeometrySystem.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { warn } from '../../../utils/logging/warn.mjs';\nimport { Geometry } from '../shared/geometry/Geometry.mjs';\nimport { Shader } from '../shared/shader/Shader.mjs';\nimport { State } from '../shared/state/State.mjs';\nimport { TextureSource } from '../shared/texture/sources/TextureSource.mjs';\nimport { Texture } from '../shared/texture/Texture.mjs';\nimport { GlProgram } from './shader/GlProgram.mjs';\n\n\"use strict\";\nconst bigTriangleGeometry = new Geometry({\n  attributes: {\n    aPosition: [\n      -1,\n      -1,\n      // Bottom left corner\n      3,\n      -1,\n      // Bottom right corner, extending beyond right edge\n      -1,\n      3\n      // Top left corner, extending beyond top edge\n    ]\n  }\n});\nconst _GlBackBufferSystem = class _GlBackBufferSystem {\n  constructor(renderer) {\n    /** if true, the back buffer is used */\n    this.useBackBuffer = false;\n    this._useBackBufferThisRender = false;\n    this._renderer = renderer;\n  }\n  init(options = {}) {\n    const { useBackBuffer, antialias } = { ..._GlBackBufferSystem.defaultOptions, ...options };\n    this.useBackBuffer = useBackBuffer;\n    this._antialias = antialias;\n    if (!this._renderer.context.supports.msaa) {\n      warn(\"antialiasing, is not supported on when using the back buffer\");\n      this._antialias = false;\n    }\n    this._state = State.for2d();\n    const bigTriangleProgram = new GlProgram({\n      vertex: `\n                attribute vec2 aPosition;\n                out vec2 vUv;\n\n                void main() {\n                    gl_Position = vec4(aPosition, 0.0, 1.0);\n\n                    vUv = (aPosition + 1.0) / 2.0;\n\n                    // flip dem UVs\n                    vUv.y = 1.0 - vUv.y;\n                }`,\n      fragment: `\n                in vec2 vUv;\n                out vec4 finalColor;\n\n                uniform sampler2D uTexture;\n\n                void main() {\n                    finalColor = texture(uTexture, vUv);\n                }`,\n      name: \"big-triangle\"\n    });\n    this._bigTriangleShader = new Shader({\n      glProgram: bigTriangleProgram,\n      resources: {\n        uTexture: Texture.WHITE.source\n      }\n    });\n  }\n  /**\n   * This is called before the RenderTargetSystem is started. This is where\n   * we replace the target with the back buffer if required.\n   * @param options - The options for this render.\n   */\n  renderStart(options) {\n    const renderTarget = this._renderer.renderTarget.getRenderTarget(options.target);\n    this._useBackBufferThisRender = this.useBackBuffer && !!renderTarget.isRoot;\n    if (this._useBackBufferThisRender) {\n      const renderTarget2 = this._renderer.renderTarget.getRenderTarget(options.target);\n      this._targetTexture = renderTarget2.colorTexture;\n      options.target = this._getBackBufferTexture(renderTarget2.colorTexture);\n    }\n  }\n  renderEnd() {\n    this._presentBackBuffer();\n  }\n  _presentBackBuffer() {\n    const renderer = this._renderer;\n    renderer.renderTarget.finishRenderPass();\n    if (!this._useBackBufferThisRender)\n      return;\n    renderer.renderTarget.bind(this._targetTexture, false);\n    this._bigTriangleShader.resources.uTexture = this._backBufferTexture.source;\n    renderer.encoder.draw({\n      geometry: bigTriangleGeometry,\n      shader: this._bigTriangleShader,\n      state: this._state\n    });\n  }\n  _getBackBufferTexture(targetSourceTexture) {\n    this._backBufferTexture = this._backBufferTexture || new Texture({\n      source: new TextureSource({\n        width: targetSourceTexture.width,\n        height: targetSourceTexture.height,\n        resolution: targetSourceTexture._resolution,\n        antialias: this._antialias\n      })\n    });\n    this._backBufferTexture.source.resize(\n      targetSourceTexture.width,\n      targetSourceTexture.height,\n      targetSourceTexture._resolution\n    );\n    return this._backBufferTexture;\n  }\n  /** destroys the back buffer */\n  destroy() {\n    if (this._backBufferTexture) {\n      this._backBufferTexture.destroy();\n      this._backBufferTexture = null;\n    }\n  }\n};\n/** @ignore */\n_GlBackBufferSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"backBuffer\",\n  priority: 1\n};\n/** default options for the back buffer system */\n_GlBackBufferSystem.defaultOptions = {\n  /** if true will use the back buffer where required */\n  useBackBuffer: false\n};\nlet GlBackBufferSystem = _GlBackBufferSystem;\n\nexport { GlBackBufferSystem };\n//# sourceMappingURL=GlBackBufferSystem.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\n\n\"use strict\";\nclass GlColorMaskSystem {\n  constructor(renderer) {\n    this._colorMaskCache = 15;\n    this._renderer = renderer;\n  }\n  setMask(colorMask) {\n    if (this._colorMaskCache === colorMask)\n      return;\n    this._colorMaskCache = colorMask;\n    this._renderer.gl.colorMask(\n      !!(colorMask & 8),\n      !!(colorMask & 4),\n      !!(colorMask & 2),\n      !!(colorMask & 1)\n    );\n  }\n}\n/** @ignore */\nGlColorMaskSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"colorMask\"\n};\n\nexport { GlColorMaskSystem };\n//# sourceMappingURL=GlColorMaskSystem.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\n\n\"use strict\";\nclass GlEncoderSystem {\n  constructor(renderer) {\n    this.commandFinished = Promise.resolve();\n    this._renderer = renderer;\n  }\n  setGeometry(geometry, shader) {\n    this._renderer.geometry.bind(geometry, shader.glProgram);\n  }\n  finishRenderPass() {\n  }\n  draw(options) {\n    const renderer = this._renderer;\n    const { geometry, shader, state, skipSync, topology: type, size, start, instanceCount } = options;\n    renderer.shader.bind(shader, skipSync);\n    renderer.geometry.bind(geometry, renderer.shader._activeProgram);\n    if (state) {\n      renderer.state.set(state);\n    }\n    renderer.geometry.draw(type, size, start, instanceCount ?? geometry.instanceCount);\n  }\n  destroy() {\n    this._renderer = null;\n  }\n}\n/** @ignore */\nGlEncoderSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"encoder\"\n};\n\nexport { GlEncoderSystem };\n//# sourceMappingURL=GlEncoderSystem.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { checkMaxIfStatementsInShader } from '../../batcher/gl/utils/checkMaxIfStatementsInShader.mjs';\n\n\"use strict\";\nclass GlLimitsSystem {\n  constructor(renderer) {\n    this._renderer = renderer;\n  }\n  contextChange() {\n    const gl = this._renderer.gl;\n    this.maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    this.maxBatchableTextures = checkMaxIfStatementsInShader(this.maxTextures, gl);\n    const isWebGl2 = this._renderer.context.webGLVersion === 2;\n    this.maxUniformBindings = isWebGl2 ? gl.getParameter(gl.MAX_UNIFORM_BUFFER_BINDINGS) : 0;\n  }\n  destroy() {\n  }\n}\n/** @ignore */\nGlLimitsSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"limits\"\n};\n\nexport { GlLimitsSystem };\n//# sourceMappingURL=GlLimitsSystem.mjs.map\n","\"use strict\";\nclass GlRenderTarget {\n  constructor() {\n    this.width = -1;\n    this.height = -1;\n    this.msaa = false;\n    this.msaaRenderBuffer = [];\n  }\n}\n\nexport { GlRenderTarget };\n//# sourceMappingURL=GlRenderTarget.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { GpuStencilModesToPixi } from '../gpu/state/GpuStencilModesToPixi.mjs';\nimport { STENCIL_MODES } from '../shared/state/const.mjs';\n\n\"use strict\";\nclass GlStencilSystem {\n  constructor(renderer) {\n    this._stencilCache = {\n      enabled: false,\n      stencilReference: 0,\n      stencilMode: STENCIL_MODES.NONE\n    };\n    this._renderTargetStencilState = /* @__PURE__ */ Object.create(null);\n    renderer.renderTarget.onRenderTargetChange.add(this);\n  }\n  contextChange(gl) {\n    this._gl = gl;\n    this._comparisonFuncMapping = {\n      always: gl.ALWAYS,\n      never: gl.NEVER,\n      equal: gl.EQUAL,\n      \"not-equal\": gl.NOTEQUAL,\n      less: gl.LESS,\n      \"less-equal\": gl.LEQUAL,\n      greater: gl.GREATER,\n      \"greater-equal\": gl.GEQUAL\n    };\n    this._stencilOpsMapping = {\n      keep: gl.KEEP,\n      zero: gl.ZERO,\n      replace: gl.REPLACE,\n      invert: gl.INVERT,\n      \"increment-clamp\": gl.INCR,\n      \"decrement-clamp\": gl.DECR,\n      \"increment-wrap\": gl.INCR_WRAP,\n      \"decrement-wrap\": gl.DECR_WRAP\n    };\n    this.resetState();\n  }\n  onRenderTargetChange(renderTarget) {\n    if (this._activeRenderTarget === renderTarget)\n      return;\n    this._activeRenderTarget = renderTarget;\n    let stencilState = this._renderTargetStencilState[renderTarget.uid];\n    if (!stencilState) {\n      stencilState = this._renderTargetStencilState[renderTarget.uid] = {\n        stencilMode: STENCIL_MODES.DISABLED,\n        stencilReference: 0\n      };\n    }\n    this.setStencilMode(stencilState.stencilMode, stencilState.stencilReference);\n  }\n  resetState() {\n    this._stencilCache.enabled = false;\n    this._stencilCache.stencilMode = STENCIL_MODES.NONE;\n    this._stencilCache.stencilReference = 0;\n  }\n  setStencilMode(stencilMode, stencilReference) {\n    const stencilState = this._renderTargetStencilState[this._activeRenderTarget.uid];\n    const gl = this._gl;\n    const mode = GpuStencilModesToPixi[stencilMode];\n    const _stencilCache = this._stencilCache;\n    stencilState.stencilMode = stencilMode;\n    stencilState.stencilReference = stencilReference;\n    if (stencilMode === STENCIL_MODES.DISABLED) {\n      if (this._stencilCache.enabled) {\n        this._stencilCache.enabled = false;\n        gl.disable(gl.STENCIL_TEST);\n      }\n      return;\n    }\n    if (!this._stencilCache.enabled) {\n      this._stencilCache.enabled = true;\n      gl.enable(gl.STENCIL_TEST);\n    }\n    if (stencilMode !== _stencilCache.stencilMode || _stencilCache.stencilReference !== stencilReference) {\n      _stencilCache.stencilMode = stencilMode;\n      _stencilCache.stencilReference = stencilReference;\n      gl.stencilFunc(this._comparisonFuncMapping[mode.stencilBack.compare], stencilReference, 255);\n      gl.stencilOp(gl.KEEP, gl.KEEP, this._stencilOpsMapping[mode.stencilBack.passOp]);\n    }\n  }\n}\n/** @ignore */\nGlStencilSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"stencil\"\n};\n\nexport { GlStencilSystem };\n//# sourceMappingURL=GlStencilSystem.mjs.map\n","\"use strict\";\nconst WGSL_TO_STD40_SIZE = {\n  f32: 4,\n  i32: 4,\n  \"vec2<f32>\": 8,\n  \"vec3<f32>\": 12,\n  \"vec4<f32>\": 16,\n  \"vec2<i32>\": 8,\n  \"vec3<i32>\": 12,\n  \"vec4<i32>\": 16,\n  \"mat2x2<f32>\": 16 * 2,\n  \"mat3x3<f32>\": 16 * 3,\n  \"mat4x4<f32>\": 16 * 4\n  // TODO - not essential for now but support these in the future\n  // int:      4,\n  // ivec2:    8,\n  // ivec3:    12,\n  // ivec4:    16,\n  // uint:     4,\n  // uvec2:    8,\n  // uvec3:    12,\n  // uvec4:    16,\n  // bool:     4,\n  // bvec2:    8,\n  // bvec3:    12,\n  // bvec4:    16,\n  // mat2:     16 * 2,\n  // mat3:     16 * 3,\n  // mat4:     16 * 4,\n};\nfunction createUboElementsSTD40(uniformData) {\n  const uboElements = uniformData.map((data) => ({\n    data,\n    offset: 0,\n    size: 0\n  }));\n  const chunkSize = 16;\n  let size = 0;\n  let offset = 0;\n  for (let i = 0; i < uboElements.length; i++) {\n    const uboElement = uboElements[i];\n    size = WGSL_TO_STD40_SIZE[uboElement.data.type];\n    if (!size) {\n      throw new Error(`Unknown type ${uboElement.data.type}`);\n    }\n    if (uboElement.data.size > 1) {\n      size = Math.max(size, chunkSize) * uboElement.data.size;\n    }\n    const boundary = size === 12 ? 16 : size;\n    uboElement.size = size;\n    const curOffset = offset % chunkSize;\n    if (curOffset > 0 && chunkSize - curOffset < boundary) {\n      offset += (chunkSize - curOffset) % 16;\n    } else {\n      offset += (size - curOffset % size) % size;\n    }\n    uboElement.offset = offset;\n    offset += size;\n  }\n  offset = Math.ceil(offset / 16) * 16;\n  return { uboElements, size: offset };\n}\n\nexport { WGSL_TO_STD40_SIZE, createUboElementsSTD40 };\n//# sourceMappingURL=createUboElementsSTD40.mjs.map\n","import { WGSL_TO_STD40_SIZE } from './createUboElementsSTD40.mjs';\n\n\"use strict\";\nfunction generateArraySyncSTD40(uboElement, offsetToAdd) {\n  const rowSize = Math.max(WGSL_TO_STD40_SIZE[uboElement.data.type] / 16, 1);\n  const elementSize = uboElement.data.value.length / uboElement.data.size;\n  const remainder = (4 - elementSize % 4) % 4;\n  const data = uboElement.data.type.indexOf(\"i32\") >= 0 ? \"dataInt32\" : \"data\";\n  return `\n        v = uv.${uboElement.data.name};\n        offset += ${offsetToAdd};\n\n        arrayOffset = offset;\n\n        t = 0;\n\n        for(var i=0; i < ${uboElement.data.size * rowSize}; i++)\n        {\n            for(var j = 0; j < ${elementSize}; j++)\n            {\n                ${data}[arrayOffset++] = v[t++];\n            }\n            ${remainder !== 0 ? `arrayOffset += ${remainder};` : \"\"}\n        }\n    `;\n}\n\nexport { generateArraySyncSTD40 };\n//# sourceMappingURL=generateArraySyncSTD40.mjs.map\n","import { createUboSyncFunction } from '../../../shared/shader/utils/createUboSyncFunction.mjs';\nimport { uboSyncFunctionsSTD40 } from '../../../shared/shader/utils/uboSyncFunctions.mjs';\nimport { generateArraySyncSTD40 } from './generateArraySyncSTD40.mjs';\n\n\"use strict\";\nfunction createUboSyncFunctionSTD40(uboElements) {\n  return createUboSyncFunction(\n    uboElements,\n    \"uboStd40\",\n    generateArraySyncSTD40,\n    uboSyncFunctionsSTD40\n  );\n}\n\nexport { createUboSyncFunctionSTD40 };\n//# sourceMappingURL=createUboSyncSTD40.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { UboSystem } from '../shared/shader/UboSystem.mjs';\nimport { createUboElementsSTD40 } from './shader/utils/createUboElementsSTD40.mjs';\nimport { createUboSyncFunctionSTD40 } from './shader/utils/createUboSyncSTD40.mjs';\n\n\"use strict\";\nclass GlUboSystem extends UboSystem {\n  constructor() {\n    super({\n      createUboElements: createUboElementsSTD40,\n      generateUboSync: createUboSyncFunctionSTD40\n    });\n  }\n}\n/** @ignore */\nGlUboSystem.extension = {\n  type: [ExtensionType.WebGLSystem],\n  name: \"ubo\"\n};\n\nexport { GlUboSystem };\n//# sourceMappingURL=GlUboSystem.mjs.map\n","import { Rectangle } from '../../../../maths/shapes/Rectangle.mjs';\nimport { warn } from '../../../../utils/logging/warn.mjs';\nimport { CanvasSource } from '../../shared/texture/sources/CanvasSource.mjs';\nimport { CLEAR } from '../const.mjs';\nimport { GlRenderTarget } from '../GlRenderTarget.mjs';\n\n\"use strict\";\nclass GlRenderTargetAdaptor {\n  constructor() {\n    this._clearColorCache = [0, 0, 0, 0];\n    this._viewPortCache = new Rectangle();\n  }\n  init(renderer, renderTargetSystem) {\n    this._renderer = renderer;\n    this._renderTargetSystem = renderTargetSystem;\n    renderer.runners.contextChange.add(this);\n  }\n  contextChange() {\n    this._clearColorCache = [0, 0, 0, 0];\n    this._viewPortCache = new Rectangle();\n  }\n  copyToTexture(sourceRenderSurfaceTexture, destinationTexture, originSrc, size, originDest) {\n    const renderTargetSystem = this._renderTargetSystem;\n    const renderer = this._renderer;\n    const glRenderTarget = renderTargetSystem.getGpuRenderTarget(sourceRenderSurfaceTexture);\n    const gl = renderer.gl;\n    this.finishRenderPass(sourceRenderSurfaceTexture);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, glRenderTarget.resolveTargetFramebuffer);\n    renderer.texture.bind(destinationTexture, 0);\n    gl.copyTexSubImage2D(\n      gl.TEXTURE_2D,\n      0,\n      originDest.x,\n      originDest.y,\n      originSrc.x,\n      originSrc.y,\n      size.width,\n      size.height\n    );\n    return destinationTexture;\n  }\n  startRenderPass(renderTarget, clear = true, clearColor, viewport) {\n    const renderTargetSystem = this._renderTargetSystem;\n    const source = renderTarget.colorTexture;\n    const gpuRenderTarget = renderTargetSystem.getGpuRenderTarget(renderTarget);\n    let viewPortY = viewport.y;\n    if (renderTarget.isRoot) {\n      viewPortY = source.pixelHeight - viewport.height;\n    }\n    renderTarget.colorTextures.forEach((texture) => {\n      this._renderer.texture.unbind(texture);\n    });\n    const gl = this._renderer.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, gpuRenderTarget.framebuffer);\n    const viewPortCache = this._viewPortCache;\n    if (viewPortCache.x !== viewport.x || viewPortCache.y !== viewPortY || viewPortCache.width !== viewport.width || viewPortCache.height !== viewport.height) {\n      viewPortCache.x = viewport.x;\n      viewPortCache.y = viewPortY;\n      viewPortCache.width = viewport.width;\n      viewPortCache.height = viewport.height;\n      gl.viewport(\n        viewport.x,\n        viewPortY,\n        viewport.width,\n        viewport.height\n      );\n    }\n    if (!gpuRenderTarget.depthStencilRenderBuffer && (renderTarget.stencil || renderTarget.depth)) {\n      this._initStencil(gpuRenderTarget);\n    }\n    this.clear(renderTarget, clear, clearColor);\n  }\n  finishRenderPass(renderTarget) {\n    const renderTargetSystem = this._renderTargetSystem;\n    const glRenderTarget = renderTargetSystem.getGpuRenderTarget(renderTarget);\n    if (!glRenderTarget.msaa)\n      return;\n    const gl = this._renderer.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, glRenderTarget.resolveTargetFramebuffer);\n    gl.bindFramebuffer(gl.READ_FRAMEBUFFER, glRenderTarget.framebuffer);\n    gl.blitFramebuffer(\n      0,\n      0,\n      glRenderTarget.width,\n      glRenderTarget.height,\n      0,\n      0,\n      glRenderTarget.width,\n      glRenderTarget.height,\n      gl.COLOR_BUFFER_BIT,\n      gl.NEAREST\n    );\n    gl.bindFramebuffer(gl.FRAMEBUFFER, glRenderTarget.framebuffer);\n  }\n  initGpuRenderTarget(renderTarget) {\n    const renderer = this._renderer;\n    const gl = renderer.gl;\n    const glRenderTarget = new GlRenderTarget();\n    const colorTexture = renderTarget.colorTexture;\n    if (colorTexture instanceof CanvasSource) {\n      this._renderer.context.ensureCanvasSize(renderTarget.colorTexture.resource);\n      glRenderTarget.framebuffer = null;\n      return glRenderTarget;\n    }\n    this._initColor(renderTarget, glRenderTarget);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    return glRenderTarget;\n  }\n  destroyGpuRenderTarget(gpuRenderTarget) {\n    const gl = this._renderer.gl;\n    if (gpuRenderTarget.framebuffer) {\n      gl.deleteFramebuffer(gpuRenderTarget.framebuffer);\n      gpuRenderTarget.framebuffer = null;\n    }\n    if (gpuRenderTarget.resolveTargetFramebuffer) {\n      gl.deleteFramebuffer(gpuRenderTarget.resolveTargetFramebuffer);\n      gpuRenderTarget.resolveTargetFramebuffer = null;\n    }\n    if (gpuRenderTarget.depthStencilRenderBuffer) {\n      gl.deleteRenderbuffer(gpuRenderTarget.depthStencilRenderBuffer);\n      gpuRenderTarget.depthStencilRenderBuffer = null;\n    }\n    gpuRenderTarget.msaaRenderBuffer.forEach((renderBuffer) => {\n      gl.deleteRenderbuffer(renderBuffer);\n    });\n    gpuRenderTarget.msaaRenderBuffer = null;\n  }\n  clear(_renderTarget, clear, clearColor) {\n    if (!clear)\n      return;\n    const renderTargetSystem = this._renderTargetSystem;\n    if (typeof clear === \"boolean\") {\n      clear = clear ? CLEAR.ALL : CLEAR.NONE;\n    }\n    const gl = this._renderer.gl;\n    if (clear & CLEAR.COLOR) {\n      clearColor ?? (clearColor = renderTargetSystem.defaultClearColor);\n      const clearColorCache = this._clearColorCache;\n      const clearColorArray = clearColor;\n      if (clearColorCache[0] !== clearColorArray[0] || clearColorCache[1] !== clearColorArray[1] || clearColorCache[2] !== clearColorArray[2] || clearColorCache[3] !== clearColorArray[3]) {\n        clearColorCache[0] = clearColorArray[0];\n        clearColorCache[1] = clearColorArray[1];\n        clearColorCache[2] = clearColorArray[2];\n        clearColorCache[3] = clearColorArray[3];\n        gl.clearColor(clearColorArray[0], clearColorArray[1], clearColorArray[2], clearColorArray[3]);\n      }\n    }\n    gl.clear(clear);\n  }\n  resizeGpuRenderTarget(renderTarget) {\n    if (renderTarget.isRoot)\n      return;\n    const renderTargetSystem = this._renderTargetSystem;\n    const glRenderTarget = renderTargetSystem.getGpuRenderTarget(renderTarget);\n    this._resizeColor(renderTarget, glRenderTarget);\n    if (renderTarget.stencil || renderTarget.depth) {\n      this._resizeStencil(glRenderTarget);\n    }\n  }\n  _initColor(renderTarget, glRenderTarget) {\n    const renderer = this._renderer;\n    const gl = renderer.gl;\n    const resolveTargetFramebuffer = gl.createFramebuffer();\n    glRenderTarget.resolveTargetFramebuffer = resolveTargetFramebuffer;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, resolveTargetFramebuffer);\n    glRenderTarget.width = renderTarget.colorTexture.source.pixelWidth;\n    glRenderTarget.height = renderTarget.colorTexture.source.pixelHeight;\n    renderTarget.colorTextures.forEach((colorTexture, i) => {\n      const source = colorTexture.source;\n      if (source.antialias) {\n        if (renderer.context.supports.msaa) {\n          glRenderTarget.msaa = true;\n        } else {\n          warn(\"[RenderTexture] Antialiasing on textures is not supported in WebGL1\");\n        }\n      }\n      renderer.texture.bindSource(source, 0);\n      const glSource = renderer.texture.getGlSource(source);\n      const glTexture = glSource.texture;\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0 + i,\n        3553,\n        // texture.target,\n        glTexture,\n        0\n      );\n    });\n    if (glRenderTarget.msaa) {\n      const viewFramebuffer = gl.createFramebuffer();\n      glRenderTarget.framebuffer = viewFramebuffer;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, viewFramebuffer);\n      renderTarget.colorTextures.forEach((_, i) => {\n        const msaaRenderBuffer = gl.createRenderbuffer();\n        glRenderTarget.msaaRenderBuffer[i] = msaaRenderBuffer;\n      });\n    } else {\n      glRenderTarget.framebuffer = resolveTargetFramebuffer;\n    }\n    this._resizeColor(renderTarget, glRenderTarget);\n  }\n  _resizeColor(renderTarget, glRenderTarget) {\n    const source = renderTarget.colorTexture.source;\n    glRenderTarget.width = source.pixelWidth;\n    glRenderTarget.height = source.pixelHeight;\n    renderTarget.colorTextures.forEach((colorTexture, i) => {\n      if (i === 0)\n        return;\n      colorTexture.source.resize(source.width, source.height, source._resolution);\n    });\n    if (glRenderTarget.msaa) {\n      const renderer = this._renderer;\n      const gl = renderer.gl;\n      const viewFramebuffer = glRenderTarget.framebuffer;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, viewFramebuffer);\n      renderTarget.colorTextures.forEach((colorTexture, i) => {\n        const source2 = colorTexture.source;\n        renderer.texture.bindSource(source2, 0);\n        const glSource = renderer.texture.getGlSource(source2);\n        const glInternalFormat = glSource.internalFormat;\n        const msaaRenderBuffer = glRenderTarget.msaaRenderBuffer[i];\n        gl.bindRenderbuffer(\n          gl.RENDERBUFFER,\n          msaaRenderBuffer\n        );\n        gl.renderbufferStorageMultisample(\n          gl.RENDERBUFFER,\n          4,\n          glInternalFormat,\n          source2.pixelWidth,\n          source2.pixelHeight\n        );\n        gl.framebufferRenderbuffer(\n          gl.FRAMEBUFFER,\n          gl.COLOR_ATTACHMENT0 + i,\n          gl.RENDERBUFFER,\n          msaaRenderBuffer\n        );\n      });\n    }\n  }\n  _initStencil(glRenderTarget) {\n    if (glRenderTarget.framebuffer === null)\n      return;\n    const gl = this._renderer.gl;\n    const depthStencilRenderBuffer = gl.createRenderbuffer();\n    glRenderTarget.depthStencilRenderBuffer = depthStencilRenderBuffer;\n    gl.bindRenderbuffer(\n      gl.RENDERBUFFER,\n      depthStencilRenderBuffer\n    );\n    gl.framebufferRenderbuffer(\n      gl.FRAMEBUFFER,\n      gl.DEPTH_STENCIL_ATTACHMENT,\n      gl.RENDERBUFFER,\n      depthStencilRenderBuffer\n    );\n    this._resizeStencil(glRenderTarget);\n  }\n  _resizeStencil(glRenderTarget) {\n    const gl = this._renderer.gl;\n    gl.bindRenderbuffer(\n      gl.RENDERBUFFER,\n      glRenderTarget.depthStencilRenderBuffer\n    );\n    if (glRenderTarget.msaa) {\n      gl.renderbufferStorageMultisample(\n        gl.RENDERBUFFER,\n        4,\n        gl.DEPTH24_STENCIL8,\n        glRenderTarget.width,\n        glRenderTarget.height\n      );\n    } else {\n      gl.renderbufferStorage(\n        gl.RENDERBUFFER,\n        this._renderer.context.webGLVersion === 2 ? gl.DEPTH24_STENCIL8 : gl.DEPTH_STENCIL,\n        glRenderTarget.width,\n        glRenderTarget.height\n      );\n    }\n  }\n  prerender(renderTarget) {\n    const resource = renderTarget.colorTexture.resource;\n    if (this._renderer.context.multiView && CanvasSource.test(resource)) {\n      this._renderer.context.ensureCanvasSize(resource);\n    }\n  }\n  postrender(renderTarget) {\n    if (!this._renderer.context.multiView)\n      return;\n    if (CanvasSource.test(renderTarget.colorTexture.resource)) {\n      const contextCanvas = this._renderer.context.canvas;\n      const canvasSource = renderTarget.colorTexture;\n      canvasSource.context2D.drawImage(\n        contextCanvas,\n        0,\n        canvasSource.pixelHeight - contextCanvas.height\n      );\n    }\n  }\n}\n\nexport { GlRenderTargetAdaptor };\n//# sourceMappingURL=GlRenderTargetAdaptor.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { RenderTargetSystem } from '../../shared/renderTarget/RenderTargetSystem.mjs';\nimport { GlRenderTargetAdaptor } from './GlRenderTargetAdaptor.mjs';\n\n\"use strict\";\nclass GlRenderTargetSystem extends RenderTargetSystem {\n  constructor(renderer) {\n    super(renderer);\n    this.adaptor = new GlRenderTargetAdaptor();\n    this.adaptor.init(renderer, this);\n  }\n}\n/** @ignore */\nGlRenderTargetSystem.extension = {\n  type: [ExtensionType.WebGLSystem],\n  name: \"renderTarget\"\n};\n\nexport { GlRenderTargetSystem };\n//# sourceMappingURL=GlRenderTargetSystem.mjs.map\n","\"use strict\";\nclass IGLUniformData {\n}\nclass GlProgramData {\n  /**\n   * Makes a new Pixi program.\n   * @param program - webgl program\n   * @param uniformData - uniforms\n   */\n  constructor(program, uniformData) {\n    this.program = program;\n    this.uniformData = uniformData;\n    this.uniformGroups = {};\n    this.uniformDirtyGroups = {};\n    this.uniformBlockBindings = {};\n  }\n  /** Destroys this program. */\n  destroy() {\n    this.uniformData = null;\n    this.uniformGroups = null;\n    this.uniformDirtyGroups = null;\n    this.uniformBlockBindings = null;\n    this.program = null;\n  }\n}\n\nexport { GlProgramData, IGLUniformData };\n//# sourceMappingURL=GlProgramData.mjs.map\n","\"use strict\";\nfunction compileShader(gl, type, src) {\n  const shader = gl.createShader(type);\n  gl.shaderSource(shader, src);\n  gl.compileShader(shader);\n  return shader;\n}\n\nexport { compileShader };\n//# sourceMappingURL=compileShader.mjs.map\n","\"use strict\";\nfunction booleanArray(size) {\n  const array = new Array(size);\n  for (let i = 0; i < array.length; i++) {\n    array[i] = false;\n  }\n  return array;\n}\nfunction defaultValue(type, size) {\n  switch (type) {\n    case \"float\":\n      return 0;\n    case \"vec2\":\n      return new Float32Array(2 * size);\n    case \"vec3\":\n      return new Float32Array(3 * size);\n    case \"vec4\":\n      return new Float32Array(4 * size);\n    case \"int\":\n    case \"uint\":\n    case \"sampler2D\":\n    case \"sampler2DArray\":\n      return 0;\n    case \"ivec2\":\n      return new Int32Array(2 * size);\n    case \"ivec3\":\n      return new Int32Array(3 * size);\n    case \"ivec4\":\n      return new Int32Array(4 * size);\n    case \"uvec2\":\n      return new Uint32Array(2 * size);\n    case \"uvec3\":\n      return new Uint32Array(3 * size);\n    case \"uvec4\":\n      return new Uint32Array(4 * size);\n    case \"bool\":\n      return false;\n    case \"bvec2\":\n      return booleanArray(2 * size);\n    case \"bvec3\":\n      return booleanArray(3 * size);\n    case \"bvec4\":\n      return booleanArray(4 * size);\n    case \"mat2\":\n      return new Float32Array([\n        1,\n        0,\n        0,\n        1\n      ]);\n    case \"mat3\":\n      return new Float32Array([\n        1,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        1\n      ]);\n    case \"mat4\":\n      return new Float32Array([\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1\n      ]);\n  }\n  return null;\n}\n\nexport { defaultValue };\n//# sourceMappingURL=defaultValue.mjs.map\n","\"use strict\";\nlet GL_TABLE = null;\nconst GL_TO_GLSL_TYPES = {\n  FLOAT: \"float\",\n  FLOAT_VEC2: \"vec2\",\n  FLOAT_VEC3: \"vec3\",\n  FLOAT_VEC4: \"vec4\",\n  INT: \"int\",\n  INT_VEC2: \"ivec2\",\n  INT_VEC3: \"ivec3\",\n  INT_VEC4: \"ivec4\",\n  UNSIGNED_INT: \"uint\",\n  UNSIGNED_INT_VEC2: \"uvec2\",\n  UNSIGNED_INT_VEC3: \"uvec3\",\n  UNSIGNED_INT_VEC4: \"uvec4\",\n  BOOL: \"bool\",\n  BOOL_VEC2: \"bvec2\",\n  BOOL_VEC3: \"bvec3\",\n  BOOL_VEC4: \"bvec4\",\n  FLOAT_MAT2: \"mat2\",\n  FLOAT_MAT3: \"mat3\",\n  FLOAT_MAT4: \"mat4\",\n  SAMPLER_2D: \"sampler2D\",\n  INT_SAMPLER_2D: \"sampler2D\",\n  UNSIGNED_INT_SAMPLER_2D: \"sampler2D\",\n  SAMPLER_CUBE: \"samplerCube\",\n  INT_SAMPLER_CUBE: \"samplerCube\",\n  UNSIGNED_INT_SAMPLER_CUBE: \"samplerCube\",\n  SAMPLER_2D_ARRAY: \"sampler2DArray\",\n  INT_SAMPLER_2D_ARRAY: \"sampler2DArray\",\n  UNSIGNED_INT_SAMPLER_2D_ARRAY: \"sampler2DArray\"\n};\nconst GLSL_TO_VERTEX_TYPES = {\n  float: \"float32\",\n  vec2: \"float32x2\",\n  vec3: \"float32x3\",\n  vec4: \"float32x4\",\n  int: \"sint32\",\n  ivec2: \"sint32x2\",\n  ivec3: \"sint32x3\",\n  ivec4: \"sint32x4\",\n  uint: \"uint32\",\n  uvec2: \"uint32x2\",\n  uvec3: \"uint32x3\",\n  uvec4: \"uint32x4\",\n  bool: \"uint32\",\n  bvec2: \"uint32x2\",\n  bvec3: \"uint32x3\",\n  bvec4: \"uint32x4\"\n};\nfunction mapType(gl, type) {\n  if (!GL_TABLE) {\n    const typeNames = Object.keys(GL_TO_GLSL_TYPES);\n    GL_TABLE = {};\n    for (let i = 0; i < typeNames.length; ++i) {\n      const tn = typeNames[i];\n      GL_TABLE[gl[tn]] = GL_TO_GLSL_TYPES[tn];\n    }\n  }\n  return GL_TABLE[type];\n}\nfunction mapGlToVertexFormat(gl, type) {\n  const typeValue = mapType(gl, type);\n  return GLSL_TO_VERTEX_TYPES[typeValue] || \"float32\";\n}\n\nexport { mapGlToVertexFormat, mapType };\n//# sourceMappingURL=mapType.mjs.map\n","\"use strict\";\nfunction logPrettyShaderError(gl, shader) {\n  const shaderSrc = gl.getShaderSource(shader).split(\"\\n\").map((line, index) => `${index}: ${line}`);\n  const shaderLog = gl.getShaderInfoLog(shader);\n  const splitShader = shaderLog.split(\"\\n\");\n  const dedupe = {};\n  const lineNumbers = splitShader.map((line) => parseFloat(line.replace(/^ERROR\\: 0\\:([\\d]+)\\:.*$/, \"$1\"))).filter((n) => {\n    if (n && !dedupe[n]) {\n      dedupe[n] = true;\n      return true;\n    }\n    return false;\n  });\n  const logArgs = [\"\"];\n  lineNumbers.forEach((number) => {\n    shaderSrc[number - 1] = `%c${shaderSrc[number - 1]}%c`;\n    logArgs.push(\"background: #FF0000; color:#FFFFFF; font-size: 10px\", \"font-size: 10px\");\n  });\n  const fragmentSourceToLog = shaderSrc.join(\"\\n\");\n  logArgs[0] = fragmentSourceToLog;\n  console.error(shaderLog);\n  console.groupCollapsed(\"click to view full shader code\");\n  console.warn(...logArgs);\n  console.groupEnd();\n}\nfunction logProgramError(gl, program, vertexShader, fragmentShader) {\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      logPrettyShaderError(gl, vertexShader);\n    }\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      logPrettyShaderError(gl, fragmentShader);\n    }\n    console.error(\"PixiJS Error: Could not initialize shader.\");\n    if (gl.getProgramInfoLog(program) !== \"\") {\n      console.warn(\"PixiJS Warning: gl.getProgramInfoLog()\", gl.getProgramInfoLog(program));\n    }\n  }\n}\n\nexport { logProgramError };\n//# sourceMappingURL=logProgramError.mjs.map\n","import { warn } from '../../../../../utils/logging/warn.mjs';\nimport { GlProgramData } from '../GlProgramData.mjs';\nimport { compileShader } from './compileShader.mjs';\nimport { defaultValue } from './defaultValue.mjs';\nimport { extractAttributesFromGlProgram } from './extractAttributesFromGlProgram.mjs';\nimport { getUboData } from './getUboData.mjs';\nimport { getUniformData } from './getUniformData.mjs';\nimport { logProgramError } from './logProgramError.mjs';\n\n\"use strict\";\nfunction generateProgram(gl, program) {\n  const glVertShader = compileShader(gl, gl.VERTEX_SHADER, program.vertex);\n  const glFragShader = compileShader(gl, gl.FRAGMENT_SHADER, program.fragment);\n  const webGLProgram = gl.createProgram();\n  gl.attachShader(webGLProgram, glVertShader);\n  gl.attachShader(webGLProgram, glFragShader);\n  const transformFeedbackVaryings = program.transformFeedbackVaryings;\n  if (transformFeedbackVaryings) {\n    if (typeof gl.transformFeedbackVaryings !== \"function\") {\n      warn(`TransformFeedback is not supported but TransformFeedbackVaryings are given.`);\n    } else {\n      gl.transformFeedbackVaryings(\n        webGLProgram,\n        transformFeedbackVaryings.names,\n        transformFeedbackVaryings.bufferMode === \"separate\" ? gl.SEPARATE_ATTRIBS : gl.INTERLEAVED_ATTRIBS\n      );\n    }\n  }\n  gl.linkProgram(webGLProgram);\n  if (!gl.getProgramParameter(webGLProgram, gl.LINK_STATUS)) {\n    logProgramError(gl, webGLProgram, glVertShader, glFragShader);\n  }\n  program._attributeData = extractAttributesFromGlProgram(\n    webGLProgram,\n    gl,\n    !/^[ \\t]*#[ \\t]*version[ \\t]+300[ \\t]+es[ \\t]*$/m.test(program.vertex)\n  );\n  program._uniformData = getUniformData(webGLProgram, gl);\n  program._uniformBlockData = getUboData(webGLProgram, gl);\n  gl.deleteShader(glVertShader);\n  gl.deleteShader(glFragShader);\n  const uniformData = {};\n  for (const i in program._uniformData) {\n    const data = program._uniformData[i];\n    uniformData[i] = {\n      location: gl.getUniformLocation(webGLProgram, i),\n      value: defaultValue(data.type, data.size)\n    };\n  }\n  const glProgram = new GlProgramData(webGLProgram, uniformData);\n  return glProgram;\n}\n\nexport { generateProgram };\n//# sourceMappingURL=generateProgram.mjs.map\n","import { getAttributeInfoFromFormat } from '../../../shared/geometry/utils/getAttributeInfoFromFormat.mjs';\nimport { mapGlToVertexFormat } from './mapType.mjs';\n\n\"use strict\";\nfunction extractAttributesFromGlProgram(program, gl, sortAttributes = false) {\n  const attributes = {};\n  const totalAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  for (let i = 0; i < totalAttributes; i++) {\n    const attribData = gl.getActiveAttrib(program, i);\n    if (attribData.name.startsWith(\"gl_\")) {\n      continue;\n    }\n    const format = mapGlToVertexFormat(gl, attribData.type);\n    attributes[attribData.name] = {\n      location: 0,\n      // set further down..\n      format,\n      stride: getAttributeInfoFromFormat(format).stride,\n      offset: 0,\n      instance: false,\n      start: 0\n    };\n  }\n  const keys = Object.keys(attributes);\n  if (sortAttributes) {\n    keys.sort((a, b) => a > b ? 1 : -1);\n    for (let i = 0; i < keys.length; i++) {\n      attributes[keys[i]].location = i;\n      gl.bindAttribLocation(program, i, keys[i]);\n    }\n    gl.linkProgram(program);\n  } else {\n    for (let i = 0; i < keys.length; i++) {\n      attributes[keys[i]].location = gl.getAttribLocation(program, keys[i]);\n    }\n  }\n  return attributes;\n}\n\nexport { extractAttributesFromGlProgram };\n//# sourceMappingURL=extractAttributesFromGlProgram.mjs.map\n","import { defaultValue } from './defaultValue.mjs';\nimport { mapType } from './mapType.mjs';\n\n\"use strict\";\nfunction getUniformData(program, gl) {\n  const uniforms = {};\n  const totalUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  for (let i = 0; i < totalUniforms; i++) {\n    const uniformData = gl.getActiveUniform(program, i);\n    const name = uniformData.name.replace(/\\[.*?\\]$/, \"\");\n    const isArray = !!uniformData.name.match(/\\[.*?\\]$/);\n    const type = mapType(gl, uniformData.type);\n    uniforms[name] = {\n      name,\n      index: i,\n      type,\n      size: uniformData.size,\n      isArray,\n      value: defaultValue(type, uniformData.size)\n    };\n  }\n  return uniforms;\n}\n\nexport { getUniformData };\n//# sourceMappingURL=getUniformData.mjs.map\n","\"use strict\";\nfunction getUboData(program, gl) {\n  if (!gl.ACTIVE_UNIFORM_BLOCKS)\n    return {};\n  const uniformBlocks = {};\n  const totalUniformsBlocks = gl.getProgramParameter(program, gl.ACTIVE_UNIFORM_BLOCKS);\n  for (let i = 0; i < totalUniformsBlocks; i++) {\n    const name = gl.getActiveUniformBlockName(program, i);\n    const uniformBlockIndex = gl.getUniformBlockIndex(program, name);\n    const size = gl.getActiveUniformBlockParameter(program, i, gl.UNIFORM_BLOCK_DATA_SIZE);\n    uniformBlocks[name] = {\n      name,\n      index: uniformBlockIndex,\n      size\n    };\n  }\n  return uniformBlocks;\n}\n\nexport { getUboData };\n//# sourceMappingURL=getUboData.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { generateShaderSyncCode } from './GenerateShaderSyncCode.mjs';\nimport { generateProgram } from './program/generateProgram.mjs';\n\n\"use strict\";\nconst defaultSyncData = {\n  textureCount: 0,\n  blockIndex: 0\n};\nclass GlShaderSystem {\n  constructor(renderer) {\n    /** @internal */\n    this._activeProgram = null;\n    this._programDataHash = /* @__PURE__ */ Object.create(null);\n    this._shaderSyncFunctions = /* @__PURE__ */ Object.create(null);\n    this._renderer = renderer;\n    this._renderer.renderableGC.addManagedHash(this, \"_programDataHash\");\n  }\n  contextChange(gl) {\n    this._gl = gl;\n    this._programDataHash = /* @__PURE__ */ Object.create(null);\n    this._shaderSyncFunctions = /* @__PURE__ */ Object.create(null);\n    this._activeProgram = null;\n  }\n  /**\n   * Changes the current shader to the one given in parameter.\n   * @param shader - the new shader\n   * @param skipSync - false if the shader should automatically sync its uniforms.\n   * @returns the glProgram that belongs to the shader.\n   */\n  bind(shader, skipSync) {\n    this._setProgram(shader.glProgram);\n    if (skipSync)\n      return;\n    defaultSyncData.textureCount = 0;\n    defaultSyncData.blockIndex = 0;\n    let syncFunction = this._shaderSyncFunctions[shader.glProgram._key];\n    if (!syncFunction) {\n      syncFunction = this._shaderSyncFunctions[shader.glProgram._key] = this._generateShaderSync(shader, this);\n    }\n    this._renderer.buffer.nextBindBase(!!shader.glProgram.transformFeedbackVaryings);\n    syncFunction(this._renderer, shader, defaultSyncData);\n  }\n  /**\n   * Updates the uniform group.\n   * @param uniformGroup - the uniform group to update\n   */\n  updateUniformGroup(uniformGroup) {\n    this._renderer.uniformGroup.updateUniformGroup(uniformGroup, this._activeProgram, defaultSyncData);\n  }\n  /**\n   * Binds a uniform block to the shader.\n   * @param uniformGroup - the uniform group to bind\n   * @param name - the name of the uniform block\n   * @param index - the index of the uniform block\n   */\n  bindUniformBlock(uniformGroup, name, index = 0) {\n    const bufferSystem = this._renderer.buffer;\n    const programData = this._getProgramData(this._activeProgram);\n    const isBufferResource = uniformGroup._bufferResource;\n    if (!isBufferResource) {\n      this._renderer.ubo.updateUniformGroup(uniformGroup);\n    }\n    const buffer = uniformGroup.buffer;\n    const glBuffer = bufferSystem.updateBuffer(buffer);\n    const boundLocation = bufferSystem.freeLocationForBufferBase(glBuffer);\n    if (isBufferResource) {\n      const { offset, size } = uniformGroup;\n      if (offset === 0 && size === buffer.data.byteLength) {\n        bufferSystem.bindBufferBase(glBuffer, boundLocation);\n      } else {\n        bufferSystem.bindBufferRange(glBuffer, boundLocation, offset);\n      }\n    } else if (bufferSystem.getLastBindBaseLocation(glBuffer) !== boundLocation) {\n      bufferSystem.bindBufferBase(glBuffer, boundLocation);\n    }\n    const uniformBlockIndex = this._activeProgram._uniformBlockData[name].index;\n    if (programData.uniformBlockBindings[index] === boundLocation)\n      return;\n    programData.uniformBlockBindings[index] = boundLocation;\n    this._renderer.gl.uniformBlockBinding(programData.program, uniformBlockIndex, boundLocation);\n  }\n  _setProgram(program) {\n    if (this._activeProgram === program)\n      return;\n    this._activeProgram = program;\n    const programData = this._getProgramData(program);\n    this._gl.useProgram(programData.program);\n  }\n  /**\n   * @param program - the program to get the data for\n   * @internal\n   */\n  _getProgramData(program) {\n    return this._programDataHash[program._key] || this._createProgramData(program);\n  }\n  _createProgramData(program) {\n    const key = program._key;\n    this._programDataHash[key] = generateProgram(this._gl, program);\n    return this._programDataHash[key];\n  }\n  destroy() {\n    for (const key of Object.keys(this._programDataHash)) {\n      const programData = this._programDataHash[key];\n      programData.destroy();\n      this._programDataHash[key] = null;\n    }\n    this._programDataHash = null;\n    this._shaderSyncFunctions = null;\n    this._activeProgram = null;\n    this._renderer = null;\n    this._gl = null;\n  }\n  /**\n   * Creates a function that can be executed that will sync the shader as efficiently as possible.\n   * Overridden by the unsafe eval package if you don't want eval used in your project.\n   * @param shader - the shader to generate the sync function for\n   * @param shaderSystem - the shader system to use\n   * @returns - the generated sync function\n   * @ignore\n   */\n  _generateShaderSync(shader, shaderSystem) {\n    return generateShaderSyncCode(shader, shaderSystem);\n  }\n  resetState() {\n    this._activeProgram = null;\n  }\n}\n/** @ignore */\nGlShaderSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"shader\"\n};\n\nexport { GlShaderSystem };\n//# sourceMappingURL=GlShaderSystem.mjs.map\n","import { BufferResource } from '../../shared/buffer/BufferResource.mjs';\nimport { UniformGroup } from '../../shared/shader/UniformGroup.mjs';\nimport { TextureSource } from '../../shared/texture/sources/TextureSource.mjs';\n\n\"use strict\";\nfunction generateShaderSyncCode(shader, shaderSystem) {\n  const funcFragments = [];\n  const headerFragments = [`\n        var g = s.groups;\n        var sS = r.shader;\n        var p = s.glProgram;\n        var ugS = r.uniformGroup;\n        var resources;\n    `];\n  let addedTextreSystem = false;\n  let textureCount = 0;\n  const programData = shaderSystem._getProgramData(shader.glProgram);\n  for (const i in shader.groups) {\n    const group = shader.groups[i];\n    funcFragments.push(`\n            resources = g[${i}].resources;\n        `);\n    for (const j in group.resources) {\n      const resource = group.resources[j];\n      if (resource instanceof UniformGroup) {\n        if (resource.ubo) {\n          const resName = shader._uniformBindMap[i][Number(j)];\n          funcFragments.push(`\n                        sS.bindUniformBlock(\n                            resources[${j}],\n                            '${resName}',\n                            ${shader.glProgram._uniformBlockData[resName].index}\n                        );\n                    `);\n        } else {\n          funcFragments.push(`\n                        ugS.updateUniformGroup(resources[${j}], p, sD);\n                    `);\n        }\n      } else if (resource instanceof BufferResource) {\n        const resName = shader._uniformBindMap[i][Number(j)];\n        funcFragments.push(`\n                    sS.bindUniformBlock(\n                        resources[${j}],\n                        '${resName}',\n                        ${shader.glProgram._uniformBlockData[resName].index}\n                    );\n                `);\n      } else if (resource instanceof TextureSource) {\n        const uniformName = shader._uniformBindMap[i][j];\n        const uniformData = programData.uniformData[uniformName];\n        if (uniformData) {\n          if (!addedTextreSystem) {\n            addedTextreSystem = true;\n            headerFragments.push(`\n                        var tS = r.texture;\n                        `);\n          }\n          shaderSystem._gl.uniform1i(uniformData.location, textureCount);\n          funcFragments.push(`\n                        tS.bind(resources[${j}], ${textureCount});\n                    `);\n          textureCount++;\n        }\n      }\n    }\n  }\n  const functionSource = [...headerFragments, ...funcFragments].join(\"\\n\");\n  return new Function(\"r\", \"s\", \"sD\", functionSource);\n}\n\nexport { generateShaderSyncCode };\n//# sourceMappingURL=GenerateShaderSyncCode.mjs.map\n","\"use strict\";\nconst UNIFORM_TO_SINGLE_SETTERS = {\n  f32: `if (cv !== v) {\n            cu.value = v;\n            gl.uniform1f(location, v);\n        }`,\n  \"vec2<f32>\": `if (cv[0] !== v[0] || cv[1] !== v[1]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            gl.uniform2f(location, v[0], v[1]);\n        }`,\n  \"vec3<f32>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            gl.uniform3f(location, v[0], v[1], v[2]);\n        }`,\n  \"vec4<f32>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            cv[3] = v[3];\n            gl.uniform4f(location, v[0], v[1], v[2], v[3]);\n        }`,\n  i32: `if (cv !== v) {\n            cu.value = v;\n            gl.uniform1i(location, v);\n        }`,\n  \"vec2<i32>\": `if (cv[0] !== v[0] || cv[1] !== v[1]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            gl.uniform2i(location, v[0], v[1]);\n        }`,\n  \"vec3<i32>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            gl.uniform3i(location, v[0], v[1], v[2]);\n        }`,\n  \"vec4<i32>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            cv[3] = v[3];\n            gl.uniform4i(location, v[0], v[1], v[2], v[3]);\n        }`,\n  u32: `if (cv !== v) {\n            cu.value = v;\n            gl.uniform1ui(location, v);\n        }`,\n  \"vec2<u32>\": `if (cv[0] !== v[0] || cv[1] !== v[1]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            gl.uniform2ui(location, v[0], v[1]);\n        }`,\n  \"vec3<u32>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            gl.uniform3ui(location, v[0], v[1], v[2]);\n        }`,\n  \"vec4<u32>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            cv[3] = v[3];\n            gl.uniform4ui(location, v[0], v[1], v[2], v[3]);\n        }`,\n  bool: `if (cv !== v) {\n            cu.value = v;\n            gl.uniform1i(location, v);\n        }`,\n  \"vec2<bool>\": `if (cv[0] !== v[0] || cv[1] !== v[1]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            gl.uniform2i(location, v[0], v[1]);\n        }`,\n  \"vec3<bool>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            gl.uniform3i(location, v[0], v[1], v[2]);\n        }`,\n  \"vec4<bool>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            cv[3] = v[3];\n            gl.uniform4i(location, v[0], v[1], v[2], v[3]);\n        }`,\n  \"mat2x2<f32>\": `gl.uniformMatrix2fv(location, false, v);`,\n  \"mat3x3<f32>\": `gl.uniformMatrix3fv(location, false, v);`,\n  \"mat4x4<f32>\": `gl.uniformMatrix4fv(location, false, v);`\n};\nconst UNIFORM_TO_ARRAY_SETTERS = {\n  f32: `gl.uniform1fv(location, v);`,\n  \"vec2<f32>\": `gl.uniform2fv(location, v);`,\n  \"vec3<f32>\": `gl.uniform3fv(location, v);`,\n  \"vec4<f32>\": `gl.uniform4fv(location, v);`,\n  \"mat2x2<f32>\": `gl.uniformMatrix2fv(location, false, v);`,\n  \"mat3x3<f32>\": `gl.uniformMatrix3fv(location, false, v);`,\n  \"mat4x4<f32>\": `gl.uniformMatrix4fv(location, false, v);`,\n  i32: `gl.uniform1iv(location, v);`,\n  \"vec2<i32>\": `gl.uniform2iv(location, v);`,\n  \"vec3<i32>\": `gl.uniform3iv(location, v);`,\n  \"vec4<i32>\": `gl.uniform4iv(location, v);`,\n  u32: `gl.uniform1iv(location, v);`,\n  \"vec2<u32>\": `gl.uniform2iv(location, v);`,\n  \"vec3<u32>\": `gl.uniform3iv(location, v);`,\n  \"vec4<u32>\": `gl.uniform4iv(location, v);`,\n  bool: `gl.uniform1iv(location, v);`,\n  \"vec2<bool>\": `gl.uniform2iv(location, v);`,\n  \"vec3<bool>\": `gl.uniform3iv(location, v);`,\n  \"vec4<bool>\": `gl.uniform4iv(location, v);`\n};\n\nexport { UNIFORM_TO_ARRAY_SETTERS, UNIFORM_TO_SINGLE_SETTERS };\n//# sourceMappingURL=generateUniformsSyncTypes.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { generateUniformsSync } from './utils/generateUniformsSync.mjs';\n\n\"use strict\";\nclass GlUniformGroupSystem {\n  /** @param renderer - The renderer this System works for. */\n  constructor(renderer) {\n    /** Cache to holds the generated functions. Stored against UniformObjects unique signature. */\n    this._cache = {};\n    this._uniformGroupSyncHash = {};\n    this._renderer = renderer;\n    this.gl = null;\n    this._cache = {};\n  }\n  contextChange(gl) {\n    this.gl = gl;\n  }\n  /**\n   * Uploads the uniforms values to the currently bound shader.\n   * @param group - the uniforms values that be applied to the current shader\n   * @param program\n   * @param syncData\n   * @param syncData.textureCount\n   */\n  updateUniformGroup(group, program, syncData) {\n    const programData = this._renderer.shader._getProgramData(program);\n    if (!group.isStatic || group._dirtyId !== programData.uniformDirtyGroups[group.uid]) {\n      programData.uniformDirtyGroups[group.uid] = group._dirtyId;\n      const syncFunc = this._getUniformSyncFunction(group, program);\n      syncFunc(programData.uniformData, group.uniforms, this._renderer, syncData);\n    }\n  }\n  /**\n   * Overridable by the pixi.js/unsafe-eval package to use static syncUniforms instead.\n   * @param group\n   * @param program\n   */\n  _getUniformSyncFunction(group, program) {\n    return this._uniformGroupSyncHash[group._signature]?.[program._key] || this._createUniformSyncFunction(group, program);\n  }\n  _createUniformSyncFunction(group, program) {\n    const uniformGroupSyncHash = this._uniformGroupSyncHash[group._signature] || (this._uniformGroupSyncHash[group._signature] = {});\n    const id = this._getSignature(group, program._uniformData, \"u\");\n    if (!this._cache[id]) {\n      this._cache[id] = this._generateUniformsSync(group, program._uniformData);\n    }\n    uniformGroupSyncHash[program._key] = this._cache[id];\n    return uniformGroupSyncHash[program._key];\n  }\n  _generateUniformsSync(group, uniformData) {\n    return generateUniformsSync(group, uniformData);\n  }\n  /**\n   * Takes a uniform group and data and generates a unique signature for them.\n   * @param group - The uniform group to get signature of\n   * @param group.uniforms\n   * @param uniformData - Uniform information generated by the shader\n   * @param preFix\n   * @returns Unique signature of the uniform group\n   */\n  _getSignature(group, uniformData, preFix) {\n    const uniforms = group.uniforms;\n    const strings = [`${preFix}-`];\n    for (const i in uniforms) {\n      strings.push(i);\n      if (uniformData[i]) {\n        strings.push(uniformData[i].type);\n      }\n    }\n    return strings.join(\"-\");\n  }\n  /** Destroys this System and removes all its textures. */\n  destroy() {\n    this._renderer = null;\n    this._cache = null;\n  }\n}\n/** @ignore */\nGlUniformGroupSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"uniformGroup\"\n};\n\nexport { GlUniformGroupSystem };\n//# sourceMappingURL=GlUniformGroupSystem.mjs.map\n","import { BufferResource } from '../../../shared/buffer/BufferResource.mjs';\nimport { UniformGroup } from '../../../shared/shader/UniformGroup.mjs';\nimport { uniformParsers } from '../../../shared/shader/utils/uniformParsers.mjs';\nimport { UNIFORM_TO_SINGLE_SETTERS, UNIFORM_TO_ARRAY_SETTERS } from './generateUniformsSyncTypes.mjs';\n\n\"use strict\";\nfunction generateUniformsSync(group, uniformData) {\n  const funcFragments = [`\n        var v = null;\n        var cv = null;\n        var cu = null;\n        var t = 0;\n        var gl = renderer.gl;\n        var name = null;\n    `];\n  for (const i in group.uniforms) {\n    if (!uniformData[i]) {\n      if (group.uniforms[i] instanceof UniformGroup) {\n        if (group.uniforms[i].ubo) {\n          funcFragments.push(`\n                        renderer.shader.bindUniformBlock(uv.${i}, \"${i}\");\n                    `);\n        } else {\n          funcFragments.push(`\n                        renderer.shader.updateUniformGroup(uv.${i});\n                    `);\n        }\n      } else if (group.uniforms[i] instanceof BufferResource) {\n        funcFragments.push(`\n                        renderer.shader.bindBufferResource(uv.${i}, \"${i}\");\n                    `);\n      }\n      continue;\n    }\n    const uniform = group.uniformStructures[i];\n    let parsed = false;\n    for (let j = 0; j < uniformParsers.length; j++) {\n      const parser = uniformParsers[j];\n      if (uniform.type === parser.type && parser.test(uniform)) {\n        funcFragments.push(`name = \"${i}\";`, uniformParsers[j].uniform);\n        parsed = true;\n        break;\n      }\n    }\n    if (!parsed) {\n      const templateType = uniform.size === 1 ? UNIFORM_TO_SINGLE_SETTERS : UNIFORM_TO_ARRAY_SETTERS;\n      const template = templateType[uniform.type].replace(\"location\", `ud[\"${i}\"].location`);\n      funcFragments.push(`\n            cu = ud[\"${i}\"];\n            cv = cu.value;\n            v = uv[\"${i}\"];\n            ${template};`);\n    }\n  }\n  return new Function(\"ud\", \"uv\", \"renderer\", \"syncData\", funcFragments.join(\"\\n\"));\n}\n\nexport { generateUniformsSync };\n//# sourceMappingURL=generateUniformsSync.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { State } from '../../shared/state/State.mjs';\nimport { mapWebGLBlendModesToPixi } from './mapWebGLBlendModesToPixi.mjs';\n\n\"use strict\";\nconst BLEND = 0;\nconst OFFSET = 1;\nconst CULLING = 2;\nconst DEPTH_TEST = 3;\nconst WINDING = 4;\nconst DEPTH_MASK = 5;\nconst _GlStateSystem = class _GlStateSystem {\n  constructor(renderer) {\n    /**\n     * Whether to invert the front face when rendering\n     * This is used for render textures where the Y-coordinate is flipped\n     * @default false\n     */\n    this._invertFrontFace = false;\n    this.gl = null;\n    this.stateId = 0;\n    this.polygonOffset = 0;\n    this.blendMode = \"none\";\n    this._blendEq = false;\n    this.map = [];\n    this.map[BLEND] = this.setBlend;\n    this.map[OFFSET] = this.setOffset;\n    this.map[CULLING] = this.setCullFace;\n    this.map[DEPTH_TEST] = this.setDepthTest;\n    this.map[WINDING] = this.setFrontFace;\n    this.map[DEPTH_MASK] = this.setDepthMask;\n    this.checks = [];\n    this.defaultState = State.for2d();\n    renderer.renderTarget.onRenderTargetChange.add(this);\n  }\n  onRenderTargetChange(renderTarget) {\n    this._invertFrontFace = !renderTarget.isRoot;\n    if (this._cullFace) {\n      this.setFrontFace(this._frontFace);\n    } else {\n      this._frontFaceDirty = true;\n    }\n  }\n  contextChange(gl) {\n    this.gl = gl;\n    this.blendModesMap = mapWebGLBlendModesToPixi(gl);\n    this.resetState();\n  }\n  /**\n   * Sets the current state\n   * @param {*} state - The state to set.\n   */\n  set(state) {\n    state || (state = this.defaultState);\n    if (this.stateId !== state.data) {\n      let diff = this.stateId ^ state.data;\n      let i = 0;\n      while (diff) {\n        if (diff & 1) {\n          this.map[i].call(this, !!(state.data & 1 << i));\n        }\n        diff >>= 1;\n        i++;\n      }\n      this.stateId = state.data;\n    }\n    for (let i = 0; i < this.checks.length; i++) {\n      this.checks[i](this, state);\n    }\n  }\n  /**\n   * Sets the state, when previous state is unknown.\n   * @param {*} state - The state to set\n   */\n  forceState(state) {\n    state || (state = this.defaultState);\n    for (let i = 0; i < this.map.length; i++) {\n      this.map[i].call(this, !!(state.data & 1 << i));\n    }\n    for (let i = 0; i < this.checks.length; i++) {\n      this.checks[i](this, state);\n    }\n    this.stateId = state.data;\n  }\n  /**\n   * Sets whether to enable or disable blending.\n   * @param value - Turn on or off WebGl blending.\n   */\n  setBlend(value) {\n    this._updateCheck(_GlStateSystem._checkBlendMode, value);\n    this.gl[value ? \"enable\" : \"disable\"](this.gl.BLEND);\n  }\n  /**\n   * Sets whether to enable or disable polygon offset fill.\n   * @param value - Turn on or off webgl polygon offset testing.\n   */\n  setOffset(value) {\n    this._updateCheck(_GlStateSystem._checkPolygonOffset, value);\n    this.gl[value ? \"enable\" : \"disable\"](this.gl.POLYGON_OFFSET_FILL);\n  }\n  /**\n   * Sets whether to enable or disable depth test.\n   * @param value - Turn on or off webgl depth testing.\n   */\n  setDepthTest(value) {\n    this.gl[value ? \"enable\" : \"disable\"](this.gl.DEPTH_TEST);\n  }\n  /**\n   * Sets whether to enable or disable depth mask.\n   * @param value - Turn on or off webgl depth mask.\n   */\n  setDepthMask(value) {\n    this.gl.depthMask(value);\n  }\n  /**\n   * Sets whether to enable or disable cull face.\n   * @param {boolean} value - Turn on or off webgl cull face.\n   */\n  setCullFace(value) {\n    this._cullFace = value;\n    this.gl[value ? \"enable\" : \"disable\"](this.gl.CULL_FACE);\n    if (this._cullFace && this._frontFaceDirty) {\n      this.setFrontFace(this._frontFace);\n    }\n  }\n  /**\n   * Sets the gl front face.\n   * @param {boolean} value - true is clockwise and false is counter-clockwise\n   */\n  setFrontFace(value) {\n    this._frontFace = value;\n    this._frontFaceDirty = false;\n    const faceMode = this._invertFrontFace ? !value : value;\n    if (this._glFrontFace !== faceMode) {\n      this._glFrontFace = faceMode;\n      this.gl.frontFace(this.gl[faceMode ? \"CW\" : \"CCW\"]);\n    }\n  }\n  /**\n   * Sets the blend mode.\n   * @param {number} value - The blend mode to set to.\n   */\n  setBlendMode(value) {\n    if (!this.blendModesMap[value]) {\n      value = \"normal\";\n    }\n    if (value === this.blendMode) {\n      return;\n    }\n    this.blendMode = value;\n    const mode = this.blendModesMap[value];\n    const gl = this.gl;\n    if (mode.length === 2) {\n      gl.blendFunc(mode[0], mode[1]);\n    } else {\n      gl.blendFuncSeparate(mode[0], mode[1], mode[2], mode[3]);\n    }\n    if (mode.length === 6) {\n      this._blendEq = true;\n      gl.blendEquationSeparate(mode[4], mode[5]);\n    } else if (this._blendEq) {\n      this._blendEq = false;\n      gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n    }\n  }\n  /**\n   * Sets the polygon offset.\n   * @param {number} value - the polygon offset\n   * @param {number} scale - the polygon offset scale\n   */\n  setPolygonOffset(value, scale) {\n    this.gl.polygonOffset(value, scale);\n  }\n  /** Resets all the logic and disables the VAOs. */\n  resetState() {\n    this._glFrontFace = false;\n    this._frontFace = false;\n    this._cullFace = false;\n    this._frontFaceDirty = false;\n    this._invertFrontFace = false;\n    this.gl.frontFace(this.gl.CCW);\n    this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, false);\n    this.forceState(this.defaultState);\n    this._blendEq = true;\n    this.blendMode = \"\";\n    this.setBlendMode(\"normal\");\n  }\n  /**\n   * Checks to see which updates should be checked based on which settings have been activated.\n   *\n   * For example, if blend is enabled then we should check the blend modes each time the state is changed\n   * or if polygon fill is activated then we need to check if the polygon offset changes.\n   * The idea is that we only check what we have too.\n   * @param func - the checking function to add or remove\n   * @param value - should the check function be added or removed.\n   */\n  _updateCheck(func, value) {\n    const index = this.checks.indexOf(func);\n    if (value && index === -1) {\n      this.checks.push(func);\n    } else if (!value && index !== -1) {\n      this.checks.splice(index, 1);\n    }\n  }\n  /**\n   * A private little wrapper function that we call to check the blend mode.\n   * @param system - the System to perform the state check on\n   * @param state - the state that the blendMode will pulled from\n   */\n  static _checkBlendMode(system, state) {\n    system.setBlendMode(state.blendMode);\n  }\n  /**\n   * A private little wrapper function that we call to check the polygon offset.\n   * @param system - the System to perform the state check on\n   * @param state - the state that the blendMode will pulled from\n   */\n  static _checkPolygonOffset(system, state) {\n    system.setPolygonOffset(1, state.polygonOffset);\n  }\n  /** @ignore */\n  destroy() {\n    this.gl = null;\n    this.checks.length = 0;\n  }\n};\n/** @ignore */\n_GlStateSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"state\"\n};\nlet GlStateSystem = _GlStateSystem;\n\nexport { GlStateSystem };\n//# sourceMappingURL=GlStateSystem.mjs.map\n","import { DOMAdapter } from '../../../../environment/adapter.mjs';\n\n\"use strict\";\nfunction mapWebGLBlendModesToPixi(gl) {\n  const blendMap = {};\n  blendMap.normal = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  blendMap.add = [gl.ONE, gl.ONE];\n  blendMap.multiply = [gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  blendMap.screen = [gl.ONE, gl.ONE_MINUS_SRC_COLOR, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  blendMap.none = [0, 0];\n  blendMap[\"normal-npm\"] = [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  blendMap[\"add-npm\"] = [gl.SRC_ALPHA, gl.ONE, gl.ONE, gl.ONE];\n  blendMap[\"screen-npm\"] = [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_COLOR, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  blendMap.erase = [gl.ZERO, gl.ONE_MINUS_SRC_ALPHA];\n  const isWebGl2 = !(gl instanceof DOMAdapter.get().getWebGLRenderingContext());\n  if (isWebGl2) {\n    blendMap.min = [gl.ONE, gl.ONE, gl.ONE, gl.ONE, gl.MIN, gl.MIN];\n    blendMap.max = [gl.ONE, gl.ONE, gl.ONE, gl.ONE, gl.MAX, gl.MAX];\n  } else {\n    const ext = gl.getExtension(\"EXT_blend_minmax\");\n    if (ext) {\n      blendMap.min = [gl.ONE, gl.ONE, gl.ONE, gl.ONE, ext.MIN_EXT, ext.MIN_EXT];\n      blendMap.max = [gl.ONE, gl.ONE, gl.ONE, gl.ONE, ext.MAX_EXT, ext.MAX_EXT];\n    }\n  }\n  return blendMap;\n}\n\nexport { mapWebGLBlendModesToPixi };\n//# sourceMappingURL=mapWebGLBlendModesToPixi.mjs.map\n","import { GL_TARGETS, GL_TYPES, GL_FORMATS } from './const.mjs';\n\n\"use strict\";\nclass GlTexture {\n  constructor(texture) {\n    this.target = GL_TARGETS.TEXTURE_2D;\n    this.texture = texture;\n    this.width = -1;\n    this.height = -1;\n    this.type = GL_TYPES.UNSIGNED_BYTE;\n    this.internalFormat = GL_FORMATS.RGBA;\n    this.format = GL_FORMATS.RGBA;\n    this.samplerType = 0;\n  }\n}\n\nexport { GlTexture };\n//# sourceMappingURL=GlTexture.mjs.map\n","\"use strict\";\nconst glUploadBufferImageResource = {\n  id: \"buffer\",\n  upload(source, glTexture, gl) {\n    if (glTexture.width === source.width || glTexture.height === source.height) {\n      gl.texSubImage2D(\n        gl.TEXTURE_2D,\n        0,\n        0,\n        0,\n        source.width,\n        source.height,\n        glTexture.format,\n        glTexture.type,\n        source.resource\n      );\n    } else {\n      gl.texImage2D(\n        glTexture.target,\n        0,\n        glTexture.internalFormat,\n        source.width,\n        source.height,\n        0,\n        glTexture.format,\n        glTexture.type,\n        source.resource\n      );\n    }\n    glTexture.width = source.width;\n    glTexture.height = source.height;\n  }\n};\n\nexport { glUploadBufferImageResource };\n//# sourceMappingURL=glUploadBufferImageResource.mjs.map\n","\"use strict\";\nconst compressedFormatMap = {\n  \"bc1-rgba-unorm\": true,\n  \"bc1-rgba-unorm-srgb\": true,\n  \"bc2-rgba-unorm\": true,\n  \"bc2-rgba-unorm-srgb\": true,\n  \"bc3-rgba-unorm\": true,\n  \"bc3-rgba-unorm-srgb\": true,\n  \"bc4-r-unorm\": true,\n  \"bc4-r-snorm\": true,\n  \"bc5-rg-unorm\": true,\n  \"bc5-rg-snorm\": true,\n  \"bc6h-rgb-ufloat\": true,\n  \"bc6h-rgb-float\": true,\n  \"bc7-rgba-unorm\": true,\n  \"bc7-rgba-unorm-srgb\": true,\n  // ETC2 compressed formats usable if \"texture-compression-etc2\" is both\n  // supported by the device/user agent and enabled in requestDevice.\n  \"etc2-rgb8unorm\": true,\n  \"etc2-rgb8unorm-srgb\": true,\n  \"etc2-rgb8a1unorm\": true,\n  \"etc2-rgb8a1unorm-srgb\": true,\n  \"etc2-rgba8unorm\": true,\n  \"etc2-rgba8unorm-srgb\": true,\n  \"eac-r11unorm\": true,\n  \"eac-r11snorm\": true,\n  \"eac-rg11unorm\": true,\n  \"eac-rg11snorm\": true,\n  // ASTC compressed formats usable if \"texture-compression-astc\" is both\n  // supported by the device/user agent and enabled in requestDevice.\n  \"astc-4x4-unorm\": true,\n  \"astc-4x4-unorm-srgb\": true,\n  \"astc-5x4-unorm\": true,\n  \"astc-5x4-unorm-srgb\": true,\n  \"astc-5x5-unorm\": true,\n  \"astc-5x5-unorm-srgb\": true,\n  \"astc-6x5-unorm\": true,\n  \"astc-6x5-unorm-srgb\": true,\n  \"astc-6x6-unorm\": true,\n  \"astc-6x6-unorm-srgb\": true,\n  \"astc-8x5-unorm\": true,\n  \"astc-8x5-unorm-srgb\": true,\n  \"astc-8x6-unorm\": true,\n  \"astc-8x6-unorm-srgb\": true,\n  \"astc-8x8-unorm\": true,\n  \"astc-8x8-unorm-srgb\": true,\n  \"astc-10x5-unorm\": true,\n  \"astc-10x5-unorm-srgb\": true,\n  \"astc-10x6-unorm\": true,\n  \"astc-10x6-unorm-srgb\": true,\n  \"astc-10x8-unorm\": true,\n  \"astc-10x8-unorm-srgb\": true,\n  \"astc-10x10-unorm\": true,\n  \"astc-10x10-unorm-srgb\": true,\n  \"astc-12x10-unorm\": true,\n  \"astc-12x10-unorm-srgb\": true,\n  \"astc-12x12-unorm\": true,\n  \"astc-12x12-unorm-srgb\": true\n};\nconst glUploadCompressedTextureResource = {\n  id: \"compressed\",\n  upload(source, glTexture, gl) {\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    let mipWidth = source.pixelWidth;\n    let mipHeight = source.pixelHeight;\n    const compressed = !!compressedFormatMap[source.format];\n    for (let i = 0; i < source.resource.length; i++) {\n      const levelBuffer = source.resource[i];\n      if (compressed) {\n        gl.compressedTexImage2D(\n          gl.TEXTURE_2D,\n          i,\n          glTexture.internalFormat,\n          mipWidth,\n          mipHeight,\n          0,\n          levelBuffer\n        );\n      } else {\n        gl.texImage2D(\n          gl.TEXTURE_2D,\n          i,\n          glTexture.internalFormat,\n          mipWidth,\n          mipHeight,\n          0,\n          glTexture.format,\n          glTexture.type,\n          levelBuffer\n        );\n      }\n      mipWidth = Math.max(mipWidth >> 1, 1);\n      mipHeight = Math.max(mipHeight >> 1, 1);\n    }\n  }\n};\n\nexport { glUploadCompressedTextureResource };\n//# sourceMappingURL=glUploadCompressedTextureResource.mjs.map\n","\"use strict\";\nconst glUploadImageResource = {\n  id: \"image\",\n  upload(source, glTexture, gl, webGLVersion) {\n    const glWidth = glTexture.width;\n    const glHeight = glTexture.height;\n    const textureWidth = source.pixelWidth;\n    const textureHeight = source.pixelHeight;\n    const resourceWidth = source.resourceWidth;\n    const resourceHeight = source.resourceHeight;\n    if (resourceWidth < textureWidth || resourceHeight < textureHeight) {\n      if (glWidth !== textureWidth || glHeight !== textureHeight) {\n        gl.texImage2D(\n          glTexture.target,\n          0,\n          glTexture.internalFormat,\n          textureWidth,\n          textureHeight,\n          0,\n          glTexture.format,\n          glTexture.type,\n          null\n        );\n      }\n      if (webGLVersion === 2) {\n        gl.texSubImage2D(\n          gl.TEXTURE_2D,\n          0,\n          0,\n          0,\n          resourceWidth,\n          resourceHeight,\n          glTexture.format,\n          glTexture.type,\n          source.resource\n        );\n      } else {\n        gl.texSubImage2D(\n          gl.TEXTURE_2D,\n          0,\n          0,\n          0,\n          glTexture.format,\n          glTexture.type,\n          source.resource\n        );\n      }\n    } else if (glWidth === textureWidth && glHeight === textureHeight) {\n      gl.texSubImage2D(\n        gl.TEXTURE_2D,\n        0,\n        0,\n        0,\n        glTexture.format,\n        glTexture.type,\n        source.resource\n      );\n    } else if (webGLVersion === 2) {\n      gl.texImage2D(\n        glTexture.target,\n        0,\n        glTexture.internalFormat,\n        textureWidth,\n        textureHeight,\n        0,\n        glTexture.format,\n        glTexture.type,\n        source.resource\n      );\n    } else {\n      gl.texImage2D(\n        glTexture.target,\n        0,\n        glTexture.internalFormat,\n        glTexture.format,\n        glTexture.type,\n        source.resource\n      );\n    }\n    glTexture.width = textureWidth;\n    glTexture.height = textureHeight;\n  }\n};\n\nexport { glUploadImageResource };\n//# sourceMappingURL=glUploadImageResource.mjs.map\n","import { glUploadImageResource } from './glUploadImageResource.mjs';\n\n\"use strict\";\nconst glUploadVideoResource = {\n  id: \"video\",\n  upload(source, glTexture, gl, webGLVersion) {\n    if (!source.isValid) {\n      gl.texImage2D(\n        glTexture.target,\n        0,\n        glTexture.internalFormat,\n        1,\n        1,\n        0,\n        glTexture.format,\n        glTexture.type,\n        null\n      );\n      return;\n    }\n    glUploadImageResource.upload(source, glTexture, gl, webGLVersion);\n  }\n};\n\nexport { glUploadVideoResource };\n//# sourceMappingURL=glUploadVideoResource.mjs.map\n","\"use strict\";\nconst scaleModeToGlFilter = {\n  linear: 9729,\n  nearest: 9728\n};\nconst mipmapScaleModeToGlFilter = {\n  linear: {\n    linear: 9987,\n    nearest: 9985\n  },\n  nearest: {\n    linear: 9986,\n    nearest: 9984\n  }\n};\nconst wrapModeToGlAddress = {\n  \"clamp-to-edge\": 33071,\n  repeat: 10497,\n  \"mirror-repeat\": 33648\n};\nconst compareModeToGlCompare = {\n  never: 512,\n  less: 513,\n  equal: 514,\n  \"less-equal\": 515,\n  greater: 516,\n  \"not-equal\": 517,\n  \"greater-equal\": 518,\n  always: 519\n};\n\nexport { compareModeToGlCompare, mipmapScaleModeToGlFilter, scaleModeToGlFilter, wrapModeToGlAddress };\n//# sourceMappingURL=pixiToGlMaps.mjs.map\n","import { wrapModeToGlAddress, scaleModeToGlFilter, mipmapScaleModeToGlFilter, compareModeToGlCompare } from './pixiToGlMaps.mjs';\n\n\"use strict\";\nfunction applyStyleParams(style, gl, mipmaps, anisotropicExt, glFunctionName, firstParam, forceClamp, firstCreation) {\n  const castParam = firstParam;\n  if (!firstCreation || style.addressModeU !== \"repeat\" || style.addressModeV !== \"repeat\" || style.addressModeW !== \"repeat\") {\n    const wrapModeS = wrapModeToGlAddress[forceClamp ? \"clamp-to-edge\" : style.addressModeU];\n    const wrapModeT = wrapModeToGlAddress[forceClamp ? \"clamp-to-edge\" : style.addressModeV];\n    const wrapModeR = wrapModeToGlAddress[forceClamp ? \"clamp-to-edge\" : style.addressModeW];\n    gl[glFunctionName](castParam, gl.TEXTURE_WRAP_S, wrapModeS);\n    gl[glFunctionName](castParam, gl.TEXTURE_WRAP_T, wrapModeT);\n    if (gl.TEXTURE_WRAP_R)\n      gl[glFunctionName](castParam, gl.TEXTURE_WRAP_R, wrapModeR);\n  }\n  if (!firstCreation || style.magFilter !== \"linear\") {\n    gl[glFunctionName](castParam, gl.TEXTURE_MAG_FILTER, scaleModeToGlFilter[style.magFilter]);\n  }\n  if (mipmaps) {\n    if (!firstCreation || style.mipmapFilter !== \"linear\") {\n      const glFilterMode = mipmapScaleModeToGlFilter[style.minFilter][style.mipmapFilter];\n      gl[glFunctionName](castParam, gl.TEXTURE_MIN_FILTER, glFilterMode);\n    }\n  } else {\n    gl[glFunctionName](castParam, gl.TEXTURE_MIN_FILTER, scaleModeToGlFilter[style.minFilter]);\n  }\n  if (anisotropicExt && style.maxAnisotropy > 1) {\n    const level = Math.min(style.maxAnisotropy, gl.getParameter(anisotropicExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT));\n    gl[glFunctionName](castParam, anisotropicExt.TEXTURE_MAX_ANISOTROPY_EXT, level);\n  }\n  if (style.compare) {\n    gl[glFunctionName](castParam, gl.TEXTURE_COMPARE_FUNC, compareModeToGlCompare[style.compare]);\n  }\n}\n\nexport { applyStyleParams };\n//# sourceMappingURL=applyStyleParams.mjs.map\n","import { DOMAdapter } from '../../../../environment/adapter.mjs';\nimport { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { Texture } from '../../shared/texture/Texture.mjs';\nimport { GlTexture } from './GlTexture.mjs';\nimport { glUploadBufferImageResource } from './uploaders/glUploadBufferImageResource.mjs';\nimport { glUploadCompressedTextureResource } from './uploaders/glUploadCompressedTextureResource.mjs';\nimport { glUploadImageResource } from './uploaders/glUploadImageResource.mjs';\nimport { glUploadVideoResource } from './uploaders/glUploadVideoResource.mjs';\nimport { applyStyleParams } from './utils/applyStyleParams.mjs';\nimport { mapFormatToGlFormat } from './utils/mapFormatToGlFormat.mjs';\nimport { mapFormatToGlInternalFormat } from './utils/mapFormatToGlInternalFormat.mjs';\nimport { mapFormatToGlType } from './utils/mapFormatToGlType.mjs';\nimport './utils/unpremultiplyAlpha.mjs';\n\n\"use strict\";\nconst BYTES_PER_PIXEL = 4;\nclass GlTextureSystem {\n  constructor(renderer) {\n    this.managedTextures = [];\n    this._glTextures = /* @__PURE__ */ Object.create(null);\n    this._glSamplers = /* @__PURE__ */ Object.create(null);\n    this._boundTextures = [];\n    this._activeTextureLocation = -1;\n    this._boundSamplers = /* @__PURE__ */ Object.create(null);\n    this._uploads = {\n      image: glUploadImageResource,\n      buffer: glUploadBufferImageResource,\n      video: glUploadVideoResource,\n      compressed: glUploadCompressedTextureResource\n    };\n    this._premultiplyAlpha = false;\n    // TODO - separate samplers will be a cool thing to add, but not right now!\n    this._useSeparateSamplers = false;\n    this._renderer = renderer;\n    this._renderer.renderableGC.addManagedHash(this, \"_glTextures\");\n    this._renderer.renderableGC.addManagedHash(this, \"_glSamplers\");\n  }\n  contextChange(gl) {\n    this._gl = gl;\n    if (!this._mapFormatToInternalFormat) {\n      this._mapFormatToInternalFormat = mapFormatToGlInternalFormat(gl, this._renderer.context.extensions);\n      this._mapFormatToType = mapFormatToGlType(gl);\n      this._mapFormatToFormat = mapFormatToGlFormat(gl);\n    }\n    this._glTextures = /* @__PURE__ */ Object.create(null);\n    this._glSamplers = /* @__PURE__ */ Object.create(null);\n    this._boundSamplers = /* @__PURE__ */ Object.create(null);\n    this._premultiplyAlpha = false;\n    for (let i = 0; i < 16; i++) {\n      this.bind(Texture.EMPTY, i);\n    }\n  }\n  /**\n   * Initializes a texture source, if it has already been initialized nothing will happen.\n   * @param source - The texture source to initialize.\n   * @returns The initialized texture source.\n   */\n  initSource(source) {\n    this.bind(source);\n  }\n  bind(texture, location = 0) {\n    const source = texture.source;\n    if (texture) {\n      this.bindSource(source, location);\n      if (this._useSeparateSamplers) {\n        this._bindSampler(source.style, location);\n      }\n    } else {\n      this.bindSource(null, location);\n      if (this._useSeparateSamplers) {\n        this._bindSampler(null, location);\n      }\n    }\n  }\n  bindSource(source, location = 0) {\n    const gl = this._gl;\n    source._touched = this._renderer.textureGC.count;\n    if (this._boundTextures[location] !== source) {\n      this._boundTextures[location] = source;\n      this._activateLocation(location);\n      source || (source = Texture.EMPTY.source);\n      const glTexture = this.getGlSource(source);\n      gl.bindTexture(glTexture.target, glTexture.texture);\n    }\n  }\n  _bindSampler(style, location = 0) {\n    const gl = this._gl;\n    if (!style) {\n      this._boundSamplers[location] = null;\n      gl.bindSampler(location, null);\n      return;\n    }\n    const sampler = this._getGlSampler(style);\n    if (this._boundSamplers[location] !== sampler) {\n      this._boundSamplers[location] = sampler;\n      gl.bindSampler(location, sampler);\n    }\n  }\n  unbind(texture) {\n    const source = texture.source;\n    const boundTextures = this._boundTextures;\n    const gl = this._gl;\n    for (let i = 0; i < boundTextures.length; i++) {\n      if (boundTextures[i] === source) {\n        this._activateLocation(i);\n        const glTexture = this.getGlSource(source);\n        gl.bindTexture(glTexture.target, null);\n        boundTextures[i] = null;\n      }\n    }\n  }\n  _activateLocation(location) {\n    if (this._activeTextureLocation !== location) {\n      this._activeTextureLocation = location;\n      this._gl.activeTexture(this._gl.TEXTURE0 + location);\n    }\n  }\n  _initSource(source) {\n    const gl = this._gl;\n    const glTexture = new GlTexture(gl.createTexture());\n    glTexture.type = this._mapFormatToType[source.format];\n    glTexture.internalFormat = this._mapFormatToInternalFormat[source.format];\n    glTexture.format = this._mapFormatToFormat[source.format];\n    if (source.autoGenerateMipmaps && (this._renderer.context.supports.nonPowOf2mipmaps || source.isPowerOfTwo)) {\n      const biggestDimension = Math.max(source.width, source.height);\n      source.mipLevelCount = Math.floor(Math.log2(biggestDimension)) + 1;\n    }\n    this._glTextures[source.uid] = glTexture;\n    if (!this.managedTextures.includes(source)) {\n      source.on(\"update\", this.onSourceUpdate, this);\n      source.on(\"resize\", this.onSourceUpdate, this);\n      source.on(\"styleChange\", this.onStyleChange, this);\n      source.on(\"destroy\", this.onSourceDestroy, this);\n      source.on(\"unload\", this.onSourceUnload, this);\n      source.on(\"updateMipmaps\", this.onUpdateMipmaps, this);\n      this.managedTextures.push(source);\n    }\n    this.onSourceUpdate(source);\n    this.updateStyle(source, false);\n    return glTexture;\n  }\n  onStyleChange(source) {\n    this.updateStyle(source, false);\n  }\n  updateStyle(source, firstCreation) {\n    const gl = this._gl;\n    const glTexture = this.getGlSource(source);\n    gl.bindTexture(gl.TEXTURE_2D, glTexture.texture);\n    this._boundTextures[this._activeTextureLocation] = source;\n    applyStyleParams(\n      source.style,\n      gl,\n      source.mipLevelCount > 1,\n      this._renderer.context.extensions.anisotropicFiltering,\n      \"texParameteri\",\n      gl.TEXTURE_2D,\n      // will force a clamp to edge if the texture is not a power of two\n      !this._renderer.context.supports.nonPowOf2wrapping && !source.isPowerOfTwo,\n      firstCreation\n    );\n  }\n  onSourceUnload(source) {\n    const glTexture = this._glTextures[source.uid];\n    if (!glTexture)\n      return;\n    this.unbind(source);\n    this._glTextures[source.uid] = null;\n    this._gl.deleteTexture(glTexture.texture);\n  }\n  onSourceUpdate(source) {\n    const gl = this._gl;\n    const glTexture = this.getGlSource(source);\n    gl.bindTexture(gl.TEXTURE_2D, glTexture.texture);\n    this._boundTextures[this._activeTextureLocation] = source;\n    const premultipliedAlpha = source.alphaMode === \"premultiply-alpha-on-upload\";\n    if (this._premultiplyAlpha !== premultipliedAlpha) {\n      this._premultiplyAlpha = premultipliedAlpha;\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, premultipliedAlpha);\n    }\n    if (this._uploads[source.uploadMethodId]) {\n      this._uploads[source.uploadMethodId].upload(source, glTexture, gl, this._renderer.context.webGLVersion);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, source.pixelWidth, source.pixelHeight, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    }\n    if (source.autoGenerateMipmaps && source.mipLevelCount > 1) {\n      this.onUpdateMipmaps(source, false);\n    }\n  }\n  onUpdateMipmaps(source, bind = true) {\n    if (bind)\n      this.bindSource(source, 0);\n    const glTexture = this.getGlSource(source);\n    this._gl.generateMipmap(glTexture.target);\n  }\n  onSourceDestroy(source) {\n    source.off(\"destroy\", this.onSourceDestroy, this);\n    source.off(\"update\", this.onSourceUpdate, this);\n    source.off(\"resize\", this.onSourceUpdate, this);\n    source.off(\"unload\", this.onSourceUnload, this);\n    source.off(\"styleChange\", this.onStyleChange, this);\n    source.off(\"updateMipmaps\", this.onUpdateMipmaps, this);\n    this.managedTextures.splice(this.managedTextures.indexOf(source), 1);\n    this.onSourceUnload(source);\n  }\n  _initSampler(style) {\n    const gl = this._gl;\n    const glSampler = this._gl.createSampler();\n    this._glSamplers[style._resourceId] = glSampler;\n    applyStyleParams(\n      style,\n      gl,\n      this._boundTextures[this._activeTextureLocation].mipLevelCount > 1,\n      this._renderer.context.extensions.anisotropicFiltering,\n      \"samplerParameteri\",\n      glSampler,\n      false,\n      true\n    );\n    return this._glSamplers[style._resourceId];\n  }\n  _getGlSampler(sampler) {\n    return this._glSamplers[sampler._resourceId] || this._initSampler(sampler);\n  }\n  getGlSource(source) {\n    return this._glTextures[source.uid] || this._initSource(source);\n  }\n  generateCanvas(texture) {\n    const { pixels, width, height } = this.getPixels(texture);\n    const canvas = DOMAdapter.get().createCanvas();\n    canvas.width = width;\n    canvas.height = height;\n    const ctx = canvas.getContext(\"2d\");\n    if (ctx) {\n      const imageData = ctx.createImageData(width, height);\n      imageData.data.set(pixels);\n      ctx.putImageData(imageData, 0, 0);\n    }\n    return canvas;\n  }\n  getPixels(texture) {\n    const resolution = texture.source.resolution;\n    const frame = texture.frame;\n    const width = Math.max(Math.round(frame.width * resolution), 1);\n    const height = Math.max(Math.round(frame.height * resolution), 1);\n    const pixels = new Uint8Array(BYTES_PER_PIXEL * width * height);\n    const renderer = this._renderer;\n    const renderTarget = renderer.renderTarget.getRenderTarget(texture);\n    const glRenterTarget = renderer.renderTarget.getGpuRenderTarget(renderTarget);\n    const gl = renderer.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, glRenterTarget.resolveTargetFramebuffer);\n    gl.readPixels(\n      Math.round(frame.x * resolution),\n      Math.round(frame.y * resolution),\n      width,\n      height,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      pixels\n    );\n    if (false) {\n      unpremultiplyAlpha(pixels);\n    }\n    return { pixels: new Uint8ClampedArray(pixels.buffer), width, height };\n  }\n  destroy() {\n    this.managedTextures.slice().forEach((source) => this.onSourceDestroy(source));\n    this.managedTextures = null;\n    this._glTextures = null;\n    this._glSamplers = null;\n    this._boundTextures = null;\n    this._boundSamplers = null;\n    this._mapFormatToInternalFormat = null;\n    this._mapFormatToType = null;\n    this._mapFormatToFormat = null;\n    this._uploads = null;\n    this._renderer = null;\n  }\n  resetState() {\n    this._activeTextureLocation = -1;\n    this._boundTextures.fill(Texture.EMPTY.source);\n    this._boundSamplers = /* @__PURE__ */ Object.create(null);\n    const gl = this._gl;\n    this._premultiplyAlpha = false;\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this._premultiplyAlpha);\n  }\n}\n/** @ignore */\nGlTextureSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"texture\"\n};\n\nexport { GlTextureSystem };\n//# sourceMappingURL=GlTextureSystem.mjs.map\n","import { DOMAdapter } from '../../../../../environment/adapter.mjs';\n\n\"use strict\";\nfunction mapFormatToGlInternalFormat(gl, extensions) {\n  let srgb = {};\n  let bgra8unorm = gl.RGBA;\n  if (!(gl instanceof DOMAdapter.get().getWebGLRenderingContext())) {\n    srgb = {\n      \"rgba8unorm-srgb\": gl.SRGB8_ALPHA8,\n      \"bgra8unorm-srgb\": gl.SRGB8_ALPHA8\n    };\n    bgra8unorm = gl.RGBA8;\n  } else if (extensions.srgb) {\n    srgb = {\n      \"rgba8unorm-srgb\": extensions.srgb.SRGB8_ALPHA8_EXT,\n      \"bgra8unorm-srgb\": extensions.srgb.SRGB8_ALPHA8_EXT\n    };\n  }\n  return {\n    // 8-bit formats\n    r8unorm: gl.R8,\n    r8snorm: gl.R8_SNORM,\n    r8uint: gl.R8UI,\n    r8sint: gl.R8I,\n    // 16-bit formats\n    r16uint: gl.R16UI,\n    r16sint: gl.R16I,\n    r16float: gl.R16F,\n    rg8unorm: gl.RG8,\n    rg8snorm: gl.RG8_SNORM,\n    rg8uint: gl.RG8UI,\n    rg8sint: gl.RG8I,\n    // 32-bit formats\n    r32uint: gl.R32UI,\n    r32sint: gl.R32I,\n    r32float: gl.R32F,\n    rg16uint: gl.RG16UI,\n    rg16sint: gl.RG16I,\n    rg16float: gl.RG16F,\n    rgba8unorm: gl.RGBA,\n    ...srgb,\n    // Packed 32-bit formats\n    rgba8snorm: gl.RGBA8_SNORM,\n    rgba8uint: gl.RGBA8UI,\n    rgba8sint: gl.RGBA8I,\n    bgra8unorm,\n    rgb9e5ufloat: gl.RGB9_E5,\n    rgb10a2unorm: gl.RGB10_A2,\n    rg11b10ufloat: gl.R11F_G11F_B10F,\n    // 64-bit formats\n    rg32uint: gl.RG32UI,\n    rg32sint: gl.RG32I,\n    rg32float: gl.RG32F,\n    rgba16uint: gl.RGBA16UI,\n    rgba16sint: gl.RGBA16I,\n    rgba16float: gl.RGBA16F,\n    // 128-bit formats\n    rgba32uint: gl.RGBA32UI,\n    rgba32sint: gl.RGBA32I,\n    rgba32float: gl.RGBA32F,\n    // Depth/stencil formats\n    stencil8: gl.STENCIL_INDEX8,\n    depth16unorm: gl.DEPTH_COMPONENT16,\n    depth24plus: gl.DEPTH_COMPONENT24,\n    \"depth24plus-stencil8\": gl.DEPTH24_STENCIL8,\n    depth32float: gl.DEPTH_COMPONENT32F,\n    \"depth32float-stencil8\": gl.DEPTH32F_STENCIL8,\n    // Compressed formats\n    ...extensions.s3tc ? {\n      \"bc1-rgba-unorm\": extensions.s3tc.COMPRESSED_RGBA_S3TC_DXT1_EXT,\n      \"bc2-rgba-unorm\": extensions.s3tc.COMPRESSED_RGBA_S3TC_DXT3_EXT,\n      \"bc3-rgba-unorm\": extensions.s3tc.COMPRESSED_RGBA_S3TC_DXT5_EXT\n    } : {},\n    ...extensions.s3tc_sRGB ? {\n      \"bc1-rgba-unorm-srgb\": extensions.s3tc_sRGB.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT,\n      \"bc2-rgba-unorm-srgb\": extensions.s3tc_sRGB.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT,\n      \"bc3-rgba-unorm-srgb\": extensions.s3tc_sRGB.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT\n    } : {},\n    ...extensions.rgtc ? {\n      \"bc4-r-unorm\": extensions.rgtc.COMPRESSED_RED_RGTC1_EXT,\n      \"bc4-r-snorm\": extensions.rgtc.COMPRESSED_SIGNED_RED_RGTC1_EXT,\n      \"bc5-rg-unorm\": extensions.rgtc.COMPRESSED_RED_GREEN_RGTC2_EXT,\n      \"bc5-rg-snorm\": extensions.rgtc.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT\n    } : {},\n    ...extensions.bptc ? {\n      \"bc6h-rgb-float\": extensions.bptc.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT,\n      \"bc6h-rgb-ufloat\": extensions.bptc.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT,\n      \"bc7-rgba-unorm\": extensions.bptc.COMPRESSED_RGBA_BPTC_UNORM_EXT,\n      \"bc7-rgba-unorm-srgb\": extensions.bptc.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT\n    } : {},\n    ...extensions.etc ? {\n      \"etc2-rgb8unorm\": extensions.etc.COMPRESSED_RGB8_ETC2,\n      \"etc2-rgb8unorm-srgb\": extensions.etc.COMPRESSED_SRGB8_ETC2,\n      \"etc2-rgb8a1unorm\": extensions.etc.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2,\n      \"etc2-rgb8a1unorm-srgb\": extensions.etc.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2,\n      \"etc2-rgba8unorm\": extensions.etc.COMPRESSED_RGBA8_ETC2_EAC,\n      \"etc2-rgba8unorm-srgb\": extensions.etc.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC,\n      \"eac-r11unorm\": extensions.etc.COMPRESSED_R11_EAC,\n      // 'eac-r11snorm'\n      \"eac-rg11unorm\": extensions.etc.COMPRESSED_SIGNED_RG11_EAC\n      // 'eac-rg11snorm'\n    } : {},\n    ...extensions.astc ? {\n      \"astc-4x4-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_4x4_KHR,\n      \"astc-4x4-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR,\n      \"astc-5x4-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_5x4_KHR,\n      \"astc-5x4-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR,\n      \"astc-5x5-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_5x5_KHR,\n      \"astc-5x5-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR,\n      \"astc-6x5-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_6x5_KHR,\n      \"astc-6x5-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR,\n      \"astc-6x6-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_6x6_KHR,\n      \"astc-6x6-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR,\n      \"astc-8x5-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_8x5_KHR,\n      \"astc-8x5-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR,\n      \"astc-8x6-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_8x6_KHR,\n      \"astc-8x6-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR,\n      \"astc-8x8-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_8x8_KHR,\n      \"astc-8x8-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR,\n      \"astc-10x5-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_10x5_KHR,\n      \"astc-10x5-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR,\n      \"astc-10x6-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_10x6_KHR,\n      \"astc-10x6-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR,\n      \"astc-10x8-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_10x8_KHR,\n      \"astc-10x8-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR,\n      \"astc-10x10-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_10x10_KHR,\n      \"astc-10x10-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR,\n      \"astc-12x10-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_12x10_KHR,\n      \"astc-12x10-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR,\n      \"astc-12x12-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_12x12_KHR,\n      \"astc-12x12-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR\n    } : {}\n  };\n}\n\nexport { mapFormatToGlInternalFormat };\n//# sourceMappingURL=mapFormatToGlInternalFormat.mjs.map\n","\"use strict\";\nfunction mapFormatToGlType(gl) {\n  return {\n    // 8-bit formats\n    r8unorm: gl.UNSIGNED_BYTE,\n    r8snorm: gl.BYTE,\n    r8uint: gl.UNSIGNED_BYTE,\n    r8sint: gl.BYTE,\n    // 16-bit formats\n    r16uint: gl.UNSIGNED_SHORT,\n    r16sint: gl.SHORT,\n    r16float: gl.HALF_FLOAT,\n    rg8unorm: gl.UNSIGNED_BYTE,\n    rg8snorm: gl.BYTE,\n    rg8uint: gl.UNSIGNED_BYTE,\n    rg8sint: gl.BYTE,\n    // 32-bit formats\n    r32uint: gl.UNSIGNED_INT,\n    r32sint: gl.INT,\n    r32float: gl.FLOAT,\n    rg16uint: gl.UNSIGNED_SHORT,\n    rg16sint: gl.SHORT,\n    rg16float: gl.HALF_FLOAT,\n    rgba8unorm: gl.UNSIGNED_BYTE,\n    \"rgba8unorm-srgb\": gl.UNSIGNED_BYTE,\n    // Packed 32-bit formats\n    rgba8snorm: gl.BYTE,\n    rgba8uint: gl.UNSIGNED_BYTE,\n    rgba8sint: gl.BYTE,\n    bgra8unorm: gl.UNSIGNED_BYTE,\n    \"bgra8unorm-srgb\": gl.UNSIGNED_BYTE,\n    rgb9e5ufloat: gl.UNSIGNED_INT_5_9_9_9_REV,\n    rgb10a2unorm: gl.UNSIGNED_INT_2_10_10_10_REV,\n    rg11b10ufloat: gl.UNSIGNED_INT_10F_11F_11F_REV,\n    // 64-bit formats\n    rg32uint: gl.UNSIGNED_INT,\n    rg32sint: gl.INT,\n    rg32float: gl.FLOAT,\n    rgba16uint: gl.UNSIGNED_SHORT,\n    rgba16sint: gl.SHORT,\n    rgba16float: gl.HALF_FLOAT,\n    // 128-bit formats\n    rgba32uint: gl.UNSIGNED_INT,\n    rgba32sint: gl.INT,\n    rgba32float: gl.FLOAT,\n    // Depth/stencil formats\n    stencil8: gl.UNSIGNED_BYTE,\n    depth16unorm: gl.UNSIGNED_SHORT,\n    depth24plus: gl.UNSIGNED_INT,\n    \"depth24plus-stencil8\": gl.UNSIGNED_INT_24_8,\n    depth32float: gl.FLOAT,\n    \"depth32float-stencil8\": gl.FLOAT_32_UNSIGNED_INT_24_8_REV\n  };\n}\n\nexport { mapFormatToGlType };\n//# sourceMappingURL=mapFormatToGlType.mjs.map\n","\"use strict\";\nfunction mapFormatToGlFormat(gl) {\n  return {\n    // 8-bit formats\n    r8unorm: gl.RED,\n    r8snorm: gl.RED,\n    r8uint: gl.RED,\n    r8sint: gl.RED,\n    // 16-bit formats\n    r16uint: gl.RED,\n    r16sint: gl.RED,\n    r16float: gl.RED,\n    rg8unorm: gl.RG,\n    rg8snorm: gl.RG,\n    rg8uint: gl.RG,\n    rg8sint: gl.RG,\n    // 32-bit formats\n    r32uint: gl.RED,\n    r32sint: gl.RED,\n    r32float: gl.RED,\n    rg16uint: gl.RG,\n    rg16sint: gl.RG,\n    rg16float: gl.RG,\n    rgba8unorm: gl.RGBA,\n    \"rgba8unorm-srgb\": gl.RGBA,\n    // Packed 32-bit formats\n    rgba8snorm: gl.RGBA,\n    rgba8uint: gl.RGBA,\n    rgba8sint: gl.RGBA,\n    bgra8unorm: gl.RGBA,\n    \"bgra8unorm-srgb\": gl.RGBA,\n    rgb9e5ufloat: gl.RGB,\n    rgb10a2unorm: gl.RGBA,\n    rg11b10ufloat: gl.RGB,\n    // 64-bit formats\n    rg32uint: gl.RG,\n    rg32sint: gl.RG,\n    rg32float: gl.RG,\n    rgba16uint: gl.RGBA,\n    rgba16sint: gl.RGBA,\n    rgba16float: gl.RGBA,\n    // 128-bit formats\n    rgba32uint: gl.RGBA,\n    rgba32sint: gl.RGBA,\n    rgba32float: gl.RGBA,\n    // Depth/stencil formats\n    stencil8: gl.STENCIL_INDEX8,\n    depth16unorm: gl.DEPTH_COMPONENT,\n    depth24plus: gl.DEPTH_COMPONENT,\n    \"depth24plus-stencil8\": gl.DEPTH_STENCIL,\n    depth32float: gl.DEPTH_COMPONENT,\n    \"depth32float-stencil8\": gl.DEPTH_STENCIL\n  };\n}\n\nexport { mapFormatToGlFormat };\n//# sourceMappingURL=mapFormatToGlFormat.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { compileHighShaderGlProgram } from '../../../rendering/high-shader/compileHighShaderToProgram.mjs';\nimport { colorBitGl } from '../../../rendering/high-shader/shader-bits/colorBit.mjs';\nimport { generateTextureBatchBitGl } from '../../../rendering/high-shader/shader-bits/generateTextureBatchBit.mjs';\nimport { localUniformBitGl } from '../../../rendering/high-shader/shader-bits/localUniformBit.mjs';\nimport { roundPixelsBitGl } from '../../../rendering/high-shader/shader-bits/roundPixelsBit.mjs';\nimport { getBatchSamplersUniformGroup } from '../../../rendering/renderers/gl/shader/getBatchSamplersUniformGroup.mjs';\nimport { Shader } from '../../../rendering/renderers/shared/shader/Shader.mjs';\nimport { UniformGroup } from '../../../rendering/renderers/shared/shader/UniformGroup.mjs';\n\n\"use strict\";\nclass GlGraphicsAdaptor {\n  contextChange(renderer) {\n    const uniforms = new UniformGroup({\n      uColor: { value: new Float32Array([1, 1, 1, 1]), type: \"vec4<f32>\" },\n      uTransformMatrix: { value: new Matrix(), type: \"mat3x3<f32>\" },\n      uRound: { value: 0, type: \"f32\" }\n    });\n    const maxTextures = renderer.limits.maxBatchableTextures;\n    const glProgram = compileHighShaderGlProgram({\n      name: \"graphics\",\n      bits: [\n        colorBitGl,\n        generateTextureBatchBitGl(maxTextures),\n        localUniformBitGl,\n        roundPixelsBitGl\n      ]\n    });\n    this.shader = new Shader({\n      glProgram,\n      resources: {\n        localUniforms: uniforms,\n        batchSamplers: getBatchSamplersUniformGroup(maxTextures)\n      }\n    });\n  }\n  execute(graphicsPipe, renderable) {\n    const context = renderable.context;\n    const shader = context.customShader || this.shader;\n    const renderer = graphicsPipe.renderer;\n    const contextSystem = renderer.graphicsContext;\n    const {\n      batcher,\n      instructions\n    } = contextSystem.getContextRenderData(context);\n    shader.groups[0] = renderer.globalUniforms.bindGroup;\n    renderer.state.set(graphicsPipe.state);\n    renderer.shader.bind(shader);\n    renderer.geometry.bind(batcher.geometry, shader.glProgram);\n    const batches = instructions.instructions;\n    for (let i = 0; i < instructions.instructionSize; i++) {\n      const batch = batches[i];\n      if (batch.size) {\n        for (let j = 0; j < batch.textures.count; j++) {\n          renderer.texture.bind(batch.textures.textures[j], j);\n        }\n        renderer.geometry.draw(batch.topology, batch.size, batch.start);\n      }\n    }\n  }\n  destroy() {\n    this.shader.destroy(true);\n    this.shader = null;\n  }\n}\n/** @ignore */\nGlGraphicsAdaptor.extension = {\n  type: [\n    ExtensionType.WebGLPipesAdaptor\n  ],\n  name: \"graphics\"\n};\n\nexport { GlGraphicsAdaptor };\n//# sourceMappingURL=GlGraphicsAdaptor.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { compileHighShaderGlProgram } from '../../../rendering/high-shader/compileHighShaderToProgram.mjs';\nimport { localUniformBitGl } from '../../../rendering/high-shader/shader-bits/localUniformBit.mjs';\nimport { roundPixelsBitGl } from '../../../rendering/high-shader/shader-bits/roundPixelsBit.mjs';\nimport { textureBitGl } from '../../../rendering/high-shader/shader-bits/textureBit.mjs';\nimport { Shader } from '../../../rendering/renderers/shared/shader/Shader.mjs';\nimport { Texture } from '../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { warn } from '../../../utils/logging/warn.mjs';\n\n\"use strict\";\nclass GlMeshAdaptor {\n  init() {\n    const glProgram = compileHighShaderGlProgram({\n      name: \"mesh\",\n      bits: [\n        localUniformBitGl,\n        textureBitGl,\n        roundPixelsBitGl\n      ]\n    });\n    this._shader = new Shader({\n      glProgram,\n      resources: {\n        uTexture: Texture.EMPTY.source,\n        textureUniforms: {\n          uTextureMatrix: { type: \"mat3x3<f32>\", value: new Matrix() }\n        }\n      }\n    });\n  }\n  execute(meshPipe, mesh) {\n    const renderer = meshPipe.renderer;\n    let shader = mesh._shader;\n    if (!shader) {\n      shader = this._shader;\n      const texture = mesh.texture;\n      const source = texture.source;\n      shader.resources.uTexture = source;\n      shader.resources.uSampler = source.style;\n      shader.resources.textureUniforms.uniforms.uTextureMatrix = texture.textureMatrix.mapCoord;\n    } else if (!shader.glProgram) {\n      warn(\"Mesh shader has no glProgram\", mesh.shader);\n      return;\n    }\n    shader.groups[100] = renderer.globalUniforms.bindGroup;\n    shader.groups[101] = meshPipe.localUniformsBindGroup;\n    renderer.encoder.draw({\n      geometry: mesh._geometry,\n      shader,\n      state: mesh.state\n    });\n  }\n  destroy() {\n    this._shader.destroy(true);\n    this._shader = null;\n  }\n}\nGlMeshAdaptor.extension = {\n  type: [\n    ExtensionType.WebGLPipesAdaptor\n  ],\n  name: \"mesh\"\n};\n\nexport { GlMeshAdaptor };\n//# sourceMappingURL=GlMeshAdaptor.mjs.map\n","import { extensions, ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { GlGraphicsAdaptor } from '../../../scene/graphics/gl/GlGraphicsAdaptor.mjs';\nimport { GlMeshAdaptor } from '../../../scene/mesh/gl/GlMeshAdaptor.mjs';\nimport { GlBatchAdaptor } from '../../batcher/gl/GlBatchAdaptor.mjs';\nimport { AbstractRenderer } from '../shared/system/AbstractRenderer.mjs';\nimport { SharedSystems, SharedRenderPipes } from '../shared/system/SharedSystems.mjs';\nimport { RendererType } from '../types.mjs';\nimport { GlBufferSystem } from './buffer/GlBufferSystem.mjs';\nimport { GlContextSystem } from './context/GlContextSystem.mjs';\nimport { GlGeometrySystem } from './geometry/GlGeometrySystem.mjs';\nimport { GlBackBufferSystem } from './GlBackBufferSystem.mjs';\nimport { GlColorMaskSystem } from './GlColorMaskSystem.mjs';\nimport { GlEncoderSystem } from './GlEncoderSystem.mjs';\nimport { GlLimitsSystem } from './GlLimitsSystem.mjs';\nimport { GlStencilSystem } from './GlStencilSystem.mjs';\nimport { GlUboSystem } from './GlUboSystem.mjs';\nimport { GlRenderTargetSystem } from './renderTarget/GlRenderTargetSystem.mjs';\nimport { GlShaderSystem } from './shader/GlShaderSystem.mjs';\nimport { GlUniformGroupSystem } from './shader/GlUniformGroupSystem.mjs';\nimport { GlStateSystem } from './state/GlStateSystem.mjs';\nimport { GlTextureSystem } from './texture/GlTextureSystem.mjs';\n\n\"use strict\";\nconst DefaultWebGLSystems = [\n  ...SharedSystems,\n  GlUboSystem,\n  GlBackBufferSystem,\n  GlContextSystem,\n  GlLimitsSystem,\n  GlBufferSystem,\n  GlTextureSystem,\n  GlRenderTargetSystem,\n  GlGeometrySystem,\n  GlUniformGroupSystem,\n  GlShaderSystem,\n  GlEncoderSystem,\n  GlStateSystem,\n  GlStencilSystem,\n  GlColorMaskSystem\n];\nconst DefaultWebGLPipes = [...SharedRenderPipes];\nconst DefaultWebGLAdapters = [GlBatchAdaptor, GlMeshAdaptor, GlGraphicsAdaptor];\nconst systems = [];\nconst renderPipes = [];\nconst renderPipeAdaptors = [];\nextensions.handleByNamedList(ExtensionType.WebGLSystem, systems);\nextensions.handleByNamedList(ExtensionType.WebGLPipes, renderPipes);\nextensions.handleByNamedList(ExtensionType.WebGLPipesAdaptor, renderPipeAdaptors);\nextensions.add(...DefaultWebGLSystems, ...DefaultWebGLPipes, ...DefaultWebGLAdapters);\nclass WebGLRenderer extends AbstractRenderer {\n  constructor() {\n    const systemConfig = {\n      name: \"webgl\",\n      type: RendererType.WEBGL,\n      systems,\n      renderPipes,\n      renderPipeAdaptors\n    };\n    super(systemConfig);\n  }\n}\n\nexport { WebGLRenderer };\n//# sourceMappingURL=WebGLRenderer.mjs.map\n"],"names":["GlBatchAdaptor","constructor","this","_tempState","State","for2d","_didUploadHash","init","batcherPipe","renderer","runners","contextChange","add","start","batchPipe","geometry","shader","didUpload","uid","bind","updateUniformGroup","globalUniforms","uniformGroup","glProgram","execute","batch","blendMode","state","set","textures","i","count","texture","draw","topology","size","extension","type","ExtensionType","WebGLPipesAdaptor","name","BUFFER_TYPE","BUFFER_TYPE2","GlBuffer","buffer","_lastBindBaseLocation","_lastBindCallId","updateID","byteLength","GlBufferSystem","_gpuBuffers","Object","create","_boundBufferBases","_minBaseLocation","_nextBindBaseIndex","_bindCallId","_renderer","renderableGC","addManagedHash","destroy","_gl","gl","_maxBindings","limits","maxUniformBindings","getGlBuffer","createGLBuffer","glBuffer","bindBuffer","bindBufferBase","index","UNIFORM_BUFFER","nextBindBase","hasTransformFeedback","freeLocationForBufferBase","freeIndex","getLastBindBaseLocation","loop","nextIndex","curBuf","bindBufferRange","offset","updateBuffer","_updateID","data","drawType","descriptor","usage","BufferUsage","STATIC","STATIC_DRAW","DYNAMIC_DRAW","bufferSubData","_updateSize","BYTES_PER_ELEMENT","bufferData","destroyAll","id","deleteBuffer","onBufferDestroy","contextLost","ARRAY_BUFFER","INDEX","ELEMENT_ARRAY_BUFFER","UNIFORM","createBuffer","on","resetState","WebGLSystem","_GlContextSystem","supports","uint32Indices","uniformBufferObject","vertexArrayObject","srgbTextures","nonPowOf2wrapping","msaa","nonPowOf2mipmaps","extensions","handleContextLost","handleContextRestored","isLost","isContextLost","options","defaultOptions","multiView","context","warn","canvas","DOMAdapter","get","createCanvas","width","height","view","initFromContext","alpha","background","premultipliedAlpha","antialias","backBuffer","useBackBuffer","createContext","preferWebGLVersion","stencil","preserveDrawingBuffer","powerPreference","ensureCanvasSize","targetCanvas","Math","max","webGLVersion","getWebGLRenderingContext","getExtensions","validateContext","emit","element","addEventListener","getContext","Error","common","anisotropicFiltering","getExtension","floatTextureLinear","s3tc","s3tc_sRGB","etc","etc1","pvrtc","atc","astc","bptc","rgtc","loseContext","drawBuffers","depthTexture","uint32ElementIndex","floatTexture","textureHalfFloat","textureHalfFloatLinear","vertexAttribDivisorANGLE","srgb","colorBufferFloat","provokeExt","provokingVertexWEBGL","FIRST_VERTEX_CONVENTION_WEBGL","event","preventDefault","_contextLossForced","setTimeout","restoreContext","removeEventListener","useProgram","forceContextLoss","attributes","getContextAttributes","isWebGl2","GlContextSystem","GL_FORMATS","GL_FORMATS2","GL_TARGETS","GL_TARGETS2","GL_TYPES","GL_TYPES2","infoMap","uint8x2","UNSIGNED_BYTE","uint8x4","sint8x2","BYTE","sint8x4","unorm8x2","unorm8x4","snorm8x2","snorm8x4","uint16x2","UNSIGNED_SHORT","uint16x4","sint16x2","SHORT","sint16x4","unorm16x2","unorm16x4","snorm16x2","snorm16x4","float16x2","HALF_FLOAT","float16x4","float32","FLOAT","float32x2","float32x3","float32x4","uint32","UNSIGNED_INT","uint32x2","uint32x3","uint32x4","sint32","INT","sint32x2","sint32x3","sint32x4","getGlTypeFromFormat","format","topologyToGlMap","GlGeometrySystem","_geometryVaoHash","_activeGeometry","_activeVao","hasVao","hasInstance","nativeVaoExtension","createVertexArray","createVertexArrayOES","bindVertexArray","vao","bindVertexArrayOES","deleteVertexArray","deleteVertexArrayOES","nativeInstancedExtension","drawArraysInstanced","a","b","c","d","drawArraysInstancedANGLE","drawElementsInstanced","e","drawElementsInstancedANGLE","vertexAttribDivisor","program","getVao","updateBuffers","unbind","bufferSystem","buffers","length","checkCompatibility","geometryAttributes","shaderAttributes","_attributeData","j","getSignature","attribs","strings","push","location","join","_key","initGeometryVao","_incRefCount","_getProgramData","signature","onGeometryDestroy","vaoObjectHash","ensureAttributes","activateVao","indexBuffer","lastBuffer","attribute","programAttrib","enableVertexAttribArray","attributeInfo","getAttributeInfoFromFormat","substring","vertexAttribIPointer","stride","vertexAttribPointer","normalised","instance","divisor","instanceCount","glTopology","byteSize","glType","drawElements","getSize","drawArrays","bigTriangleGeometry","Geometry","aPosition","_GlBackBufferSystem","_useBackBufferThisRender","_antialias","_state","bigTriangleProgram","GlProgram","vertex","fragment","_bigTriangleShader","Shader","resources","uTexture","Texture","WHITE","source","renderStart","renderTarget","getRenderTarget","target","isRoot","renderTarget2","_targetTexture","colorTexture","_getBackBufferTexture","renderEnd","_presentBackBuffer","finishRenderPass","_backBufferTexture","encoder","targetSourceTexture","TextureSource","resolution","_resolution","resize","priority","GlBackBufferSystem","GlColorMaskSystem","_colorMaskCache","setMask","colorMask","GlEncoderSystem","commandFinished","Promise","resolve","setGeometry","skipSync","_activeProgram","GlLimitsSystem","maxTextures","getParameter","MAX_TEXTURE_IMAGE_UNITS","maxBatchableTextures","checkMaxIfStatementsInShader","MAX_UNIFORM_BUFFER_BINDINGS","GlRenderTarget","msaaRenderBuffer","GlStencilSystem","_stencilCache","enabled","stencilReference","stencilMode","STENCIL_MODES","NONE","_renderTargetStencilState","onRenderTargetChange","_comparisonFuncMapping","always","ALWAYS","never","NEVER","equal","EQUAL","NOTEQUAL","less","LESS","LEQUAL","greater","GREATER","GEQUAL","_stencilOpsMapping","keep","KEEP","zero","ZERO","replace","REPLACE","invert","INVERT","INCR","DECR","INCR_WRAP","DECR_WRAP","_activeRenderTarget","stencilState","DISABLED","setStencilMode","mode","GpuStencilModesToPixi","enable","STENCIL_TEST","stencilFunc","stencilBack","compare","stencilOp","passOp","disable","WGSL_TO_STD40_SIZE","f32","i32","createUboElementsSTD40","uniformData","uboElements","map","uboElement","boundary","curOffset","ceil","generateArraySyncSTD40","offsetToAdd","rowSize","elementSize","value","remainder","indexOf","createUboSyncFunctionSTD40","createUboSyncFunction","uboSyncFunctionsSTD40","GlUboSystem","UboSystem","super","createUboElements","generateUboSync","GlRenderTargetAdaptor","_clearColorCache","_viewPortCache","Rectangle","renderTargetSystem","_renderTargetSystem","copyToTexture","sourceRenderSurfaceTexture","destinationTexture","originSrc","originDest","glRenderTarget","getGpuRenderTarget","bindFramebuffer","FRAMEBUFFER","resolveTargetFramebuffer","copyTexSubImage2D","TEXTURE_2D","x","y","startRenderPass","clear","clearColor","viewport","gpuRenderTarget","viewPortY","pixelHeight","colorTextures","forEach","framebuffer","viewPortCache","depthStencilRenderBuffer","depth","_initStencil","READ_FRAMEBUFFER","blitFramebuffer","COLOR_BUFFER_BIT","NEAREST","initGpuRenderTarget","CanvasSource","resource","_initColor","destroyGpuRenderTarget","deleteFramebuffer","deleteRenderbuffer","renderBuffer","_renderTarget","CLEAR","ALL","COLOR","defaultClearColor","clearColorCache","clearColorArray","resizeGpuRenderTarget","_resizeColor","_resizeStencil","createFramebuffer","pixelWidth","bindSource","glTexture","getGlSource","framebufferTexture2D","COLOR_ATTACHMENT0","viewFramebuffer","_","createRenderbuffer","source2","glInternalFormat","internalFormat","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisample","framebufferRenderbuffer","DEPTH_STENCIL_ATTACHMENT","DEPTH24_STENCIL8","renderbufferStorage","DEPTH_STENCIL","prerender","test","postrender","contextCanvas","canvasSource","context2D","drawImage","GlRenderTargetSystem","RenderTargetSystem","adaptor","GlProgramData","uniformGroups","uniformDirtyGroups","uniformBlockBindings","compileShader","src","createShader","shaderSource","booleanArray","array","Array","defaultValue","Float32Array","Int32Array","Uint32Array","GL_TABLE","GL_TO_GLSL_TYPES","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT_VEC2","INT_VEC3","INT_VEC4","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_2D","SAMPLER_CUBE","INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_CUBE","SAMPLER_2D_ARRAY","INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D_ARRAY","GLSL_TO_VERTEX_TYPES","float","vec2","vec3","vec4","int","ivec2","ivec3","ivec4","uint","uvec2","uvec3","uvec4","bool","bvec2","bvec3","bvec4","mapType","typeNames","keys","tn","mapGlToVertexFormat","typeValue","logPrettyShaderError","shaderSrc","getShaderSource","split","line","splitShader","getShaderInfoLog","dedupe","lineNumbers","parseFloat","filter","n","logArgs","number","fragmentSourceToLog","generateProgram","glVertShader","VERTEX_SHADER","glFragShader","FRAGMENT_SHADER","webGLProgram","createProgram","attachShader","transformFeedbackVaryings","names","bufferMode","SEPARATE_ATTRIBS","INTERLEAVED_ATTRIBS","linkProgram","getProgramParameter","LINK_STATUS","vertexShader","fragmentShader","getShaderParameter","COMPILE_STATUS","getProgramInfoLog","logProgramError","sortAttributes","totalAttributes","ACTIVE_ATTRIBUTES","attribData","getActiveAttrib","startsWith","sort","bindAttribLocation","getAttribLocation","extractAttributesFromGlProgram","_uniformData","uniforms","totalUniforms","ACTIVE_UNIFORMS","getActiveUniform","isArray","match","getUniformData","_uniformBlockData","ACTIVE_UNIFORM_BLOCKS","uniformBlocks","totalUniformsBlocks","getActiveUniformBlockName","uniformBlockIndex","getUniformBlockIndex","getActiveUniformBlockParameter","UNIFORM_BLOCK_DATA_SIZE","getUboData","deleteShader","getUniformLocation","defaultSyncData","textureCount","blockIndex","GlShaderSystem","_programDataHash","_shaderSyncFunctions","_setProgram","syncFunction","_generateShaderSync","bindUniformBlock","programData","isBufferResource","_bufferResource","ubo","boundLocation","uniformBlockBinding","_createProgramData","key","shaderSystem","funcFragments","headerFragments","addedTextreSystem","groups","group","UniformGroup","resName","_uniformBindMap","Number","BufferResource","uniformName","uniform1i","functionSource","Function","generateShaderSyncCode","UNIFORM_TO_SINGLE_SETTERS","u32","UNIFORM_TO_ARRAY_SETTERS","GlUniformGroupSystem","_cache","_uniformGroupSyncHash","syncData","isStatic","_dirtyId","_getUniformSyncFunction","syncFunc","_signature","_createUniformSyncFunction","uniformGroupSyncHash","_getSignature","_generateUniformsSync","uniform","uniformStructures","parsed","uniformParsers","parser","template","generateUniformsSync","preFix","_GlStateSystem","_invertFrontFace","stateId","polygonOffset","_blendEq","setBlend","setOffset","setCullFace","setDepthTest","setFrontFace","setDepthMask","checks","defaultState","_cullFace","_frontFace","_frontFaceDirty","blendModesMap","blendMap","normal","ONE","ONE_MINUS_SRC_ALPHA","multiply","DST_COLOR","screen","ONE_MINUS_SRC_COLOR","none","SRC_ALPHA","erase","ext","min","MIN_EXT","MAX_EXT","MIN","MAX","mapWebGLBlendModesToPixi","diff","call","forceState","_updateCheck","_checkBlendMode","BLEND","_checkPolygonOffset","POLYGON_OFFSET_FILL","DEPTH_TEST","depthMask","CULL_FACE","faceMode","_glFrontFace","frontFace","setBlendMode","blendFunc","blendFuncSeparate","blendEquationSeparate","FUNC_ADD","setPolygonOffset","scale","CCW","pixelStorei","UNPACK_FLIP_Y_WEBGL","func","splice","system","GlStateSystem","GlTexture","RGBA","samplerType","glUploadBufferImageResource","upload","texSubImage2D","texImage2D","compressedFormatMap","glUploadCompressedTextureResource","UNPACK_ALIGNMENT","mipWidth","mipHeight","compressed","levelBuffer","compressedTexImage2D","glUploadImageResource","glWidth","glHeight","textureWidth","textureHeight","resourceWidth","resourceHeight","glUploadVideoResource","isValid","scaleModeToGlFilter","linear","nearest","mipmapScaleModeToGlFilter","wrapModeToGlAddress","repeat","compareModeToGlCompare","applyStyleParams","style","mipmaps","anisotropicExt","glFunctionName","firstParam","forceClamp","firstCreation","castParam","addressModeU","addressModeV","addressModeW","wrapModeS","wrapModeT","wrapModeR","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","magFilter","TEXTURE_MAG_FILTER","mipmapFilter","glFilterMode","minFilter","TEXTURE_MIN_FILTER","maxAnisotropy","level","MAX_TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_COMPARE_FUNC","GlTextureSystem","managedTextures","_glTextures","_glSamplers","_boundTextures","_activeTextureLocation","_boundSamplers","_uploads","image","video","_premultiplyAlpha","_useSeparateSamplers","_mapFormatToInternalFormat","bgra8unorm","SRGB8_ALPHA8_EXT","SRGB8_ALPHA8","RGBA8","r8unorm","R8","r8snorm","R8_SNORM","r8uint","R8UI","r8sint","R8I","r16uint","R16UI","r16sint","R16I","r16float","R16F","rg8unorm","RG8","rg8snorm","RG8_SNORM","rg8uint","RG8UI","rg8sint","RG8I","r32uint","R32UI","r32sint","R32I","r32float","R32F","rg16uint","RG16UI","rg16sint","RG16I","rg16float","RG16F","rgba8unorm","rgba8snorm","RGBA8_SNORM","rgba8uint","RGBA8UI","rgba8sint","RGBA8I","rgb9e5ufloat","RGB9_E5","rgb10a2unorm","RGB10_A2","rg11b10ufloat","R11F_G11F_B10F","rg32uint","RG32UI","rg32sint","RG32I","rg32float","RG32F","rgba16uint","RGBA16UI","rgba16sint","RGBA16I","rgba16float","RGBA16F","rgba32uint","RGBA32UI","rgba32sint","RGBA32I","rgba32float","RGBA32F","stencil8","STENCIL_INDEX8","depth16unorm","DEPTH_COMPONENT16","depth24plus","DEPTH_COMPONENT24","depth32float","DEPTH_COMPONENT32F","DEPTH32F_STENCIL8","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_R11_EAC","COMPRESSED_SIGNED_RG11_EAC","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","mapFormatToGlInternalFormat","_mapFormatToType","UNSIGNED_INT_5_9_9_9_REV","UNSIGNED_INT_2_10_10_10_REV","UNSIGNED_INT_10F_11F_11F_REV","UNSIGNED_INT_24_8","FLOAT_32_UNSIGNED_INT_24_8_REV","mapFormatToGlType","_mapFormatToFormat","RED","RG","RGB","DEPTH_COMPONENT","mapFormatToGlFormat","EMPTY","initSource","_bindSampler","_touched","textureGC","_activateLocation","bindTexture","bindSampler","sampler","_getGlSampler","boundTextures","activeTexture","TEXTURE0","_initSource","createTexture","autoGenerateMipmaps","isPowerOfTwo","biggestDimension","mipLevelCount","floor","log2","includes","onSourceUpdate","onStyleChange","onSourceDestroy","onSourceUnload","onUpdateMipmaps","updateStyle","deleteTexture","alphaMode","UNPACK_PREMULTIPLY_ALPHA_WEBGL","uploadMethodId","generateMipmap","off","_initSampler","glSampler","createSampler","_resourceId","generateCanvas","pixels","getPixels","ctx","imageData","createImageData","putImageData","frame","round","Uint8Array","glRenterTarget","readPixels","Uint8ClampedArray","slice","fill","GlGraphicsAdaptor","uColor","uTransformMatrix","Matrix","uRound","compileHighShaderGlProgram","bits","colorBitGl","generateTextureBatchBitGl","localUniformBitGl","roundPixelsBitGl","localUniforms","batchSamplers","getBatchSamplersUniformGroup","graphicsPipe","renderable","customShader","contextSystem","graphicsContext","batcher","instructions","getContextRenderData","bindGroup","batches","instructionSize","GlMeshAdaptor","textureBitGl","_shader","textureUniforms","uTextureMatrix","meshPipe","mesh","uSampler","textureMatrix","mapCoord","localUniformsBindGroup","_geometry","DefaultWebGLSystems","SharedSystems","DefaultWebGLPipes","SharedRenderPipes","DefaultWebGLAdapters","systems","renderPipes","renderPipeAdaptors","handleByNamedList","WebGLPipes","WebGLRenderer","AbstractRenderer","RendererType","WEBGL"],"mappings":"wcAIA,MAAMA,EACJ,WAAAC,GACEC,KAAKC,WAAaC,EAAMC,QAOxBH,KAAKI,eAAiB,CAAA,CACxB,CACA,IAAAC,CAAKC,GACHA,EAAYC,SAASC,QAAQC,cAAcC,IAAIV,KACjD,CACA,aAAAS,GACET,KAAKI,eAAiB,CAAA,CACxB,CACA,KAAAO,CAAMC,EAAWC,EAAUC,GACzB,MAAMP,EAAWK,EAAUL,SACrBQ,EAAYf,KAAKI,eAAeU,EAAOE,KAC7CT,EAASO,OAAOG,KAAKH,EAAQC,GACxBA,IACHf,KAAKI,eAAeU,EAAOE,MAAO,GAEpCT,EAASO,OAAOI,mBAAmBX,EAASY,eAAeC,cAC3Db,EAASM,SAASI,KAAKJ,EAAUC,EAAOO,UAC1C,CACA,OAAAC,CAAQV,EAAWW,GACjB,MAAMhB,EAAWK,EAAUL,SAC3BP,KAAKC,WAAWuB,UAAYD,EAAMC,UAClCjB,EAASkB,MAAMC,IAAI1B,KAAKC,YACxB,MAAM0B,EAAWJ,EAAMI,SAASA,SAChC,IAAA,IAASC,EAAI,EAAGA,EAAIL,EAAMI,SAASE,MAAOD,IACxCrB,EAASuB,QAAQb,KAAKU,EAASC,GAAIA,GAErCrB,EAASM,SAASkB,KAAKR,EAAMS,SAAUT,EAAMU,KAAMV,EAAMZ,MAC3D,EAGFb,EAAeoC,UAAY,CACzBC,KAAM,CACJC,EAAcC,mBAEhBC,KAAM,SC9CR,IAAIC,GAAgCC,IAClCA,EAAaA,EAAmC,qBAAI,OAAS,uBAC7DA,EAAaA,EAA2B,aAAI,OAAS,eACrDA,EAAaA,EAA6B,eAAI,OAAS,iBAChDA,IACND,GAAe,CAAA,GCLlB,MAAME,EACJ,WAAA1C,CAAY2C,EAAQP,GAClBnC,KAAK2C,uBAAwB,EAC7B3C,KAAK4C,iBAAkB,EACvB5C,KAAK0C,OAASA,GAAU,KACxB1C,KAAK6C,UAAW,EAChB7C,KAAK8C,YAAa,EAClB9C,KAAKmC,KAAOA,CACd,ECHF,MAAMY,EAIJ,WAAAhD,CAAYQ,GACVP,KAAKgD,YAA8BC,OAAOC,OAAO,MAEjDlD,KAAKmD,kBAAoCF,OAAOC,OAAO,MACvDlD,KAAKoD,iBAAmB,EACxBpD,KAAKqD,mBAAqBrD,KAAKoD,iBAC/BpD,KAAKsD,YAAc,EACnBtD,KAAKuD,UAAYhD,EACjBP,KAAKuD,UAAUC,aAAaC,eAAezD,KAAM,cACnD,CAEA,OAAA0D,GACE1D,KAAKuD,UAAY,KACjBvD,KAAK2D,IAAM,KACX3D,KAAKgD,YAAc,KACnBhD,KAAKmD,kBAAoB,IAC3B,CAEA,aAAA1C,GACET,KAAK2D,IAAM3D,KAAKuD,UAAUK,GAC1B5D,KAAKgD,YAA8BC,OAAOC,OAAO,MACjDlD,KAAK6D,aAAe7D,KAAKuD,UAAUO,OAAOC,kBAC5C,CACA,WAAAC,CAAYtB,GACV,OAAO1C,KAAKgD,YAAYN,EAAO1B,MAAQhB,KAAKiE,eAAevB,EAC7D,CAKA,IAAAzB,CAAKyB,GACH,MAAQiB,IAAKC,GAAO5D,KACdkE,EAAWlE,KAAKgE,YAAYtB,GAClCkB,EAAGO,WAAWD,EAAS/B,KAAM+B,EAASxB,OACxC,CAQA,cAAA0B,CAAeF,EAAUG,GACvB,MAAQV,IAAKC,GAAO5D,KAChBA,KAAKmD,kBAAkBkB,KAAWH,IACpClE,KAAKmD,kBAAkBkB,GAASH,EAChCA,EAASvB,sBAAwB0B,EACjCT,EAAGQ,eAAeR,EAAGU,eAAgBD,EAAOH,EAASxB,QAEzD,CACA,YAAA6B,CAAaC,GACXxE,KAAKsD,cACLtD,KAAKoD,iBAAmB,EACpBoB,IACFxE,KAAKmD,kBAAkB,GAAK,KAC5BnD,KAAKoD,iBAAmB,EACpBpD,KAAKqD,mBAAqB,IAC5BrD,KAAKqD,mBAAqB,GAGhC,CACA,yBAAAoB,CAA0BP,GACxB,IAAIQ,EAAY1E,KAAK2E,wBAAwBT,GAC7C,GAAIQ,GAAa1E,KAAKoD,iBAEpB,OADAc,EAAStB,gBAAkB5C,KAAKsD,YACzBoB,EAET,IAAIE,EAAO,EACPC,EAAY7E,KAAKqD,mBACrB,KAAOuB,EAAO,GAAG,CACXC,GAAa7E,KAAK6D,eACpBgB,EAAY7E,KAAKoD,iBACjBwB,KAEF,MAAME,EAAS9E,KAAKmD,kBAAkB0B,GACtC,IAAIC,GAAUA,EAAOlC,kBAAoB5C,KAAKsD,YAI9C,MAHEuB,GAIJ,CAGA,OAFAH,EAAYG,EACZ7E,KAAKqD,mBAAqBwB,EAAY,EAClCD,GAAQ,GACH,GAETV,EAAStB,gBAAkB5C,KAAKsD,YAChCtD,KAAKmD,kBAAkBuB,GAAa,KAC7BA,EACT,CACA,uBAAAC,CAAwBT,GACtB,MAAMG,EAAQH,EAASvB,sBACvB,OAAI3C,KAAKmD,kBAAkBkB,KAAWH,EAC7BG,GAEF,CACT,CASA,eAAAU,CAAgBb,EAAUG,EAAOW,EAAQ/C,GACvC,MAAQ0B,IAAKC,GAAO5D,KACpBgF,IAAWA,EAAS,GACpBX,IAAUA,EAAQ,GAClBrE,KAAKmD,kBAAkBkB,GAAS,KAChCT,EAAGmB,gBAAgBnB,EAAGU,eAAgBD,GAAS,EAAGH,EAASxB,OAAiB,IAATsC,EAAc/C,GAAQ,IAC3F,CAKA,YAAAgD,CAAavC,GACX,MAAQiB,IAAKC,GAAO5D,KACdkE,EAAWlE,KAAKgE,YAAYtB,GAClC,GAAIA,EAAOwC,YAAchB,EAASrB,SAChC,OAAOqB,EAETA,EAASrB,SAAWH,EAAOwC,UAC3BtB,EAAGO,WAAWD,EAAS/B,KAAM+B,EAASxB,QACtC,MAAMyC,EAAOzC,EAAOyC,KACdC,EAAW1C,EAAO2C,WAAWC,MAAQC,EAAYC,OAAS5B,EAAG6B,YAAc7B,EAAG8B,aAYpF,OAXIP,EACEjB,EAASpB,YAAcqC,EAAKrC,WAC9Bc,EAAG+B,cAAczB,EAAS/B,KAAM,EAAGgD,EAAM,EAAGzC,EAAOkD,YAAcT,EAAKU,oBAEtE3B,EAASpB,WAAaqC,EAAKrC,WAC3Bc,EAAGkC,WAAW5B,EAAS/B,KAAMgD,EAAMC,KAGrClB,EAASpB,WAAaJ,EAAO2C,WAAWpD,KACxC2B,EAAGkC,WAAW5B,EAAS/B,KAAM+B,EAASpB,WAAYsC,IAE7ClB,CACT,CAEA,UAAA6B,GACE,MAAMnC,EAAK5D,KAAK2D,IAChB,IAAA,MAAWqC,KAAMhG,KAAKgD,YACpBY,EAAGqC,aAAajG,KAAKgD,YAAYgD,GAAItD,QAEvC1C,KAAKgD,YAA8BC,OAAOC,OAAO,KACnD,CAMA,eAAAgD,CAAgBxD,EAAQyD,GACtB,MAAMjC,EAAWlE,KAAKgD,YAAYN,EAAO1B,KACnC4C,EAAK5D,KAAK2D,IACXwC,GACHvC,EAAGqC,aAAa/B,EAASxB,QAE3B1C,KAAKgD,YAAYN,EAAO1B,KAAO,IACjC,CAMA,cAAAiD,CAAevB,GACb,MAAQiB,IAAKC,GAAO5D,KACpB,IAAImC,EAAOI,EAAY6D,aACnB1D,EAAO2C,WAAWC,MAAQC,EAAYc,MACxClE,EAAOI,EAAY+D,qBACV5D,EAAO2C,WAAWC,MAAQC,EAAYgB,UAC/CpE,EAAOI,EAAY+B,gBAErB,MAAMJ,EAAW,IAAIzB,EAASmB,EAAG4C,eAAgBrE,GAGjD,OAFAnC,KAAKgD,YAAYN,EAAO1B,KAAOkD,EAC/BxB,EAAO+D,GAAG,UAAWzG,KAAKkG,gBAAiBlG,MACpCkE,CACT,CACA,UAAAwC,GACE1G,KAAKmD,kBAAoCF,OAAOC,OAAO,KACzD,EAGFH,EAAeb,UAAY,CACzBC,KAAM,CACJC,EAAcuE,aAEhBrE,KAAM,UChMR,MAAMsE,EAAmB,MAAMA,EAE7B,WAAA7G,CAAYQ,GAMVP,KAAK6G,SAAW,CAEdC,eAAe,EAEfC,qBAAqB,EAErBC,mBAAmB,EAEnBC,cAAc,EAEdC,mBAAmB,EAEnBC,MAAM,EAENC,kBAAkB,GAEpBpH,KAAKuD,UAAYhD,EACjBP,KAAKqH,WAA6BpE,OAAOC,OAAO,MAChDlD,KAAKsH,kBAAoBtH,KAAKsH,kBAAkBrG,KAAKjB,MACrDA,KAAKuH,sBAAwBvH,KAAKuH,sBAAsBtG,KAAKjB,KAC/D,CAKA,UAAIwH,GACF,OAAQxH,KAAK4D,IAAM5D,KAAK4D,GAAG6D,eAC7B,CAKA,aAAAhH,CAAcmD,GACZ5D,KAAK4D,GAAKA,EACV5D,KAAKuD,UAAUK,GAAKA,CACtB,CACA,IAAAvD,CAAKqH,GACHA,EAAU,IAAKd,EAAiBe,kBAAmBD,GACnD,IAAIE,EAAY5H,KAAK4H,UAAYF,EAAQE,UAUzC,GATIF,EAAQG,SAAWD,IACrBE,EAAK,iHACLF,GAAY,GAGZ5H,KAAK+H,OADHH,EACYI,EAAWC,MAAMC,aAAalI,KAAKuD,UAAUwE,OAAOI,MAAOnI,KAAKuD,UAAUwE,OAAOK,QAEjFpI,KAAKuD,UAAU8E,KAAKN,OAEhCL,EAAQG,QACV7H,KAAKsI,gBAAgBZ,EAAQG,aACxB,CACL,MAAMU,EAAQvI,KAAKuD,UAAUiF,WAAWD,MAAQ,EAC1CE,EAAqBf,EAAQe,qBAAsB,EACnDC,EAAYhB,EAAQgB,YAAc1I,KAAKuD,UAAUoF,WAAWC,cAClE5I,KAAK6I,cAAcnB,EAAQoB,mBAAoB,CAC7CP,QACAE,qBACAC,YACAK,SAAS,EACTC,sBAAuBtB,EAAQsB,sBAC/BC,gBAAiBvB,EAAQuB,iBAAmB,WAEhD,CACF,CACA,gBAAAC,CAAiBC,GACf,IAAKnJ,KAAK4H,UAIR,YAHIuB,IAAiBnJ,KAAK+H,QACxBD,EAAK,mEAIT,MAAMC,OAAEA,GAAW/H,MACf+H,EAAOI,MAAQgB,EAAahB,OAASJ,EAAOK,OAASe,EAAaf,UACpEL,EAAOI,MAAQiB,KAAKC,IAAIF,EAAahB,MAAOgB,EAAahB,OACzDJ,EAAOK,OAASgB,KAAKC,IAAIF,EAAaf,OAAQe,EAAaf,QAE/D,CAMA,eAAAE,CAAgB1E,GACd5D,KAAK4D,GAAKA,EACV5D,KAAKsJ,aAAe1F,aAAcoE,EAAWC,MAAMsB,2BAA6B,EAAI,EACpFvJ,KAAKwJ,gBACLxJ,KAAKyJ,gBAAgB7F,GACrB5D,KAAKuD,UAAU/C,QAAQC,cAAciJ,KAAK9F,GAC1C,MAAM+F,EAAU3J,KAAKuD,UAAU8E,KAAKN,OACpC4B,EAAQC,iBAAiB,mBAAoB5J,KAAKsH,mBAAmB,GACrEqC,EAAQC,iBAAiB,uBAAwB5J,KAAKuH,uBAAuB,EAC/E,CAQA,aAAAsB,CAAcC,EAAoBpB,GAChC,IAAI9D,EACJ,MAAMmE,EAAS/H,KAAK+H,OAIpB,GAH2B,IAAvBe,IACFlF,EAAKmE,EAAO8B,WAAW,SAAUnC,KAE9B9D,IACHA,EAAKmE,EAAO8B,WAAW,QAASnC,IAC3B9D,GACH,MAAM,IAAIkG,MAAM,sEAGpB9J,KAAK4D,GAAKA,EACV5D,KAAKsI,gBAAgBtI,KAAK4D,GAC5B,CAEA,aAAA4F,GACE,MAAM5F,GAAEA,GAAO5D,KACT+J,EAAS,CACbC,qBAAsBpG,EAAGqG,aAAa,kCACtCC,mBAAoBtG,EAAGqG,aAAa,4BACpCE,KAAMvG,EAAGqG,aAAa,iCACtBG,UAAWxG,EAAGqG,aAAa,sCAE3BI,IAAKzG,EAAGqG,aAAa,gCACrBK,KAAM1G,EAAGqG,aAAa,iCACtBM,MAAO3G,EAAGqG,aAAa,mCAAqCrG,EAAGqG,aAAa,yCAC5EO,IAAK5G,EAAGqG,aAAa,gCACrBQ,KAAM7G,EAAGqG,aAAa,iCACtBS,KAAM9G,EAAGqG,aAAa,gCACtBU,KAAM/G,EAAGqG,aAAa,gCACtBW,YAAahH,EAAGqG,aAAa,uBAE/B,GAA0B,IAAtBjK,KAAKsJ,aACPtJ,KAAKqH,WAAa,IACb0C,EACHc,YAAajH,EAAGqG,aAAa,sBAC7Ba,aAAclH,EAAGqG,aAAa,uBAC9BjD,kBAAmBpD,EAAGqG,aAAa,4BAA8BrG,EAAGqG,aAAa,gCAAkCrG,EAAGqG,aAAa,kCACnIc,mBAAoBnH,EAAGqG,aAAa,0BAEpCe,aAAcpH,EAAGqG,aAAa,qBAC9BC,mBAAoBtG,EAAGqG,aAAa,4BACpCgB,iBAAkBrH,EAAGqG,aAAa,0BAClCiB,uBAAwBtH,EAAGqG,aAAa,iCACxCkB,yBAA0BvH,EAAGqG,aAAa,0BAC1CmB,KAAMxH,EAAGqG,aAAa,iBAEnB,CACLjK,KAAKqH,WAAa,IACb0C,EACHsB,iBAAkBzH,EAAGqG,aAAa,2BAEpC,MAAMqB,EAAa1H,EAAGqG,aAAa,0BAC/BqB,GACFA,EAAWC,qBAAqBD,EAAWE,8BAE/C,CACF,CAKA,iBAAAlE,CAAkBmE,GAChBA,EAAMC,iBACF1L,KAAK2L,qBACP3L,KAAK2L,oBAAqB,EAC1BC,WAAW,KACL5L,KAAK4D,GAAG6D,iBACVzH,KAAKqH,WAAWuD,aAAaiB,kBAE9B,GAEP,CAEA,qBAAAtE,GACEvH,KAAKwJ,gBACLxJ,KAAKuD,UAAU/C,QAAQC,cAAciJ,KAAK1J,KAAK4D,GACjD,CACA,OAAAF,GACE,MAAMiG,EAAU3J,KAAKuD,UAAU8E,KAAKN,OACpC/H,KAAKuD,UAAY,KACjBoG,EAAQmC,oBAAoB,mBAAoB9L,KAAKsH,mBACrDqC,EAAQmC,oBAAoB,uBAAwB9L,KAAKuH,uBACzDvH,KAAK4D,GAAGmI,WAAW,MACnB/L,KAAKqH,WAAWuD,aAAaA,aAC/B,CAQA,gBAAAoB,GACEhM,KAAKqH,WAAWuD,aAAaA,cAC7B5K,KAAK2L,oBAAqB,CAC5B,CAKA,eAAAlC,CAAgB7F,GACd,MAAMqI,EAAarI,EAAGsI,uBAClBD,IAAeA,EAAWlD,SAC5BjB,EAAK,yFAEP,MAAMjB,EAAW7G,KAAK6G,SAChBsF,EAAiC,IAAtBnM,KAAKsJ,aAChBjC,EAAarH,KAAKqH,WACxBR,EAASC,cAAgBqF,KAAc9E,EAAW0D,mBAClDlE,EAASE,oBAAsBoF,EAC/BtF,EAASG,kBAAoBmF,KAAc9E,EAAWL,kBACtDH,EAASI,aAAekF,KAAc9E,EAAW+D,KACjDvE,EAASK,kBAAoBiF,EAC7BtF,EAASO,iBAAmB+E,EAC5BtF,EAASM,KAAOgF,EACXtF,EAASC,eACZgB,EAAK,iGAET,GAGFlB,EAAiB1E,UAAY,CAC3BC,KAAM,CACJC,EAAcuE,aAEhBrE,KAAM,WAGRsE,EAAiBe,eAAiB,CAKhCE,QAAS,KAKTY,oBAAoB,EAKpBO,uBAAuB,EAKvBC,qBAAiB,EAKjBH,mBAAoB,EAKpBlB,WAAW,GAEb,IAAIwE,EAAkBxF,ECjRtB,IAAIyF,GAA+BC,IACjCA,EAAYA,EAAkB,KAAI,MAAQ,OAC1CA,EAAYA,EAAiB,IAAI,MAAQ,MACzCA,EAAYA,EAAgB,GAAI,OAAS,KACzCA,EAAYA,EAAiB,IAAI,MAAQ,MACzCA,EAAYA,EAA0B,aAAI,OAAS,eACnDA,EAAYA,EAAyB,YAAI,OAAS,cAClDA,EAAYA,EAAwB,WAAI,OAAS,aACjDA,EAAYA,EAAyB,YAAI,OAAS,cAClDA,EAAYA,EAAmB,MAAI,MAAQ,QAC3CA,EAAYA,EAAuB,UAAI,MAAQ,YAC/CA,EAAYA,EAA6B,gBAAI,MAAQ,kBACrDA,EAAYA,EAA6B,gBAAI,MAAQ,kBACrDA,EAAYA,EAA2B,cAAI,OAAS,gBAC7CA,IACND,GAAc,CAAA,GACbE,GAA+BC,IACjCA,EAAYA,EAAwB,WAAI,MAAQ,aAChDA,EAAYA,EAA8B,iBAAI,OAAS,mBACvDA,EAAYA,EAA8B,iBAAI,OAAS,mBACvDA,EAAYA,EAAyC,4BAAI,OAAS,8BAClEA,EAAYA,EAAyC,4BAAI,OAAS,8BAClEA,EAAYA,EAAyC,4BAAI,OAAS,8BAClEA,EAAYA,EAAyC,4BAAI,OAAS,8BAClEA,EAAYA,EAAyC,4BAAI,OAAS,8BAClEA,EAAYA,EAAyC,4BAAI,OAAS,8BAC3DA,IACND,GAAc,CAAA,GAObE,GAA6BC,IAC/BA,EAAUA,EAAyB,cAAI,MAAQ,gBAC/CA,EAAUA,EAA0B,eAAI,MAAQ,iBAChDA,EAAUA,EAAgC,qBAAI,OAAS,uBACvDA,EAAUA,EAAkC,uBAAI,OAAS,yBACzDA,EAAUA,EAAkC,uBAAI,OAAS,yBACzDA,EAAUA,EAAwB,aAAI,MAAQ,eAC9CA,EAAUA,EAAwC,6BAAI,OAAS,+BAC/DA,EAAUA,EAAuC,4BAAI,OAAS,8BAC9DA,EAAUA,EAA6B,kBAAI,OAAS,oBACpDA,EAAUA,EAAoC,yBAAI,OAAS,2BAC3DA,EAAUA,EAAgB,KAAI,MAAQ,OACtCA,EAAUA,EAAiB,MAAI,MAAQ,QACvCA,EAAUA,EAAe,IAAI,MAAQ,MACrCA,EAAUA,EAAiB,MAAI,MAAQ,QACvCA,EAAUA,EAA0C,+BAAI,OAAS,iCACjEA,EAAUA,EAAsB,WAAI,OAAS,aACtCA,IACND,GAAY,CAAA,GClDf,MAAME,EAAU,CACdC,QAASH,EAASI,cAClBC,QAASL,EAASI,cAClBE,QAASN,EAASO,KAClBC,QAASR,EAASO,KAClBE,SAAUT,EAASI,cACnBM,SAAUV,EAASI,cACnBO,SAAUX,EAASO,KACnBK,SAAUZ,EAASO,KACnBM,SAAUb,EAASc,eACnBC,SAAUf,EAASc,eACnBE,SAAUhB,EAASiB,MACnBC,SAAUlB,EAASiB,MACnBE,UAAWnB,EAASc,eACpBM,UAAWpB,EAASc,eACpBO,UAAWrB,EAASiB,MACpBK,UAAWtB,EAASiB,MACpBM,UAAWvB,EAASwB,WACpBC,UAAWzB,EAASwB,WACpBE,QAAS1B,EAAS2B,MAClBC,UAAW5B,EAAS2B,MACpBE,UAAW7B,EAAS2B,MACpBG,UAAW9B,EAAS2B,MACpBI,OAAQ/B,EAASgC,aACjBC,SAAUjC,EAASgC,aACnBE,SAAUlC,EAASgC,aACnBG,SAAUnC,EAASgC,aACnBI,OAAQpC,EAASqC,IACjBC,SAAUtC,EAASqC,IACnBE,SAAUvC,EAASqC,IACnBG,SAAUxC,EAASqC,KAErB,SAASI,EAAoBC,GAC3B,OAAOxC,EAAQwC,IAAWxC,EAAQwB,OACpC,CC/BA,MAAMiB,EAAkB,CACtB,aAAc,EACd,YAAa,EACb,aAAc,EACd,gBAAiB,EACjB,iBAAkB,GAEpB,MAAMC,EAEJ,WAAAtP,CAAYQ,GACVP,KAAKsP,iBAAmCrM,OAAOC,OAAO,MACtDlD,KAAKuD,UAAYhD,EACjBP,KAAKuP,gBAAkB,KACvBvP,KAAKwP,WAAa,KAClBxP,KAAKyP,QAAS,EACdzP,KAAK0P,aAAc,EACnB1P,KAAKuD,UAAUC,aAAaC,eAAezD,KAAM,mBACnD,CAEA,aAAAS,GACE,MAAMmD,EAAK5D,KAAK4D,GAAK5D,KAAKuD,UAAUK,GACpC,IAAK5D,KAAKuD,UAAUsE,QAAQhB,SAASG,kBACnC,MAAM,IAAI8C,MAAM,kEAElB,MAAM6F,EAAqB3P,KAAKuD,UAAUsE,QAAQR,WAAWL,kBACzD2I,IACF/L,EAAGgM,kBAAoB,IAAMD,EAAmBE,uBAChDjM,EAAGkM,gBAAmBC,GAAQJ,EAAmBK,mBAAmBD,GACpEnM,EAAGqM,kBAAqBF,GAAQJ,EAAmBO,qBAAqBH,IAE1E,MAAMI,EAA2BnQ,KAAKuD,UAAUsE,QAAQR,WAAW8D,yBAC/DgF,IACFvM,EAAGwM,oBAAsB,CAACC,EAAGC,EAAGC,EAAGC,KACjCL,EAAyBM,yBAAyBJ,EAAGC,EAAGC,EAAGC,IAE7D5M,EAAG8M,sBAAwB,CAACL,EAAGC,EAAGC,EAAGC,EAAGG,KACtCR,EAAyBS,2BAA2BP,EAAGC,EAAGC,EAAGC,EAAGG,IAElE/M,EAAGiN,oBAAsB,CAACR,EAAGC,IAAMH,EAAyBhF,yBAAyBkF,EAAGC,IAE1FtQ,KAAKuP,gBAAkB,KACvBvP,KAAKwP,WAAa,KAClBxP,KAAKsP,iBAAmCrM,OAAOC,OAAO,KACxD,CAMA,IAAAjC,CAAKJ,EAAUiQ,GACb,MAAMlN,EAAK5D,KAAK4D,GAChB5D,KAAKuP,gBAAkB1O,EACvB,MAAMkP,EAAM/P,KAAK+Q,OAAOlQ,EAAUiQ,GAC9B9Q,KAAKwP,aAAeO,IACtB/P,KAAKwP,WAAaO,EAClBnM,EAAGkM,gBAAgBC,IAErB/P,KAAKgR,eACP,CAEA,UAAAtK,GACE1G,KAAKiR,QACP,CAEA,aAAAD,GACE,MAAMnQ,EAAWb,KAAKuP,gBAChB2B,EAAelR,KAAKuD,UAAUb,OACpC,IAAA,IAASd,EAAI,EAAGA,EAAIf,EAASsQ,QAAQC,OAAQxP,IAAK,CAChD,MAAMc,EAAS7B,EAASsQ,QAAQvP,GAChCsP,EAAajM,aAAavC,EAC5B,CACF,CAMA,kBAAA2O,CAAmBxQ,EAAUiQ,GAC3B,MAAMQ,EAAqBzQ,EAASoL,WAC9BsF,EAAmBT,EAAQU,eACjC,IAAA,MAAWC,KAAKF,EACd,IAAKD,EAAmBG,GACtB,MAAM,IAAI3H,MAAM,2DAA2D2H,eAGjF,CAOA,YAAAC,CAAa7Q,EAAUiQ,GACrB,MAAMa,EAAU9Q,EAASoL,WACnBsF,EAAmBT,EAAQU,eAC3BI,EAAU,CAAC,IAAK/Q,EAASG,KAC/B,IAAA,MAAWY,KAAK+P,EACVJ,EAAiB3P,IACnBgQ,EAAQC,KAAKjQ,EAAG2P,EAAiB3P,GAAGkQ,UAGxC,OAAOF,EAAQG,KAAK,IACtB,CACA,MAAAhB,CAAOlQ,EAAUiQ,GACf,OAAO9Q,KAAKsP,iBAAiBzO,EAASG,OAAO8P,EAAQkB,OAAShS,KAAKiS,gBAAgBpR,EAAUiQ,EAC/F,CASA,eAAAmB,CAAgBpR,EAAUiQ,EAASoB,GAAe,GAChD,MAAMtO,EAAK5D,KAAKuD,UAAUK,GACpBsN,EAAelR,KAAKuD,UAAUb,OACpC1C,KAAKuD,UAAUzC,OAAOqR,gBAAgBrB,GACtC9Q,KAAKqR,mBAAmBxQ,EAAUiQ,GAClC,MAAMsB,EAAYpS,KAAK0R,aAAa7Q,EAAUiQ,GACzC9Q,KAAKsP,iBAAiBzO,EAASG,OAClChB,KAAKsP,iBAAiBzO,EAASG,KAAuBiC,OAAOC,OAAO,MACpErC,EAAS4F,GAAG,UAAWzG,KAAKqS,kBAAmBrS,OAEjD,MAAMsS,EAAgBtS,KAAKsP,iBAAiBzO,EAASG,KACrD,IAAI+O,EAAMuC,EAAcF,GACxB,GAAIrC,EAEF,OADAuC,EAAcxB,EAAQkB,MAAQjC,EACvBA,EAETwC,EAAiB1R,EAAUiQ,EAAQU,gBACnC,MAAML,EAAUtQ,EAASsQ,QACzBpB,EAAMnM,EAAGgM,oBACThM,EAAGkM,gBAAgBC,GACnB,IAAA,IAASnO,EAAI,EAAGA,EAAIuP,EAAQC,OAAQxP,IAAK,CACvC,MAAMc,EAASyO,EAAQvP,GACvBsP,EAAajQ,KAAKyB,EACpB,CAKA,OAJA1C,KAAKwS,YAAY3R,EAAUiQ,GAC3BwB,EAAcxB,EAAQkB,MAAQjC,EAC9BuC,EAAcF,GAAarC,EAC3BnM,EAAGkM,gBAAgB,MACZC,CACT,CAMA,iBAAAsC,CAAkBxR,EAAUsF,GAC1B,MAAMmM,EAAgBtS,KAAKsP,iBAAiBzO,EAASG,KAC/C4C,EAAK5D,KAAK4D,GAChB,GAAI0O,EAAe,CACjB,GAAInM,EACF,IAAA,MAAWvE,KAAK0Q,EACVtS,KAAKwP,aAAe8C,EAAc1Q,IACpC5B,KAAKiR,SAEPrN,EAAGqM,kBAAkBqC,EAAc1Q,IAGvC5B,KAAKsP,iBAAiBzO,EAASG,KAAO,IACxC,CACF,CAKA,UAAA+E,CAAWI,GAAc,GACvB,MAAMvC,EAAK5D,KAAK4D,GAChB,IAAA,MAAWhC,KAAK5B,KAAKsP,iBAAkB,CACrC,GAAInJ,EACF,IAAA,MAAWsL,KAAKzR,KAAKsP,iBAAiB1N,GAAI,CACxC,MAAM0Q,EAAgBtS,KAAKsP,iBAAiB1N,GACxC5B,KAAKwP,aAAe8C,GACtBtS,KAAKiR,SAEPrN,EAAGqM,kBAAkBqC,EAAcb,GACrC,CAEFzR,KAAKsP,iBAAiB1N,GAAK,IAC7B,CACF,CAMA,WAAA4Q,CAAY3R,EAAUiQ,GACpB,MAAMlN,EAAK5D,KAAKuD,UAAUK,GACpBsN,EAAelR,KAAKuD,UAAUb,OAC9BuJ,EAAapL,EAASoL,WACxBpL,EAAS4R,aACXvB,EAAajQ,KAAKJ,EAAS4R,aAE7B,IAAIC,EAAa,KACjB,IAAA,MAAWjB,KAAKxF,EAAY,CAC1B,MAAM0G,EAAY1G,EAAWwF,GACvB/O,EAASiQ,EAAUjQ,OACnBwB,EAAWgN,EAAalN,YAAYtB,GACpCkQ,EAAgB9B,EAAQU,eAAeC,GAC7C,GAAImB,EAAe,CACbF,IAAexO,IACjBgN,EAAajQ,KAAKyB,GAClBgQ,EAAaxO,GAEf,MAAM4N,EAAWc,EAAcd,SAC/BlO,EAAGiP,wBAAwBf,GAC3B,MAAMgB,EAAgBC,EAA2BJ,EAAUxD,QACrDhN,EAAO+M,EAAoByD,EAAUxD,QAmB3C,GAlB8C,QAA1CyD,EAAczD,QAAQ6D,UAAU,EAAG,GACrCpP,EAAGqP,qBACDnB,EACAgB,EAAc7Q,KACdE,EACAwQ,EAAUO,OACVP,EAAU3N,QAGZpB,EAAGuP,oBACDrB,EACAgB,EAAc7Q,KACdE,EACA2Q,EAAcM,WACdT,EAAUO,OACVP,EAAU3N,QAGV2N,EAAUU,SAAU,CACtB,IAAIrT,KAAK0P,YAIP,MAAM,IAAI5F,MAAM,kEAJI,CACpB,MAAMwJ,EAAUX,EAAUW,SAAW,EACrC1P,EAAGiN,oBAAoBiB,EAAUwB,EACnC,CAGF,CACF,CACF,CACF,CAYA,IAAAvR,CAAKC,EAAUC,EAAMtB,EAAO4S,GAC1B,MAAM3P,GAAEA,GAAO5D,KAAKuD,UACd1C,EAAWb,KAAKuP,gBAChBiE,EAAapE,EAAgBpN,GAAYnB,EAASmB,UAExD,GADAuR,IAAkBA,EAAgB1S,EAAS0S,eACvC1S,EAAS4R,YAAa,CACxB,MAAMgB,EAAW5S,EAAS4R,YAAYtN,KAAKU,kBACrC6N,EAAsB,IAAbD,EAAiB7P,EAAG2J,eAAiB3J,EAAG6K,aACjC,IAAlB8E,EACF3P,EAAG8M,sBAAsB8C,EAAYvR,GAAQpB,EAAS4R,YAAYtN,KAAKiM,OAAQsC,GAAS/S,GAAS,GAAK8S,EAAUF,GAEhH3P,EAAG+P,aAAaH,EAAYvR,GAAQpB,EAAS4R,YAAYtN,KAAKiM,OAAQsC,GAAS/S,GAAS,GAAK8S,EAEjG,MAA6B,IAAlBF,EACT3P,EAAGwM,oBAAoBoD,EAAY7S,GAAS,EAAGsB,GAAQpB,EAAS+S,UAAWL,GAE3E3P,EAAGiQ,WAAWL,EAAY7S,GAAS,EAAGsB,GAAQpB,EAAS+S,WAEzD,OAAO5T,IACT,CAEA,MAAAiR,GACEjR,KAAK4D,GAAGkM,gBAAgB,MACxB9P,KAAKwP,WAAa,KAClBxP,KAAKuP,gBAAkB,IACzB,CACA,OAAA7L,GACE1D,KAAKuD,UAAY,KACjBvD,KAAK4D,GAAK,KACV5D,KAAKwP,WAAa,KAClBxP,KAAKuP,gBAAkB,KACvBvP,KAAKsP,iBAAmB,IAC1B,EAGFD,EAAiBnN,UAAY,CAC3BC,KAAM,CACJC,EAAcuE,aAEhBrE,KAAM,YC7RR,MAAMwR,EAAsB,IAAIC,EAAS,CACvC9H,WAAY,CACV+H,UAAW,EACT,GACA,EAEA,GACA,GAEA,EACA,MAKAC,EAAsB,MAAMA,EAChC,WAAAlU,CAAYQ,GAEVP,KAAK4I,eAAgB,EACrB5I,KAAKkU,0BAA2B,EAChClU,KAAKuD,UAAYhD,CACnB,CACA,IAAAF,CAAKqH,EAAU,IACb,MAAMkB,cAAEA,YAAeF,GAAc,IAAKuL,EAAoBtM,kBAAmBD,GACjF1H,KAAK4I,cAAgBA,EACrB5I,KAAKmU,WAAazL,EACb1I,KAAKuD,UAAUsE,QAAQhB,SAASM,OACnCW,EAAK,gEACL9H,KAAKmU,YAAa,GAEpBnU,KAAKoU,OAASlU,EAAMC,QACpB,MAAMkU,EAAqB,IAAIC,EAAU,CACvCC,OAAQ,sUAYRC,SAAU,oOASVlS,KAAM,iBAERtC,KAAKyU,mBAAqB,IAAIC,EAAO,CACnCrT,UAAWgT,EACXM,UAAW,CACTC,SAAUC,EAAQC,MAAMC,SAG9B,CAMA,WAAAC,CAAYtN,GACV,MAAMuN,EAAejV,KAAKuD,UAAU0R,aAAaC,gBAAgBxN,EAAQyN,QAEzE,GADAnV,KAAKkU,yBAA2BlU,KAAK4I,iBAAmBqM,EAAaG,OACjEpV,KAAKkU,yBAA0B,CACjC,MAAMmB,EAAgBrV,KAAKuD,UAAU0R,aAAaC,gBAAgBxN,EAAQyN,QAC1EnV,KAAKsV,eAAiBD,EAAcE,aACpC7N,EAAQyN,OAASnV,KAAKwV,sBAAsBH,EAAcE,aAC5D,CACF,CACA,SAAAE,GACEzV,KAAK0V,oBACP,CACA,kBAAAA,GACE,MAAMnV,EAAWP,KAAKuD,UACtBhD,EAAS0U,aAAaU,mBACjB3V,KAAKkU,2BAEV3T,EAAS0U,aAAahU,KAAKjB,KAAKsV,gBAAgB,GAChDtV,KAAKyU,mBAAmBE,UAAUC,SAAW5U,KAAK4V,mBAAmBb,OACrExU,EAASsV,QAAQ9T,KAAK,CACpBlB,SAAUiT,EACVhT,OAAQd,KAAKyU,mBACbhT,MAAOzB,KAAKoU,SAEhB,CACA,qBAAAoB,CAAsBM,GAcpB,OAbA9V,KAAK4V,mBAAqB5V,KAAK4V,oBAAsB,IAAIf,EAAQ,CAC/DE,OAAQ,IAAIgB,EAAc,CACxB5N,MAAO2N,EAAoB3N,MAC3BC,OAAQ0N,EAAoB1N,OAC5B4N,WAAYF,EAAoBG,YAChCvN,UAAW1I,KAAKmU,eAGpBnU,KAAK4V,mBAAmBb,OAAOmB,OAC7BJ,EAAoB3N,MACpB2N,EAAoB1N,OACpB0N,EAAoBG,aAEfjW,KAAK4V,kBACd,CAEA,OAAAlS,GACM1D,KAAK4V,qBACP5V,KAAK4V,mBAAmBlS,UACxB1D,KAAK4V,mBAAqB,KAE9B,GAGF3B,EAAoB/R,UAAY,CAC9BC,KAAM,CACJC,EAAcuE,aAEhBrE,KAAM,aACN6T,SAAU,GAGZlC,EAAoBtM,eAAiB,CAEnCiB,eAAe,GAEjB,IAAIwN,EAAqBnC,ECxIzB,MAAMoC,GACJ,WAAAtW,CAAYQ,GACVP,KAAKsW,gBAAkB,GACvBtW,KAAKuD,UAAYhD,CACnB,CACA,OAAAgW,CAAQC,GACFxW,KAAKsW,kBAAoBE,IAE7BxW,KAAKsW,gBAAkBE,EACvBxW,KAAKuD,UAAUK,GAAG4S,aACD,EAAZA,MACY,EAAZA,MACY,EAAZA,MACY,EAAZA,IAEP,EAGFH,GAAkBnU,UAAY,CAC5BC,KAAM,CACJC,EAAcuE,aAEhBrE,KAAM,aCtBR,MAAMmU,GACJ,WAAA1W,CAAYQ,GACVP,KAAK0W,gBAAkBC,QAAQC,UAC/B5W,KAAKuD,UAAYhD,CACnB,CACA,WAAAsW,CAAYhW,EAAUC,GACpBd,KAAKuD,UAAU1C,SAASI,KAAKJ,EAAUC,EAAOO,UAChD,CACA,gBAAAsU,GACA,CACA,IAAA5T,CAAK2F,GACH,MAAMnH,EAAWP,KAAKuD,WAChB1C,SAAEA,EAAAC,OAAUA,EAAAW,MAAQA,EAAAqV,SAAOA,EAAU9U,SAAUG,EAAAF,KAAMA,EAAAtB,MAAMA,EAAA4S,cAAOA,GAAkB7L,EAC1FnH,EAASO,OAAOG,KAAKH,EAAQgW,GAC7BvW,EAASM,SAASI,KAAKJ,EAAUN,EAASO,OAAOiW,gBAC7CtV,GACFlB,EAASkB,MAAMC,IAAID,GAErBlB,EAASM,SAASkB,KAAKI,EAAMF,EAAMtB,EAAO4S,GAAiB1S,EAAS0S,cACtE,CACA,OAAA7P,GACE1D,KAAKuD,UAAY,IACnB,EAGFkT,GAAgBvU,UAAY,CAC1BC,KAAM,CACJC,EAAcuE,aAEhBrE,KAAM,WC5BR,MAAM0U,GACJ,WAAAjX,CAAYQ,GACVP,KAAKuD,UAAYhD,CACnB,CACA,aAAAE,GACE,MAAMmD,EAAK5D,KAAKuD,UAAUK,GAC1B5D,KAAKiX,YAAcrT,EAAGsT,aAAatT,EAAGuT,yBACtCnX,KAAKoX,qBAAuBC,EAA6BrX,KAAKiX,YAAarT,GAC3E,MAAMuI,EAAmD,IAAxCnM,KAAKuD,UAAUsE,QAAQyB,aACxCtJ,KAAK+D,mBAAqBoI,EAAWvI,EAAGsT,aAAatT,EAAG0T,6BAA+B,CACzF,CACA,OAAA5T,GACA,EAGFsT,GAAe9U,UAAY,CACzBC,KAAM,CACJC,EAAcuE,aAEhBrE,KAAM,UCtBR,MAAMiV,GACJ,WAAAxX,GACEC,KAAKmI,OAAQ,EACbnI,KAAKoI,QAAS,EACdpI,KAAKmH,MAAO,EACZnH,KAAKwX,iBAAmB,EAC1B,ECFF,MAAMC,GACJ,WAAA1X,CAAYQ,GACVP,KAAK0X,cAAgB,CACnBC,SAAS,EACTC,iBAAkB,EAClBC,YAAaC,EAAcC,MAE7B/X,KAAKgY,0BAA4C/U,OAAOC,OAAO,MAC/D3C,EAAS0U,aAAagD,qBAAqBvX,IAAIV,KACjD,CACA,aAAAS,CAAcmD,GACZ5D,KAAK2D,IAAMC,EACX5D,KAAKkY,uBAAyB,CAC5BC,OAAQvU,EAAGwU,OACXC,MAAOzU,EAAG0U,MACVC,MAAO3U,EAAG4U,MACV,YAAa5U,EAAG6U,SAChBC,KAAM9U,EAAG+U,KACT,aAAc/U,EAAGgV,OACjBC,QAASjV,EAAGkV,QACZ,gBAAiBlV,EAAGmV,QAEtB/Y,KAAKgZ,mBAAqB,CACxBC,KAAMrV,EAAGsV,KACTC,KAAMvV,EAAGwV,KACTC,QAASzV,EAAG0V,QACZC,OAAQ3V,EAAG4V,OACX,kBAAmB5V,EAAG6V,KACtB,kBAAmB7V,EAAG8V,KACtB,iBAAkB9V,EAAG+V,UACrB,iBAAkB/V,EAAGgW,WAEvB5Z,KAAK0G,YACP,CACA,oBAAAuR,CAAqBhD,GACnB,GAAIjV,KAAK6Z,sBAAwB5E,EAC/B,OACFjV,KAAK6Z,oBAAsB5E,EAC3B,IAAI6E,EAAe9Z,KAAKgY,0BAA0B/C,EAAajU,KAC1D8Y,IACHA,EAAe9Z,KAAKgY,0BAA0B/C,EAAajU,KAAO,CAChE6W,YAAaC,EAAciC,SAC3BnC,iBAAkB,IAGtB5X,KAAKga,eAAeF,EAAajC,YAAaiC,EAAalC,iBAC7D,CACA,UAAAlR,GACE1G,KAAK0X,cAAcC,SAAU,EAC7B3X,KAAK0X,cAAcG,YAAcC,EAAcC,KAC/C/X,KAAK0X,cAAcE,iBAAmB,CACxC,CACA,cAAAoC,CAAenC,EAAaD,GAC1B,MAAMkC,EAAe9Z,KAAKgY,0BAA0BhY,KAAK6Z,oBAAoB7Y,KACvE4C,EAAK5D,KAAK2D,IACVsW,EAAOC,EAAsBrC,GAC7BH,EAAgB1X,KAAK0X,cAC3BoC,EAAajC,YAAcA,EAC3BiC,EAAalC,iBAAmBA,EAC5BC,IAAgBC,EAAciC,UAO7B/Z,KAAK0X,cAAcC,UACtB3X,KAAK0X,cAAcC,SAAU,EAC7B/T,EAAGuW,OAAOvW,EAAGwW,eAEXvC,IAAgBH,EAAcG,aAAeH,EAAcE,mBAAqBA,IAClFF,EAAcG,YAAcA,EAC5BH,EAAcE,iBAAmBA,EACjChU,EAAGyW,YAAYra,KAAKkY,uBAAuB+B,EAAKK,YAAYC,SAAU3C,EAAkB,KACxFhU,EAAG4W,UAAU5W,EAAGsV,KAAMtV,EAAGsV,KAAMlZ,KAAKgZ,mBAAmBiB,EAAKK,YAAYG,WAdpEza,KAAK0X,cAAcC,UACrB3X,KAAK0X,cAAcC,SAAU,EAC7B/T,EAAG8W,QAAQ9W,EAAGwW,cAcpB,EAGF3C,GAAgBvV,UAAY,CAC1BC,KAAM,CACJC,EAAcuE,aAEhBrE,KAAM,WCvFR,MAAMqY,GAAqB,CACzBC,IAAK,EACLC,IAAK,EACL,YAAa,EACb,YAAa,GACb,YAAa,GACb,YAAa,EACb,YAAa,GACb,YAAa,GACb,cAAe,GACf,cAAe,GACf,cAAe,IAkBjB,SAASC,GAAuBC,GAC9B,MAAMC,EAAcD,EAAYE,IAAK9V,IAAA,CACnCA,OACAH,OAAQ,EACR/C,KAAM,KAGR,IAAIA,EAAO,EACP+C,EAAS,EACb,IAAA,IAASpD,EAAI,EAAGA,EAAIoZ,EAAY5J,OAAQxP,IAAK,CAC3C,MAAMsZ,EAAaF,EAAYpZ,GAE/B,GADAK,EAAO0Y,GAAmBO,EAAW/V,KAAKhD,OACrCF,EACH,MAAM,IAAI6H,MAAM,gBAAgBoR,EAAW/V,KAAKhD,QAE9C+Y,EAAW/V,KAAKlD,KAAO,IACzBA,EAAOmH,KAAKC,IAAIpH,EAVF,IAUqBiZ,EAAW/V,KAAKlD,MAErD,MAAMkZ,EAAoB,KAATlZ,EAAc,GAAKA,EACpCiZ,EAAWjZ,KAAOA,EAClB,MAAMmZ,EAAYpW,EAdF,GAgBdA,GADEoW,EAAY,GAfA,GAeiBA,EAAYD,GAf7B,GAgBSC,GAAa,IAEzBnZ,EAAOmZ,EAAYnZ,GAAQA,EAExCiZ,EAAWlW,OAASA,EACpBA,GAAU/C,CACZ,CAEA,OADA+C,EAAkC,GAAzBoE,KAAKiS,KAAKrW,EAAS,IACrB,CAAEgW,cAAa/Y,KAAM+C,EAC9B,CC1DA,SAASsW,GAAuBJ,EAAYK,GAC1C,MAAMC,EAAUpS,KAAKC,IAAIsR,GAAmBO,EAAW/V,KAAKhD,MAAQ,GAAI,GAClEsZ,EAAcP,EAAW/V,KAAKuW,MAAMtK,OAAS8J,EAAW/V,KAAKlD,KAC7D0Z,GAAa,EAAIF,EAAc,GAAK,EACpCtW,EAAO+V,EAAW/V,KAAKhD,KAAKyZ,QAAQ,QAAU,EAAI,YAAc,OACtE,MAAO,oBACQV,EAAW/V,KAAK7C,4BACbiZ,qFAMOL,EAAW/V,KAAKlD,KAAOuZ,sDAEjBC,2CAEftW,0DAEU,IAAdwW,EAAkB,kBAAkBA,KAAe,qBAGjE,CCpBA,SAASE,GAA2Bb,GAClC,OAAOc,EACLd,EACA,WACAM,GACAS,EAEJ,CCNA,MAAMC,WAAoBC,EACxB,WAAAlc,GACEmc,MAAM,CACJC,kBAAmBrB,GACnBsB,gBAAiBP,IAErB,EAGFG,GAAY9Z,UAAY,CACtBC,KAAM,CAACC,EAAcuE,aACrBrE,KAAM,OCVR,MAAM+Z,GACJ,WAAAtc,GACEC,KAAKsc,iBAAmB,CAAC,EAAG,EAAG,EAAG,GAClCtc,KAAKuc,eAAiB,IAAIC,CAC5B,CACA,IAAAnc,CAAKE,EAAUkc,GACbzc,KAAKuD,UAAYhD,EACjBP,KAAK0c,oBAAsBD,EAC3Blc,EAASC,QAAQC,cAAcC,IAAIV,KACrC,CACA,aAAAS,GACET,KAAKsc,iBAAmB,CAAC,EAAG,EAAG,EAAG,GAClCtc,KAAKuc,eAAiB,IAAIC,CAC5B,CACA,aAAAG,CAAcC,EAA4BC,EAAoBC,EAAW7a,EAAM8a,GAC7E,MAAMN,EAAqBzc,KAAK0c,oBAC1Bnc,EAAWP,KAAKuD,UAChByZ,EAAiBP,EAAmBQ,mBAAmBL,GACvDhZ,EAAKrD,EAASqD,GAcpB,OAbA5D,KAAK2V,iBAAiBiH,GACtBhZ,EAAGsZ,gBAAgBtZ,EAAGuZ,YAAaH,EAAeI,0BAClD7c,EAASuB,QAAQb,KAAK4b,EAAoB,GAC1CjZ,EAAGyZ,kBACDzZ,EAAG0Z,WACH,EACAP,EAAWQ,EACXR,EAAWS,EACXV,EAAUS,EACVT,EAAUU,EACVvb,EAAKkG,MACLlG,EAAKmG,QAEAyU,CACT,CACA,eAAAY,CAAgBxI,EAAcyI,GAAQ,EAAMC,EAAYC,GACtD,MAAMnB,EAAqBzc,KAAK0c,oBAC1B3H,EAASE,EAAaM,aACtBsI,EAAkBpB,EAAmBQ,mBAAmBhI,GAC9D,IAAI6I,EAAYF,EAASJ,EACrBvI,EAAaG,SACf0I,EAAY/I,EAAOgJ,YAAcH,EAASxV,QAE5C6M,EAAa+I,cAAcC,QAASnc,IAClC9B,KAAKuD,UAAUzB,QAAQmP,OAAOnP,KAEhC,MAAM8B,EAAK5D,KAAKuD,UAAUK,GAC1BA,EAAGsZ,gBAAgBtZ,EAAGuZ,YAAaU,EAAgBK,aACnD,MAAMC,EAAgBne,KAAKuc,eACvB4B,EAAcZ,IAAMK,EAASL,GAAKY,EAAcX,IAAMM,GAAaK,EAAchW,QAAUyV,EAASzV,OAASgW,EAAc/V,SAAWwV,EAASxV,SACjJ+V,EAAcZ,EAAIK,EAASL,EAC3BY,EAAcX,EAAIM,EAClBK,EAAchW,MAAQyV,EAASzV,MAC/BgW,EAAc/V,OAASwV,EAASxV,OAChCxE,EAAGga,SACDA,EAASL,EACTO,EACAF,EAASzV,MACTyV,EAASxV,SAGRyV,EAAgBO,2BAA6BnJ,EAAalM,UAAWkM,EAAaoJ,OACrFre,KAAKse,aAAaT,GAEpB7d,KAAK0d,MAAMzI,EAAcyI,EAAOC,EAClC,CACA,gBAAAhI,CAAiBV,GACf,MACM+H,EADqBhd,KAAK0c,oBACUO,mBAAmBhI,GAC7D,IAAK+H,EAAe7V,KAClB,OACF,MAAMvD,EAAK5D,KAAKuD,UAAUK,GAC1BA,EAAGsZ,gBAAgBtZ,EAAGuZ,YAAaH,EAAeI,0BAClDxZ,EAAGsZ,gBAAgBtZ,EAAG2a,iBAAkBvB,EAAekB,aACvDta,EAAG4a,gBACD,EACA,EACAxB,EAAe7U,MACf6U,EAAe5U,OACf,EACA,EACA4U,EAAe7U,MACf6U,EAAe5U,OACfxE,EAAG6a,iBACH7a,EAAG8a,SAEL9a,EAAGsZ,gBAAgBtZ,EAAGuZ,YAAaH,EAAekB,YACpD,CACA,mBAAAS,CAAoB1J,GAClB,MACMrR,EADW5D,KAAKuD,UACFK,GACdoZ,EAAiB,IAAIzF,GAE3B,OADqBtC,EAAaM,wBACNqJ,GAC1B5e,KAAKuD,UAAUsE,QAAQqB,iBAAiB+L,EAAaM,aAAasJ,UAClE7B,EAAekB,YAAc,KACtBlB,IAEThd,KAAK8e,WAAW7J,EAAc+H,GAC9BpZ,EAAGsZ,gBAAgBtZ,EAAGuZ,YAAa,MAC5BH,EACT,CACA,sBAAA+B,CAAuBlB,GACrB,MAAMja,EAAK5D,KAAKuD,UAAUK,GACtBia,EAAgBK,cAClBta,EAAGob,kBAAkBnB,EAAgBK,aACrCL,EAAgBK,YAAc,MAE5BL,EAAgBT,2BAClBxZ,EAAGob,kBAAkBnB,EAAgBT,0BACrCS,EAAgBT,yBAA2B,MAEzCS,EAAgBO,2BAClBxa,EAAGqb,mBAAmBpB,EAAgBO,0BACtCP,EAAgBO,yBAA2B,MAE7CP,EAAgBrG,iBAAiByG,QAASiB,IACxCtb,EAAGqb,mBAAmBC,KAExBrB,EAAgBrG,iBAAmB,IACrC,CACA,KAAAkG,CAAMyB,EAAezB,EAAOC,GAC1B,IAAKD,EACH,OACF,MAAMjB,EAAqBzc,KAAK0c,oBACX,kBAAVgB,IACTA,EAAQA,EAAQ0B,EAAMC,IAAMD,EAAMrH,MAEpC,MAAMnU,EAAK5D,KAAKuD,UAAUK,GAC1B,GAAI8Z,EAAQ0B,EAAME,MAAO,CACvB3B,IAAeA,EAAalB,EAAmB8C,mBAC/C,MAAMC,EAAkBxf,KAAKsc,iBACvBmD,EAAkB9B,EACpB6B,EAAgB,KAAOC,EAAgB,IAAMD,EAAgB,KAAOC,EAAgB,IAAMD,EAAgB,KAAOC,EAAgB,IAAMD,EAAgB,KAAOC,EAAgB,KAChLD,EAAgB,GAAKC,EAAgB,GACrCD,EAAgB,GAAKC,EAAgB,GACrCD,EAAgB,GAAKC,EAAgB,GACrCD,EAAgB,GAAKC,EAAgB,GACrC7b,EAAG+Z,WAAW8B,EAAgB,GAAIA,EAAgB,GAAIA,EAAgB,GAAIA,EAAgB,IAE9F,CACA7b,EAAG8Z,MAAMA,EACX,CACA,qBAAAgC,CAAsBzK,GACpB,GAAIA,EAAaG,OACf,OACF,MACM4H,EADqBhd,KAAK0c,oBACUO,mBAAmBhI,GAC7DjV,KAAK2f,aAAa1K,EAAc+H,IAC5B/H,EAAalM,SAAWkM,EAAaoJ,QACvCre,KAAK4f,eAAe5C,EAExB,CACA,UAAA8B,CAAW7J,EAAc+H,GACvB,MAAMzc,EAAWP,KAAKuD,UAChBK,EAAKrD,EAASqD,GACdwZ,EAA2BxZ,EAAGic,oBA0BpC,GAzBA7C,EAAeI,yBAA2BA,EAC1CxZ,EAAGsZ,gBAAgBtZ,EAAGuZ,YAAaC,GACnCJ,EAAe7U,MAAQ8M,EAAaM,aAAaR,OAAO+K,WACxD9C,EAAe5U,OAAS6M,EAAaM,aAAaR,OAAOgJ,YACzD9I,EAAa+I,cAAcC,QAAQ,CAAC1I,EAAc3T,KAChD,MAAMmT,EAASQ,EAAaR,OACxBA,EAAOrM,YACLnI,EAASsH,QAAQhB,SAASM,KAC5B6V,EAAe7V,MAAO,EAEtBW,EAAK,wEAGTvH,EAASuB,QAAQie,WAAWhL,EAAQ,GACpC,MACMiL,EADWzf,EAASuB,QAAQme,YAAYlL,GACnBjT,QAC3B8B,EAAGsc,qBACDtc,EAAGuZ,YACHvZ,EAAGuc,kBAAoBve,EACvB,KAEAoe,EACA,KAGAhD,EAAe7V,KAAM,CACvB,MAAMiZ,EAAkBxc,EAAGic,oBAC3B7C,EAAekB,YAAckC,EAC7Bxc,EAAGsZ,gBAAgBtZ,EAAGuZ,YAAaiD,GACnCnL,EAAa+I,cAAcC,QAAQ,CAACoC,EAAGze,KACrC,MAAM4V,EAAmB5T,EAAG0c,qBAC5BtD,EAAexF,iBAAiB5V,GAAK4V,GAEzC,MACEwF,EAAekB,YAAcd,EAE/Bpd,KAAK2f,aAAa1K,EAAc+H,EAClC,CACA,YAAA2C,CAAa1K,EAAc+H,GACzB,MAAMjI,EAASE,EAAaM,aAAaR,OAQzC,GAPAiI,EAAe7U,MAAQ4M,EAAO+K,WAC9B9C,EAAe5U,OAAS2M,EAAOgJ,YAC/B9I,EAAa+I,cAAcC,QAAQ,CAAC1I,EAAc3T,KACtC,IAANA,GAEJ2T,EAAaR,OAAOmB,OAAOnB,EAAO5M,MAAO4M,EAAO3M,OAAQ2M,EAAOkB,eAE7D+G,EAAe7V,KAAM,CACvB,MAAM5G,EAAWP,KAAKuD,UAChBK,EAAKrD,EAASqD,GACdwc,EAAkBpD,EAAekB,YACvCta,EAAGsZ,gBAAgBtZ,EAAGuZ,YAAaiD,GACnCnL,EAAa+I,cAAcC,QAAQ,CAAC1I,EAAc3T,KAChD,MAAM2e,EAAUhL,EAAaR,OAC7BxU,EAASuB,QAAQie,WAAWQ,EAAS,GACrC,MACMC,EADWjgB,EAASuB,QAAQme,YAAYM,GACZE,eAC5BjJ,EAAmBwF,EAAexF,iBAAiB5V,GACzDgC,EAAG8c,iBACD9c,EAAG+c,aACHnJ,GAEF5T,EAAGgd,+BACDhd,EAAG+c,aACH,EACAH,EACAD,EAAQT,WACRS,EAAQxC,aAEVna,EAAGid,wBACDjd,EAAGuZ,YACHvZ,EAAGuc,kBAAoBve,EACvBgC,EAAG+c,aACHnJ,IAGN,CACF,CACA,YAAA8G,CAAatB,GACX,GAAmC,OAA/BA,EAAekB,YACjB,OACF,MAAMta,EAAK5D,KAAKuD,UAAUK,GACpBwa,EAA2Bxa,EAAG0c,qBACpCtD,EAAeoB,yBAA2BA,EAC1Cxa,EAAG8c,iBACD9c,EAAG+c,aACHvC,GAEFxa,EAAGid,wBACDjd,EAAGuZ,YACHvZ,EAAGkd,yBACHld,EAAG+c,aACHvC,GAEFpe,KAAK4f,eAAe5C,EACtB,CACA,cAAA4C,CAAe5C,GACb,MAAMpZ,EAAK5D,KAAKuD,UAAUK,GAC1BA,EAAG8c,iBACD9c,EAAG+c,aACH3D,EAAeoB,0BAEbpB,EAAe7V,KACjBvD,EAAGgd,+BACDhd,EAAG+c,aACH,EACA/c,EAAGmd,iBACH/D,EAAe7U,MACf6U,EAAe5U,QAGjBxE,EAAGod,oBACDpd,EAAG+c,aACqC,IAAxC3gB,KAAKuD,UAAUsE,QAAQyB,aAAqB1F,EAAGmd,iBAAmBnd,EAAGqd,cACrEjE,EAAe7U,MACf6U,EAAe5U,OAGrB,CACA,SAAA8Y,CAAUjM,GACR,MAAM4J,EAAW5J,EAAaM,aAAasJ,SACvC7e,KAAKuD,UAAUsE,QAAQD,WAAagX,EAAauC,KAAKtC,IACxD7e,KAAKuD,UAAUsE,QAAQqB,iBAAiB2V,EAE5C,CACA,UAAAuC,CAAWnM,GACT,GAAKjV,KAAKuD,UAAUsE,QAAQD,WAExBgX,EAAauC,KAAKlM,EAAaM,aAAasJ,UAAW,CACzD,MAAMwC,EAAgBrhB,KAAKuD,UAAUsE,QAAQE,OACvCuZ,EAAerM,EAAaM,aAClC+L,EAAaC,UAAUC,UACrBH,EACA,EACAC,EAAavD,YAAcsD,EAAcjZ,OAE7C,CACF,ECvSF,MAAMqZ,WAA6BC,EACjC,WAAA3hB,CAAYQ,GACV2b,MAAM3b,GACNP,KAAK2hB,QAAU,IAAItF,GACnBrc,KAAK2hB,QAAQthB,KAAKE,EAAUP,KAC9B,EAGFyhB,GAAqBvf,UAAY,CAC/BC,KAAM,CAACC,EAAcuE,aACrBrE,KAAM,gBCZR,MAAMsf,GAMJ,WAAA7hB,CAAY+Q,EAASiK,GACnB/a,KAAK8Q,QAAUA,EACf9Q,KAAK+a,YAAcA,EACnB/a,KAAK6hB,cAAgB,CAAA,EACrB7hB,KAAK8hB,mBAAqB,CAAA,EAC1B9hB,KAAK+hB,qBAAuB,CAAA,CAC9B,CAEA,OAAAre,GACE1D,KAAK+a,YAAc,KACnB/a,KAAK6hB,cAAgB,KACrB7hB,KAAK8hB,mBAAqB,KAC1B9hB,KAAK+hB,qBAAuB,KAC5B/hB,KAAK8Q,QAAU,IACjB,ECtBF,SAASkR,GAAcpe,EAAIzB,EAAM8f,GAC/B,MAAMnhB,EAAS8C,EAAGse,aAAa/f,GAG/B,OAFAyB,EAAGue,aAAarhB,EAAQmhB,GACxBre,EAAGoe,cAAclhB,GACVA,CACT,CCLA,SAASshB,GAAangB,GACpB,MAAMogB,EAAQ,IAAIC,MAAMrgB,GACxB,IAAA,IAASL,EAAI,EAAGA,EAAIygB,EAAMjR,OAAQxP,IAChCygB,EAAMzgB,IAAK,EAEb,OAAOygB,CACT,CACA,SAASE,GAAapgB,EAAMF,GAC1B,OAAQE,GACN,IAAK,QAQL,IAAK,MACL,IAAK,OACL,IAAK,YACL,IAAK,iBACH,OAAO,EAVT,IAAK,OACH,OAAO,IAAIqgB,aAAa,EAAIvgB,GAC9B,IAAK,OACH,OAAO,IAAIugB,aAAa,EAAIvgB,GAC9B,IAAK,OACH,OAAO,IAAIugB,aAAa,EAAIvgB,GAM9B,IAAK,QACH,OAAO,IAAIwgB,WAAW,EAAIxgB,GAC5B,IAAK,QACH,OAAO,IAAIwgB,WAAW,EAAIxgB,GAC5B,IAAK,QACH,OAAO,IAAIwgB,WAAW,EAAIxgB,GAC5B,IAAK,QACH,OAAO,IAAIygB,YAAY,EAAIzgB,GAC7B,IAAK,QACH,OAAO,IAAIygB,YAAY,EAAIzgB,GAC7B,IAAK,QACH,OAAO,IAAIygB,YAAY,EAAIzgB,GAC7B,IAAK,OACH,OAAO,EACT,IAAK,QACH,OAAOmgB,GAAa,EAAIngB,GAC1B,IAAK,QACH,OAAOmgB,GAAa,EAAIngB,GAC1B,IAAK,QACH,OAAOmgB,GAAa,EAAIngB,GAC1B,IAAK,OACH,OAAO,IAAIugB,aAAa,CACtB,EACA,EACA,EACA,IAEJ,IAAK,OACH,OAAO,IAAIA,aAAa,CACtB,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAEJ,IAAK,OACH,OAAO,IAAIA,aAAa,CACtB,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGN,OAAO,IACT,CClFA,IAAIG,GAAW,KACf,MAAMC,GAAmB,CACvBxU,MAAO,QACPyU,WAAY,OACZC,WAAY,OACZC,WAAY,OACZjU,IAAK,MACLkU,SAAU,QACVC,SAAU,QACVC,SAAU,QACVzU,aAAc,OACd0U,kBAAmB,QACnBC,kBAAmB,QACnBC,kBAAmB,QACnBC,KAAM,OACNC,UAAW,QACXC,UAAW,QACXC,UAAW,QACXC,WAAY,OACZC,WAAY,OACZC,WAAY,OACZC,WAAY,YACZC,eAAgB,YAChBC,wBAAyB,YACzBC,aAAc,cACdC,iBAAkB,cAClBC,0BAA2B,cAC3BC,iBAAkB,iBAClBC,qBAAsB,iBACtBC,8BAA+B,kBAE3BC,GAAuB,CAC3BC,MAAO,UACPC,KAAM,YACNC,KAAM,YACNC,KAAM,YACNC,IAAK,SACLC,MAAO,WACPC,MAAO,WACPC,MAAO,WACPC,KAAM,SACNC,MAAO,WACPC,MAAO,WACPC,MAAO,WACPC,KAAM,SACNC,MAAO,WACPC,MAAO,WACPC,MAAO,YAET,SAASC,GAAQ3hB,EAAIzB,GACnB,IAAKwgB,GAAU,CACb,MAAM6C,EAAYviB,OAAOwiB,KAAK7C,IAC9BD,GAAW,CAAA,EACX,IAAA,IAAS/gB,EAAI,EAAGA,EAAI4jB,EAAUpU,SAAUxP,EAAG,CACzC,MAAM8jB,EAAKF,EAAU5jB,GACrB+gB,GAAS/e,EAAG8hB,IAAO9C,GAAiB8C,EACtC,CACF,CACA,OAAO/C,GAASxgB,EAClB,CACA,SAASwjB,GAAoB/hB,EAAIzB,GAC/B,MAAMyjB,EAAYL,GAAQ3hB,EAAIzB,GAC9B,OAAOmiB,GAAqBsB,IAAc,SAC5C,CC/DA,SAASC,GAAqBjiB,EAAI9C,GAChC,MAAMglB,EAAYliB,EAAGmiB,gBAAgBjlB,GAAQklB,MAAM,MAAM/K,IAAI,CAACgL,EAAM5hB,IAAU,GAAGA,MAAU4hB,KAErFC,EADYtiB,EAAGuiB,iBAAiBrlB,GACRklB,MAAM,MAC9BI,EAAS,CAAA,EACTC,EAAcH,EAAYjL,IAAKgL,GAASK,WAAWL,EAAK5M,QAAQ,2BAA4B,QAAQkN,OAAQC,MAC5GA,GAAMJ,EAAOI,MACfJ,EAAOI,IAAK,GACL,IAILC,EAAU,CAAC,IACjBJ,EAAYpI,QAASyI,IACnBZ,EAAUY,EAAS,GAAK,KAAKZ,EAAUY,EAAS,OAChDD,EAAQ5U,KAAK,sDAAuD,qBAEtE,MAAM8U,EAAsBb,EAAU/T,KAAK,MAC3C0U,EAAQ,GAAKE,CAKf,CCdA,SAASC,GAAgBhjB,EAAIkN,GAC3B,MAAM+V,EAAe7E,GAAcpe,EAAIA,EAAGkjB,cAAehW,EAAQyD,QAC3DwS,EAAe/E,GAAcpe,EAAIA,EAAGojB,gBAAiBlW,EAAQ0D,UAC7DyS,EAAerjB,EAAGsjB,gBACxBtjB,EAAGujB,aAAaF,EAAcJ,GAC9BjjB,EAAGujB,aAAaF,EAAcF,GAC9B,MAAMK,EAA4BtW,EAAQsW,0BACtCA,IAC0C,mBAAjCxjB,EAAGwjB,0BACZtf,EAAK,+EAELlE,EAAGwjB,0BACDH,EACAG,EAA0BC,MACe,aAAzCD,EAA0BE,WAA4B1jB,EAAG2jB,iBAAmB3jB,EAAG4jB,sBAIrF5jB,EAAG6jB,YAAYR,GACVrjB,EAAG8jB,oBAAoBT,EAAcrjB,EAAG+jB,cDJ/C,SAAyB/jB,EAAIkN,EAAS8W,EAAcC,GAC7CjkB,EAAG8jB,oBAAoB5W,EAASlN,EAAG+jB,eACjC/jB,EAAGkkB,mBAAmBF,EAAchkB,EAAGmkB,iBAC1ClC,GAAqBjiB,EAAIgkB,GAEtBhkB,EAAGkkB,mBAAmBD,EAAgBjkB,EAAGmkB,iBAC5ClC,GAAqBjiB,EAAIikB,GAGvBjkB,EAAGokB,kBAAkBlX,GAI7B,CCRImX,CAAgBrkB,EAAIqjB,EAAcJ,EAAcE,GAElDjW,EAAQU,eC5BV,SAAwCV,EAASlN,EAAIskB,GAAiB,GACpE,MAAMjc,EAAa,CAAA,EACbkc,EAAkBvkB,EAAG8jB,oBAAoB5W,EAASlN,EAAGwkB,mBAC3D,IAAA,IAASxmB,EAAI,EAAGA,EAAIumB,EAAiBvmB,IAAK,CACxC,MAAMymB,EAAazkB,EAAG0kB,gBAAgBxX,EAASlP,GAC/C,GAAIymB,EAAW/lB,KAAKimB,WAAW,OAC7B,SAEF,MAAMpZ,EAASwW,GAAoB/hB,EAAIykB,EAAWlmB,MAClD8J,EAAWoc,EAAW/lB,MAAQ,CAC5BwP,SAAU,EAEV3C,SACA+D,OAAQH,EAA2B5D,GAAQ+D,OAC3ClO,OAAQ,EACRqO,UAAU,EACV1S,MAAO,EAEX,CACA,MAAM8kB,EAAOxiB,OAAOwiB,KAAKxZ,GACzB,GAAIic,EAAgB,CAClBzC,EAAK+C,KAAK,CAACnY,EAAGC,IAAMD,EAAIC,EAAI,GAAI,GAChC,IAAA,IAAS1O,EAAI,EAAGA,EAAI6jB,EAAKrU,OAAQxP,IAC/BqK,EAAWwZ,EAAK7jB,IAAIkQ,SAAWlQ,EAC/BgC,EAAG6kB,mBAAmB3X,EAASlP,EAAG6jB,EAAK7jB,IAEzCgC,EAAG6jB,YAAY3W,EACjB,MACE,IAAA,IAASlP,EAAI,EAAGA,EAAI6jB,EAAKrU,OAAQxP,IAC/BqK,EAAWwZ,EAAK7jB,IAAIkQ,SAAWlO,EAAG8kB,kBAAkB5X,EAAS2U,EAAK7jB,IAGtE,OAAOqK,CACT,CDL2B0c,CACvB1B,EACArjB,GACC,iDAAiDud,KAAKrQ,EAAQyD,SAEjEzD,EAAQ8X,aEjCV,SAAwB9X,EAASlN,GAC/B,MAAMilB,EAAW,CAAA,EACXC,EAAgBllB,EAAG8jB,oBAAoB5W,EAASlN,EAAGmlB,iBACzD,IAAA,IAASnnB,EAAI,EAAGA,EAAIknB,EAAelnB,IAAK,CACtC,MAAMmZ,EAAcnX,EAAGolB,iBAAiBlY,EAASlP,GAC3CU,EAAOyY,EAAYzY,KAAK+W,QAAQ,WAAY,IAC5C4P,IAAYlO,EAAYzY,KAAK4mB,MAAM,YACnC/mB,EAAOojB,GAAQ3hB,EAAImX,EAAY5Y,MACrC0mB,EAASvmB,GAAQ,CACfA,OACA+B,MAAOzC,EACPO,OACAF,KAAM8Y,EAAY9Y,KAClBgnB,UACAvN,MAAO6G,GAAapgB,EAAM4Y,EAAY9Y,MAE1C,CACA,OAAO4mB,CACT,CFeyBM,CAAelC,EAAcrjB,GACpDkN,EAAQsY,kBGrCV,SAAoBtY,EAASlN,GAC3B,IAAKA,EAAGylB,sBACN,MAAO,CAAA,EACT,MAAMC,EAAgB,CAAA,EAChBC,EAAsB3lB,EAAG8jB,oBAAoB5W,EAASlN,EAAGylB,uBAC/D,IAAA,IAASznB,EAAI,EAAGA,EAAI2nB,EAAqB3nB,IAAK,CAC5C,MAAMU,EAAOsB,EAAG4lB,0BAA0B1Y,EAASlP,GAC7C6nB,EAAoB7lB,EAAG8lB,qBAAqB5Y,EAASxO,GACrDL,EAAO2B,EAAG+lB,+BAA+B7Y,EAASlP,EAAGgC,EAAGgmB,yBAC9DN,EAAchnB,GAAQ,CACpBA,OACA+B,MAAOolB,EACPxnB,OAEJ,CACA,OAAOqnB,CACT,CHqB8BO,CAAW5C,EAAcrjB,GACrDA,EAAGkmB,aAAajD,GAChBjjB,EAAGkmB,aAAa/C,GAChB,MAAMhM,EAAc,CAAA,EACpB,IAAA,MAAWnZ,KAAKkP,EAAQ8X,aAAc,CACpC,MAAMzjB,EAAO2L,EAAQ8X,aAAahnB,GAClCmZ,EAAYnZ,GAAK,CACfkQ,SAAUlO,EAAGmmB,mBAAmB9C,EAAcrlB,GAC9C8Z,MAAO6G,GAAapd,EAAKhD,KAAMgD,EAAKlD,MAExC,CAEA,OADkB,IAAI2f,GAAcqF,EAAclM,EAEpD,CI9CA,MAAMiP,GAAkB,CACtBC,aAAc,EACdC,WAAY,GAEd,MAAMC,GACJ,WAAApqB,CAAYQ,GAEVP,KAAK+W,eAAiB,KACtB/W,KAAKoqB,iBAAmCnnB,OAAOC,OAAO,MACtDlD,KAAKqqB,qBAAuCpnB,OAAOC,OAAO,MAC1DlD,KAAKuD,UAAYhD,EACjBP,KAAKuD,UAAUC,aAAaC,eAAezD,KAAM,mBACnD,CACA,aAAAS,CAAcmD,GACZ5D,KAAK2D,IAAMC,EACX5D,KAAKoqB,iBAAmCnnB,OAAOC,OAAO,MACtDlD,KAAKqqB,qBAAuCpnB,OAAOC,OAAO,MAC1DlD,KAAK+W,eAAiB,IACxB,CAOA,IAAA9V,CAAKH,EAAQgW,GAEX,GADA9W,KAAKsqB,YAAYxpB,EAAOO,WACpByV,EACF,OACFkT,GAAgBC,aAAe,EAC/BD,GAAgBE,WAAa,EAC7B,IAAIK,EAAevqB,KAAKqqB,qBAAqBvpB,EAAOO,UAAU2Q,MACzDuY,IACHA,EAAevqB,KAAKqqB,qBAAqBvpB,EAAOO,UAAU2Q,MAAQhS,KAAKwqB,oBAAoB1pB,EAAQd,OAErGA,KAAKuD,UAAUb,OAAO6B,eAAezD,EAAOO,UAAU+lB,2BACtDmD,EAAavqB,KAAKuD,UAAWzC,EAAQkpB,GACvC,CAKA,kBAAA9oB,CAAmBE,GACjBpB,KAAKuD,UAAUnC,aAAaF,mBAAmBE,EAAcpB,KAAK+W,eAAgBiT,GACpF,CAOA,gBAAAS,CAAiBrpB,EAAckB,EAAM+B,EAAQ,GAC3C,MAAM6M,EAAelR,KAAKuD,UAAUb,OAC9BgoB,EAAc1qB,KAAKmS,gBAAgBnS,KAAK+W,gBACxC4T,EAAmBvpB,EAAawpB,gBACjCD,GACH3qB,KAAKuD,UAAUsnB,IAAI3pB,mBAAmBE,GAExC,MAAMsB,EAAStB,EAAasB,OACtBwB,EAAWgN,EAAajM,aAAavC,GACrCooB,EAAgB5Z,EAAazM,0BAA0BP,GAC7D,GAAIymB,EAAkB,CACpB,MAAM3lB,OAAEA,EAAA/C,KAAQA,GAASb,EACV,IAAX4D,GAAgB/C,IAASS,EAAOyC,KAAKrC,WACvCoO,EAAa9M,eAAeF,EAAU4mB,GAEtC5Z,EAAanM,gBAAgBb,EAAU4mB,EAAe9lB,EAE1D,MAAWkM,EAAavM,wBAAwBT,KAAc4mB,GAC5D5Z,EAAa9M,eAAeF,EAAU4mB,GAExC,MAAMrB,EAAoBzpB,KAAK+W,eAAeqS,kBAAkB9mB,GAAM+B,MAClEqmB,EAAY3I,qBAAqB1d,KAAWymB,IAEhDJ,EAAY3I,qBAAqB1d,GAASymB,EAC1C9qB,KAAKuD,UAAUK,GAAGmnB,oBAAoBL,EAAY5Z,QAAS2Y,EAAmBqB,GAChF,CACA,WAAAR,CAAYxZ,GACV,GAAI9Q,KAAK+W,iBAAmBjG,EAC1B,OACF9Q,KAAK+W,eAAiBjG,EACtB,MAAM4Z,EAAc1qB,KAAKmS,gBAAgBrB,GACzC9Q,KAAK2D,IAAIoI,WAAW2e,EAAY5Z,QAClC,CAKA,eAAAqB,CAAgBrB,GACd,OAAO9Q,KAAKoqB,iBAAiBtZ,EAAQkB,OAAShS,KAAKgrB,mBAAmBla,EACxE,CACA,kBAAAka,CAAmBla,GACjB,MAAMma,EAAMna,EAAQkB,KAEpB,OADAhS,KAAKoqB,iBAAiBa,GAAOrE,GAAgB5mB,KAAK2D,IAAKmN,GAChD9Q,KAAKoqB,iBAAiBa,EAC/B,CACA,OAAAvnB,GACE,IAAA,MAAWunB,KAAOhoB,OAAOwiB,KAAKzlB,KAAKoqB,kBAAmB,CAChCpqB,KAAKoqB,iBAAiBa,GAC9BvnB,UACZ1D,KAAKoqB,iBAAiBa,GAAO,IAC/B,CACAjrB,KAAKoqB,iBAAmB,KACxBpqB,KAAKqqB,qBAAuB,KAC5BrqB,KAAK+W,eAAiB,KACtB/W,KAAKuD,UAAY,KACjBvD,KAAK2D,IAAM,IACb,CASA,mBAAA6mB,CAAoB1pB,EAAQoqB,GAC1B,OCrHJ,SAAgCpqB,EAAQoqB,GACtC,MAAMC,EAAgB,GAChBC,EAAkB,CAAC,0JAOzB,IAAIC,GAAoB,EACpBpB,EAAe,EACnB,MAAMS,EAAcQ,EAAa/Y,gBAAgBrR,EAAOO,WACxD,IAAA,MAAWO,KAAKd,EAAOwqB,OAAQ,CAC7B,MAAMC,EAAQzqB,EAAOwqB,OAAO1pB,GAC5BupB,EAActZ,KAAK,+BACKjQ,2BAExB,IAAA,MAAW6P,KAAK8Z,EAAM5W,UAAW,CAC/B,MAAMkK,EAAW0M,EAAM5W,UAAUlD,GACjC,GAAIoN,aAAoB2M,EACtB,GAAI3M,EAASgM,IAAK,CAChB,MAAMY,EAAU3qB,EAAO4qB,gBAAgB9pB,GAAG+pB,OAAOla,IACjD0Z,EAActZ,KAAK,yFAEWJ,qCACTga,oCACD3qB,EAAOO,UAAU+nB,kBAAkBqC,GAASpnB,0DAGlE,MACE8mB,EAActZ,KAAK,8DAC8BJ,0CAGrD,GAAWoN,aAAoB+M,EAAgB,CAC7C,MAAMH,EAAU3qB,EAAO4qB,gBAAgB9pB,GAAG+pB,OAAOla,IACjD0Z,EAActZ,KAAK,iFAESJ,iCACTga,gCACD3qB,EAAOO,UAAU+nB,kBAAkBqC,GAASpnB,kDAGhE,MAAA,GAAWwa,aAAoB9I,EAAe,CAC5C,MAAM8V,EAAc/qB,EAAO4qB,gBAAgB9pB,GAAG6P,GACxCsJ,EAAc2P,EAAY3P,YAAY8Q,GACxC9Q,IACGsQ,IACHA,GAAoB,EACpBD,EAAgBvZ,KAAK,4EAIvBqZ,EAAavnB,IAAImoB,UAAU/Q,EAAYjJ,SAAUmY,GACjDkB,EAActZ,KAAK,+CACeJ,OAAOwY,6BAEzCA,IAEJ,CACF,CACF,CACA,MAAM8B,EAAiB,IAAIX,KAAoBD,GAAepZ,KAAK,MACnE,OAAO,IAAIia,SAAS,IAAK,IAAK,KAAMD,EACtC,CDqDWE,CAAuBnrB,EAAQoqB,EACxC,CACA,UAAAxkB,GACE1G,KAAK+W,eAAiB,IACxB,EAGFoT,GAAejoB,UAAY,CACzBC,KAAM,CACJC,EAAcuE,aAEhBrE,KAAM,UEpIR,MAAM4pB,GAA4B,CAChCtR,IAAK,gGAIL,YAAa,4JAKb,YAAa,+MAMb,YAAa,kQAObC,IAAK,gGAIL,YAAa,4JAKb,YAAa,+MAMb,YAAa,kQAObsR,IAAK,iGAIL,YAAa,6JAKb,YAAa,gNAMb,YAAa,mQAObhH,KAAM,gGAIN,aAAc,4JAKd,aAAc,+MAMd,aAAc,kQAOd,cAAe,2CACf,cAAe,2CACf,cAAe,4CAEXiH,GAA2B,CAC/BxR,IAAK,8BACL,YAAa,8BACb,YAAa,8BACb,YAAa,8BACb,cAAe,2CACf,cAAe,2CACf,cAAe,2CACfC,IAAK,8BACL,YAAa,8BACb,YAAa,8BACb,YAAa,8BACbsR,IAAK,8BACL,YAAa,8BACb,YAAa,8BACb,YAAa,8BACbhH,KAAM,8BACN,aAAc,8BACd,aAAc,8BACd,aAAc,+BC7GhB,MAAMkH,GAEJ,WAAAtsB,CAAYQ,GAEVP,KAAKssB,OAAS,CAAA,EACdtsB,KAAKusB,sBAAwB,CAAA,EAC7BvsB,KAAKuD,UAAYhD,EACjBP,KAAK4D,GAAK,KACV5D,KAAKssB,OAAS,CAAA,CAChB,CACA,aAAA7rB,CAAcmD,GACZ5D,KAAK4D,GAAKA,CACZ,CAQA,kBAAA1C,CAAmBqqB,EAAOza,EAAS0b,GACjC,MAAM9B,EAAc1qB,KAAKuD,UAAUzC,OAAOqR,gBAAgBrB,GAC1D,IAAKya,EAAMkB,UAAYlB,EAAMmB,WAAahC,EAAY5I,mBAAmByJ,EAAMvqB,KAAM,CACnF0pB,EAAY5I,mBAAmByJ,EAAMvqB,KAAOuqB,EAAMmB,SACjC1sB,KAAK2sB,wBAAwBpB,EAAOza,EACrD8b,CAASlC,EAAY3P,YAAawQ,EAAM1C,SAAU7oB,KAAKuD,UAAWipB,EACpE,CACF,CAMA,uBAAAG,CAAwBpB,EAAOza,GAC7B,OAAO9Q,KAAKusB,sBAAsBhB,EAAMsB,cAAc/b,EAAQkB,OAAShS,KAAK8sB,2BAA2BvB,EAAOza,EAChH,CACA,0BAAAgc,CAA2BvB,EAAOza,GAChC,MAAMic,EAAuB/sB,KAAKusB,sBAAsBhB,EAAMsB,cAAgB7sB,KAAKusB,sBAAsBhB,EAAMsB,YAAc,CAAA,GACvH7mB,EAAKhG,KAAKgtB,cAAczB,EAAOza,EAAQ8X,aAAc,KAK3D,OAJK5oB,KAAKssB,OAAOtmB,KACfhG,KAAKssB,OAAOtmB,GAAMhG,KAAKitB,sBAAsB1B,EAAOza,EAAQ8X,eAE9DmE,EAAqBjc,EAAQkB,MAAQhS,KAAKssB,OAAOtmB,GAC1C+mB,EAAqBjc,EAAQkB,KACtC,CACA,qBAAAib,CAAsB1B,EAAOxQ,GAC3B,OC5CJ,SAA8BwQ,EAAOxQ,GACnC,MAAMoQ,EAAgB,CAAC,8JAQvB,IAAA,MAAWvpB,KAAK2pB,EAAM1C,SAAU,CAC9B,IAAK9N,EAAYnZ,GAAI,CACf2pB,EAAM1C,SAASjnB,aAAc4pB,EAC3BD,EAAM1C,SAASjnB,GAAGipB,IACpBM,EAActZ,KAAK,iEACiCjQ,OAAOA,8BAG3DupB,EAActZ,KAAK,mEACmCjQ,6BAG/C2pB,EAAM1C,SAASjnB,aAAcgqB,GACtCT,EAActZ,KAAK,mEACqCjQ,OAAOA,8BAGjE,QACF,CACA,MAAMsrB,EAAU3B,EAAM4B,kBAAkBvrB,GACxC,IAAIwrB,GAAS,EACb,IAAA,IAAS3b,EAAI,EAAGA,EAAI4b,EAAejc,OAAQK,IAAK,CAC9C,MAAM6b,EAASD,EAAe5b,GAC9B,GAAIyb,EAAQ/qB,OAASmrB,EAAOnrB,MAAQmrB,EAAOnM,KAAK+L,GAAU,CACxD/B,EAActZ,KAAK,WAAWjQ,MAAOyrB,EAAe5b,GAAGyb,SACvDE,GAAS,EACT,KACF,CACF,CACA,IAAKA,EAAQ,CACX,MACMG,GADgC,IAAjBL,EAAQjrB,KAAaiqB,GAA4BE,IACxCc,EAAQ/qB,MAAMkX,QAAQ,WAAY,OAAOzX,gBACvEupB,EAActZ,KAAK,0BACFjQ,yDAEDA,qBACR2rB,KACV,CACF,CACA,OAAO,IAAIvB,SAAS,KAAM,KAAM,WAAY,WAAYb,EAAcpZ,KAAK,MAC7E,CDLWyb,CAAqBjC,EAAOxQ,EACrC,CASA,aAAAiS,CAAczB,EAAOxQ,EAAa0S,GAChC,MAAM5E,EAAW0C,EAAM1C,SACjBjX,EAAU,CAAC,GAAG6b,MACpB,IAAA,MAAW7rB,KAAKinB,EACdjX,EAAQC,KAAKjQ,GACTmZ,EAAYnZ,IACdgQ,EAAQC,KAAKkJ,EAAYnZ,GAAGO,MAGhC,OAAOyP,EAAQG,KAAK,IACtB,CAEA,OAAArO,GACE1D,KAAKuD,UAAY,KACjBvD,KAAKssB,OAAS,IAChB,EAGFD,GAAqBnqB,UAAY,CAC/BC,KAAM,CACJC,EAAcuE,aAEhBrE,KAAM,gBE7ER,MAMMorB,GAAiB,MAAMA,EAC3B,WAAA3tB,CAAYQ,GAMVP,KAAK2tB,kBAAmB,EACxB3tB,KAAK4D,GAAK,KACV5D,KAAK4tB,QAAU,EACf5tB,KAAK6tB,cAAgB,EACrB7tB,KAAKwB,UAAY,OACjBxB,KAAK8tB,UAAW,EAChB9tB,KAAKib,IAAM,GACXjb,KAAKib,IApBK,GAoBQjb,KAAK+tB,SACvB/tB,KAAKib,IApBM,GAoBQjb,KAAKguB,UACxBhuB,KAAKib,IApBO,GAoBQjb,KAAKiuB,YACzBjuB,KAAKib,IApBU,GAoBQjb,KAAKkuB,aAC5BluB,KAAKib,IApBO,GAoBQjb,KAAKmuB,aACzBnuB,KAAKib,IApBU,GAoBQjb,KAAKouB,aAC5BpuB,KAAKquB,OAAS,GACdruB,KAAKsuB,aAAepuB,EAAMC,QAC1BI,EAAS0U,aAAagD,qBAAqBvX,IAAIV,KACjD,CACA,oBAAAiY,CAAqBhD,GACnBjV,KAAK2tB,kBAAoB1Y,EAAaG,OAClCpV,KAAKuuB,UACPvuB,KAAKmuB,aAAanuB,KAAKwuB,YAEvBxuB,KAAKyuB,iBAAkB,CAE3B,CACA,aAAAhuB,CAAcmD,GACZ5D,KAAK4D,GAAKA,EACV5D,KAAK0uB,cC1CT,SAAkC9qB,GAChC,MAAM+qB,EAAW,CAAA,EAWjB,GAVAA,EAASC,OAAS,CAAChrB,EAAGirB,IAAKjrB,EAAGkrB,qBAC9BH,EAASjuB,IAAM,CAACkD,EAAGirB,IAAKjrB,EAAGirB,KAC3BF,EAASI,SAAW,CAACnrB,EAAGorB,UAAWprB,EAAGkrB,oBAAqBlrB,EAAGirB,IAAKjrB,EAAGkrB,qBACtEH,EAASM,OAAS,CAACrrB,EAAGirB,IAAKjrB,EAAGsrB,oBAAqBtrB,EAAGirB,IAAKjrB,EAAGkrB,qBAC9DH,EAASQ,KAAO,CAAC,EAAG,GACpBR,EAAS,cAAgB,CAAC/qB,EAAGwrB,UAAWxrB,EAAGkrB,oBAAqBlrB,EAAGirB,IAAKjrB,EAAGkrB,qBAC3EH,EAAS,WAAa,CAAC/qB,EAAGwrB,UAAWxrB,EAAGirB,IAAKjrB,EAAGirB,IAAKjrB,EAAGirB,KACxDF,EAAS,cAAgB,CAAC/qB,EAAGwrB,UAAWxrB,EAAGsrB,oBAAqBtrB,EAAGirB,IAAKjrB,EAAGkrB,qBAC3EH,EAASU,MAAQ,CAACzrB,EAAGwV,KAAMxV,EAAGkrB,qBACXlrB,aAAcoE,EAAWC,MAAMsB,2BAI3C,CACL,MAAM+lB,EAAM1rB,EAAGqG,aAAa,oBACxBqlB,IACFX,EAASY,IAAM,CAAC3rB,EAAGirB,IAAKjrB,EAAGirB,IAAKjrB,EAAGirB,IAAKjrB,EAAGirB,IAAKS,EAAIE,QAASF,EAAIE,SACjEb,EAAStlB,IAAM,CAACzF,EAAGirB,IAAKjrB,EAAGirB,IAAKjrB,EAAGirB,IAAKjrB,EAAGirB,IAAKS,EAAIG,QAASH,EAAIG,SAErE,MAREd,EAASY,IAAM,CAAC3rB,EAAGirB,IAAKjrB,EAAGirB,IAAKjrB,EAAGirB,IAAKjrB,EAAGirB,IAAKjrB,EAAG8rB,IAAK9rB,EAAG8rB,KAC3Df,EAAStlB,IAAM,CAACzF,EAAGirB,IAAKjrB,EAAGirB,IAAKjrB,EAAGirB,IAAKjrB,EAAGirB,IAAKjrB,EAAG+rB,IAAK/rB,EAAG+rB,KAQ7D,OAAOhB,CACT,CDmByBiB,CAAyBhsB,GAC9C5D,KAAK0G,YACP,CAKA,GAAAhF,CAAID,GAEF,GADAA,IAAUA,EAAQzB,KAAKsuB,cACnBtuB,KAAK4tB,UAAYnsB,EAAM0D,KAAM,CAC/B,IAAI0qB,EAAO7vB,KAAK4tB,QAAUnsB,EAAM0D,KAC5BvD,EAAI,EACR,KAAOiuB,GACM,EAAPA,GACF7vB,KAAKib,IAAIrZ,GAAGkuB,KAAK9vB,QAASyB,EAAM0D,KAAO,GAAKvD,IAE9CiuB,IAAS,EACTjuB,IAEF5B,KAAK4tB,QAAUnsB,EAAM0D,IACvB,CACA,IAAA,IAASvD,EAAI,EAAGA,EAAI5B,KAAKquB,OAAOjd,OAAQxP,IACtC5B,KAAKquB,OAAOzsB,GAAG5B,KAAMyB,EAEzB,CAKA,UAAAsuB,CAAWtuB,GACTA,IAAUA,EAAQzB,KAAKsuB,cACvB,IAAA,IAAS1sB,EAAI,EAAGA,EAAI5B,KAAKib,IAAI7J,OAAQxP,IACnC5B,KAAKib,IAAIrZ,GAAGkuB,KAAK9vB,QAASyB,EAAM0D,KAAO,GAAKvD,IAE9C,IAAA,IAASA,EAAI,EAAGA,EAAI5B,KAAKquB,OAAOjd,OAAQxP,IACtC5B,KAAKquB,OAAOzsB,GAAG5B,KAAMyB,GAEvBzB,KAAK4tB,QAAUnsB,EAAM0D,IACvB,CAKA,QAAA4oB,CAASrS,GACP1b,KAAKgwB,aAAatC,EAAeuC,gBAAiBvU,GAClD1b,KAAK4D,GAAG8X,EAAQ,SAAW,WAAW1b,KAAK4D,GAAGssB,MAChD,CAKA,SAAAlC,CAAUtS,GACR1b,KAAKgwB,aAAatC,EAAeyC,oBAAqBzU,GACtD1b,KAAK4D,GAAG8X,EAAQ,SAAW,WAAW1b,KAAK4D,GAAGwsB,oBAChD,CAKA,YAAAlC,CAAaxS,GACX1b,KAAK4D,GAAG8X,EAAQ,SAAW,WAAW1b,KAAK4D,GAAGysB,WAChD,CAKA,YAAAjC,CAAa1S,GACX1b,KAAK4D,GAAG0sB,UAAU5U,EACpB,CAKA,WAAAuS,CAAYvS,GACV1b,KAAKuuB,UAAY7S,EACjB1b,KAAK4D,GAAG8X,EAAQ,SAAW,WAAW1b,KAAK4D,GAAG2sB,WAC1CvwB,KAAKuuB,WAAavuB,KAAKyuB,iBACzBzuB,KAAKmuB,aAAanuB,KAAKwuB,WAE3B,CAKA,YAAAL,CAAazS,GACX1b,KAAKwuB,WAAa9S,EAClB1b,KAAKyuB,iBAAkB,EACvB,MAAM+B,EAAWxwB,KAAK2tB,kBAAoBjS,EAAQA,EAC9C1b,KAAKywB,eAAiBD,IACxBxwB,KAAKywB,aAAeD,EACpBxwB,KAAK4D,GAAG8sB,UAAU1wB,KAAK4D,GAAG4sB,EAAW,KAAO,QAEhD,CAKA,YAAAG,CAAajV,GAIX,GAHK1b,KAAK0uB,cAAchT,KACtBA,EAAQ,UAENA,IAAU1b,KAAKwB,UACjB,OAEFxB,KAAKwB,UAAYka,EACjB,MAAMzB,EAAOja,KAAK0uB,cAAchT,GAC1B9X,EAAK5D,KAAK4D,GACI,IAAhBqW,EAAK7I,OACPxN,EAAGgtB,UAAU3W,EAAK,GAAIA,EAAK,IAE3BrW,EAAGitB,kBAAkB5W,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAEnC,IAAhBA,EAAK7I,QACPpR,KAAK8tB,UAAW,EAChBlqB,EAAGktB,sBAAsB7W,EAAK,GAAIA,EAAK,KAC9Bja,KAAK8tB,WACd9tB,KAAK8tB,UAAW,EAChBlqB,EAAGktB,sBAAsBltB,EAAGmtB,SAAUntB,EAAGmtB,UAE7C,CAMA,gBAAAC,CAAiBtV,EAAOuV,GACtBjxB,KAAK4D,GAAGiqB,cAAcnS,EAAOuV,EAC/B,CAEA,UAAAvqB,GACE1G,KAAKywB,cAAe,EACpBzwB,KAAKwuB,YAAa,EAClBxuB,KAAKuuB,WAAY,EACjBvuB,KAAKyuB,iBAAkB,EACvBzuB,KAAK2tB,kBAAmB,EACxB3tB,KAAK4D,GAAG8sB,UAAU1wB,KAAK4D,GAAGstB,KAC1BlxB,KAAK4D,GAAGutB,YAAYnxB,KAAK4D,GAAGwtB,qBAAqB,GACjDpxB,KAAK+vB,WAAW/vB,KAAKsuB,cACrBtuB,KAAK8tB,UAAW,EAChB9tB,KAAKwB,UAAY,GACjBxB,KAAK2wB,aAAa,SACpB,CAUA,YAAAX,CAAaqB,EAAM3V,GACjB,MAAMrX,EAAQrE,KAAKquB,OAAOzS,QAAQyV,GAC9B3V,IAAmB,IAAVrX,EACXrE,KAAKquB,OAAOxc,KAAKwf,GACP3V,IAAmB,IAAVrX,GACnBrE,KAAKquB,OAAOiD,OAAOjtB,EAAO,EAE9B,CAMA,sBAAO4rB,CAAgBsB,EAAQ9vB,GAC7B8vB,EAAOZ,aAAalvB,EAAMD,UAC5B,CAMA,0BAAO2uB,CAAoBoB,EAAQ9vB,GACjC8vB,EAAOP,iBAAiB,EAAGvvB,EAAMosB,cACnC,CAEA,OAAAnqB,GACE1D,KAAK4D,GAAK,KACV5D,KAAKquB,OAAOjd,OAAS,CACvB,GAGFsc,GAAexrB,UAAY,CACzBC,KAAM,CACJC,EAAcuE,aAEhBrE,KAAM,SAER,IAAIkvB,GAAgB9D,GEtOpB,MAAM+D,GACJ,WAAA1xB,CAAY+B,GACV9B,KAAKmV,OAAS5I,EAAW+Q,WACzBtd,KAAK8B,QAAUA,EACf9B,KAAKmI,OAAQ,EACbnI,KAAKoI,QAAS,EACdpI,KAAKmC,KAAOsK,EAASI,cACrB7M,KAAKygB,eAAiBpU,EAAWqlB,KACjC1xB,KAAKmP,OAAS9C,EAAWqlB,KACzB1xB,KAAK2xB,YAAc,CACrB,ECZF,MAAMC,GAA8B,CAClC5rB,GAAI,SACJ,MAAA6rB,CAAO9c,EAAQiL,EAAWpc,GACpBoc,EAAU7X,QAAU4M,EAAO5M,OAAS6X,EAAU5X,SAAW2M,EAAO3M,OAClExE,EAAGkuB,cACDluB,EAAG0Z,WACH,EACA,EACA,EACAvI,EAAO5M,MACP4M,EAAO3M,OACP4X,EAAU7Q,OACV6Q,EAAU7d,KACV4S,EAAO8J,UAGTjb,EAAGmuB,WACD/R,EAAU7K,OACV,EACA6K,EAAUS,eACV1L,EAAO5M,MACP4M,EAAO3M,OACP,EACA4X,EAAU7Q,OACV6Q,EAAU7d,KACV4S,EAAO8J,UAGXmB,EAAU7X,MAAQ4M,EAAO5M,MACzB6X,EAAU5X,OAAS2M,EAAO3M,MAC5B,GC9BI4pB,GAAsB,CAC1B,kBAAkB,EAClB,uBAAuB,EACvB,kBAAkB,EAClB,uBAAuB,EACvB,kBAAkB,EAClB,uBAAuB,EACvB,eAAe,EACf,eAAe,EACf,gBAAgB,EAChB,gBAAgB,EAChB,mBAAmB,EACnB,kBAAkB,EAClB,kBAAkB,EAClB,uBAAuB,EAGvB,kBAAkB,EAClB,uBAAuB,EACvB,oBAAoB,EACpB,yBAAyB,EACzB,mBAAmB,EACnB,wBAAwB,EACxB,gBAAgB,EAChB,gBAAgB,EAChB,iBAAiB,EACjB,iBAAiB,EAGjB,kBAAkB,EAClB,uBAAuB,EACvB,kBAAkB,EAClB,uBAAuB,EACvB,kBAAkB,EAClB,uBAAuB,EACvB,kBAAkB,EAClB,uBAAuB,EACvB,kBAAkB,EAClB,uBAAuB,EACvB,kBAAkB,EAClB,uBAAuB,EACvB,kBAAkB,EAClB,uBAAuB,EACvB,kBAAkB,EAClB,uBAAuB,EACvB,mBAAmB,EACnB,wBAAwB,EACxB,mBAAmB,EACnB,wBAAwB,EACxB,mBAAmB,EACnB,wBAAwB,EACxB,oBAAoB,EACpB,yBAAyB,EACzB,oBAAoB,EACpB,yBAAyB,EACzB,oBAAoB,EACpB,yBAAyB,GAErBC,GAAoC,CACxCjsB,GAAI,aACJ,MAAA6rB,CAAO9c,EAAQiL,EAAWpc,GACxBA,EAAGutB,YAAYvtB,EAAGsuB,iBAAkB,GACpC,IAAIC,EAAWpd,EAAO+K,WAClBsS,EAAYrd,EAAOgJ,YACvB,MAAMsU,IAAeL,GAAoBjd,EAAO5F,QAChD,IAAA,IAASvN,EAAI,EAAGA,EAAImT,EAAO8J,SAASzN,OAAQxP,IAAK,CAC/C,MAAM0wB,EAAcvd,EAAO8J,SAASjd,GAChCywB,EACFzuB,EAAG2uB,qBACD3uB,EAAG0Z,WACH1b,EACAoe,EAAUS,eACV0R,EACAC,EACA,EACAE,GAGF1uB,EAAGmuB,WACDnuB,EAAG0Z,WACH1b,EACAoe,EAAUS,eACV0R,EACAC,EACA,EACApS,EAAU7Q,OACV6Q,EAAU7d,KACVmwB,GAGJH,EAAW/oB,KAAKC,IAAI8oB,GAAY,EAAG,GACnCC,EAAYhpB,KAAKC,IAAI+oB,GAAa,EAAG,EACvC,CACF,GC7FII,GAAwB,CAC5BxsB,GAAI,QACJ,MAAA6rB,CAAO9c,EAAQiL,EAAWpc,EAAI0F,GAC5B,MAAMmpB,EAAUzS,EAAU7X,MACpBuqB,EAAW1S,EAAU5X,OACrBuqB,EAAe5d,EAAO+K,WACtB8S,EAAgB7d,EAAOgJ,YACvB8U,EAAgB9d,EAAO8d,cACvBC,EAAiB/d,EAAO+d,eAC1BD,EAAgBF,GAAgBG,EAAiBF,GAC/CH,IAAYE,GAAgBD,IAAaE,GAC3ChvB,EAAGmuB,WACD/R,EAAU7K,OACV,EACA6K,EAAUS,eACVkS,EACAC,EACA,EACA5S,EAAU7Q,OACV6Q,EAAU7d,KACV,MAGiB,IAAjBmH,EACF1F,EAAGkuB,cACDluB,EAAG0Z,WACH,EACA,EACA,EACAuV,EACAC,EACA9S,EAAU7Q,OACV6Q,EAAU7d,KACV4S,EAAO8J,UAGTjb,EAAGkuB,cACDluB,EAAG0Z,WACH,EACA,EACA,EACA0C,EAAU7Q,OACV6Q,EAAU7d,KACV4S,EAAO8J,WAGF4T,IAAYE,GAAgBD,IAAaE,EAClDhvB,EAAGkuB,cACDluB,EAAG0Z,WACH,EACA,EACA,EACA0C,EAAU7Q,OACV6Q,EAAU7d,KACV4S,EAAO8J,UAEiB,IAAjBvV,EACT1F,EAAGmuB,WACD/R,EAAU7K,OACV,EACA6K,EAAUS,eACVkS,EACAC,EACA,EACA5S,EAAU7Q,OACV6Q,EAAU7d,KACV4S,EAAO8J,UAGTjb,EAAGmuB,WACD/R,EAAU7K,OACV,EACA6K,EAAUS,eACVT,EAAU7Q,OACV6Q,EAAU7d,KACV4S,EAAO8J,UAGXmB,EAAU7X,MAAQwqB,EAClB3S,EAAU5X,OAASwqB,CACrB,GC9EIG,GAAwB,CAC5B/sB,GAAI,QACJ,MAAA6rB,CAAO9c,EAAQiL,EAAWpc,EAAI0F,GACvByL,EAAOie,QAcZR,GAAsBX,OAAO9c,EAAQiL,EAAWpc,EAAI0F,GAblD1F,EAAGmuB,WACD/R,EAAU7K,OACV,EACA6K,EAAUS,eACV,EACA,EACA,EACAT,EAAU7Q,OACV6Q,EAAU7d,KACV,KAKN,GCpBI8wB,GAAsB,CAC1BC,OAAQ,KACRC,QAAS,MAELC,GAA4B,CAChCF,OAAQ,CACNA,OAAQ,KACRC,QAAS,MAEXA,QAAS,CACPD,OAAQ,KACRC,QAAS,OAGPE,GAAsB,CAC1B,gBAAiB,MACjBC,OAAQ,MACR,gBAAiB,OAEbC,GAAyB,CAC7Blb,MAAO,IACPK,KAAM,IACNH,MAAO,IACP,aAAc,IACdM,QAAS,IACT,YAAa,IACb,gBAAiB,IACjBV,OAAQ,KCzBV,SAASqb,GAAiBC,EAAO7vB,EAAI8vB,EAASC,EAAgBC,EAAgBC,EAAYC,EAAYC,GACpG,MAAMC,EAAYH,EAClB,IAAKE,GAAwC,WAAvBN,EAAMQ,cAAoD,WAAvBR,EAAMS,cAAoD,WAAvBT,EAAMU,aAA2B,CAC3H,MAAMC,EAAYf,GAAoBS,EAAa,gBAAkBL,EAAMQ,cACrEI,EAAYhB,GAAoBS,EAAa,gBAAkBL,EAAMS,cACrEI,EAAYjB,GAAoBS,EAAa,gBAAkBL,EAAMU,cAC3EvwB,EAAGgwB,GAAgBI,EAAWpwB,EAAG2wB,eAAgBH,GACjDxwB,EAAGgwB,GAAgBI,EAAWpwB,EAAG4wB,eAAgBH,GAC7CzwB,EAAG6wB,gBACL7wB,EAAGgwB,GAAgBI,EAAWpwB,EAAG6wB,eAAgBH,EACrD,CAIA,GAHKP,GAAqC,WAApBN,EAAMiB,WAC1B9wB,EAAGgwB,GAAgBI,EAAWpwB,EAAG+wB,mBAAoB1B,GAAoBQ,EAAMiB,YAE7EhB,GACF,IAAKK,GAAwC,WAAvBN,EAAMmB,aAA2B,CACrD,MAAMC,EAAezB,GAA0BK,EAAMqB,WAAWrB,EAAMmB,cACtEhxB,EAAGgwB,GAAgBI,EAAWpwB,EAAGmxB,mBAAoBF,EACvD,OAEAjxB,EAAGgwB,GAAgBI,EAAWpwB,EAAGmxB,mBAAoB9B,GAAoBQ,EAAMqB,YAEjF,GAAInB,GAAkBF,EAAMuB,cAAgB,EAAG,CAC7C,MAAMC,EAAQ7rB,KAAKmmB,IAAIkE,EAAMuB,cAAepxB,EAAGsT,aAAayc,EAAeuB,iCAC3EtxB,EAAGgwB,GAAgBI,EAAWL,EAAewB,2BAA4BF,EAC3E,CACIxB,EAAMlZ,SACR3W,EAAGgwB,GAAgBI,EAAWpwB,EAAGwxB,qBAAsB7B,GAAuBE,EAAMlZ,SAExF,CChBA,MAAM8a,GACJ,WAAAt1B,CAAYQ,GACVP,KAAKs1B,gBAAkB,GACvBt1B,KAAKu1B,YAA8BtyB,OAAOC,OAAO,MACjDlD,KAAKw1B,YAA8BvyB,OAAOC,OAAO,MACjDlD,KAAKy1B,eAAiB,GACtBz1B,KAAK01B,wBAAyB,EAC9B11B,KAAK21B,eAAiC1yB,OAAOC,OAAO,MACpDlD,KAAK41B,SAAW,CACdC,MAAOrD,GACP9vB,OAAQkvB,GACRkE,MAAO/C,GACPV,WAAYJ,IAEdjyB,KAAK+1B,mBAAoB,EAEzB/1B,KAAKg2B,sBAAuB,EAC5Bh2B,KAAKuD,UAAYhD,EACjBP,KAAKuD,UAAUC,aAAaC,eAAezD,KAAM,eACjDA,KAAKuD,UAAUC,aAAaC,eAAezD,KAAM,cACnD,CACA,aAAAS,CAAcmD,GACZ5D,KAAK2D,IAAMC,EACN5D,KAAKi2B,6BACRj2B,KAAKi2B,2BCrCX,SAAqCryB,EAAIyD,GACvC,IAAI+D,EAAO,CAAA,EACP8qB,EAAatyB,EAAG8tB,KAapB,OAZM9tB,aAAcoE,EAAWC,MAAMsB,2BAM1BlC,EAAW+D,OACpBA,EAAO,CACL,kBAAmB/D,EAAW+D,KAAK+qB,iBACnC,kBAAmB9uB,EAAW+D,KAAK+qB,oBARrC/qB,EAAO,CACL,kBAAmBxH,EAAGwyB,aACtB,kBAAmBxyB,EAAGwyB,cAExBF,EAAatyB,EAAGyyB,OAOX,CAELC,QAAS1yB,EAAG2yB,GACZC,QAAS5yB,EAAG6yB,SACZC,OAAQ9yB,EAAG+yB,KACXC,OAAQhzB,EAAGizB,IAEXC,QAASlzB,EAAGmzB,MACZC,QAASpzB,EAAGqzB,KACZC,SAAUtzB,EAAGuzB,KACbC,SAAUxzB,EAAGyzB,IACbC,SAAU1zB,EAAG2zB,UACbC,QAAS5zB,EAAG6zB,MACZC,QAAS9zB,EAAG+zB,KAEZC,QAASh0B,EAAGi0B,MACZC,QAASl0B,EAAGm0B,KACZC,SAAUp0B,EAAGq0B,KACbC,SAAUt0B,EAAGu0B,OACbC,SAAUx0B,EAAGy0B,MACbC,UAAW10B,EAAG20B,MACdC,WAAY50B,EAAG8tB,QACZtmB,EAEHqtB,WAAY70B,EAAG80B,YACfC,UAAW/0B,EAAGg1B,QACdC,UAAWj1B,EAAGk1B,OACd5C,aACA6C,aAAcn1B,EAAGo1B,QACjBC,aAAcr1B,EAAGs1B,SACjBC,cAAev1B,EAAGw1B,eAElBC,SAAUz1B,EAAG01B,OACbC,SAAU31B,EAAG41B,MACbC,UAAW71B,EAAG81B,MACdC,WAAY/1B,EAAGg2B,SACfC,WAAYj2B,EAAGk2B,QACfC,YAAan2B,EAAGo2B,QAEhBC,WAAYr2B,EAAGs2B,SACfC,WAAYv2B,EAAGw2B,QACfC,YAAaz2B,EAAG02B,QAEhBC,SAAU32B,EAAG42B,eACbC,aAAc72B,EAAG82B,kBACjBC,YAAa/2B,EAAGg3B,kBAChB,uBAAwBh3B,EAAGmd,iBAC3B8Z,aAAcj3B,EAAGk3B,mBACjB,wBAAyBl3B,EAAGm3B,qBAEzB1zB,EAAW8C,KAAO,CACnB,iBAAkB9C,EAAW8C,KAAK6wB,8BAClC,iBAAkB3zB,EAAW8C,KAAK8wB,8BAClC,iBAAkB5zB,EAAW8C,KAAK+wB,+BAChC,CAAA,KACD7zB,EAAW+C,UAAY,CACxB,sBAAuB/C,EAAW+C,UAAU+wB,oCAC5C,sBAAuB9zB,EAAW+C,UAAUgxB,oCAC5C,sBAAuB/zB,EAAW+C,UAAUixB,qCAC1C,CAAA,KACDh0B,EAAWsD,KAAO,CACnB,cAAetD,EAAWsD,KAAK2wB,yBAC/B,cAAej0B,EAAWsD,KAAK4wB,gCAC/B,eAAgBl0B,EAAWsD,KAAK6wB,+BAChC,eAAgBn0B,EAAWsD,KAAK8wB,uCAC9B,CAAA,KACDp0B,EAAWqD,KAAO,CACnB,iBAAkBrD,EAAWqD,KAAKgxB,qCAClC,kBAAmBr0B,EAAWqD,KAAKixB,uCACnC,iBAAkBt0B,EAAWqD,KAAKkxB,+BAClC,sBAAuBv0B,EAAWqD,KAAKmxB,sCACrC,CAAA,KACDx0B,EAAWgD,IAAM,CAClB,iBAAkBhD,EAAWgD,IAAIyxB,qBACjC,sBAAuBz0B,EAAWgD,IAAI0xB,sBACtC,mBAAoB10B,EAAWgD,IAAI2xB,yCACnC,wBAAyB30B,EAAWgD,IAAI4xB,0CACxC,kBAAmB50B,EAAWgD,IAAI6xB,0BAClC,uBAAwB70B,EAAWgD,IAAI8xB,iCACvC,eAAgB90B,EAAWgD,IAAI+xB,mBAE/B,gBAAiB/0B,EAAWgD,IAAIgyB,4BAE9B,CAAA,KACDh1B,EAAWoD,KAAO,CACnB,iBAAkBpD,EAAWoD,KAAK6xB,6BAClC,sBAAuBj1B,EAAWoD,KAAK8xB,qCACvC,iBAAkBl1B,EAAWoD,KAAK+xB,6BAClC,sBAAuBn1B,EAAWoD,KAAKgyB,qCACvC,iBAAkBp1B,EAAWoD,KAAKiyB,6BAClC,sBAAuBr1B,EAAWoD,KAAKkyB,qCACvC,iBAAkBt1B,EAAWoD,KAAKmyB,6BAClC,sBAAuBv1B,EAAWoD,KAAKoyB,qCACvC,iBAAkBx1B,EAAWoD,KAAKqyB,6BAClC,sBAAuBz1B,EAAWoD,KAAKsyB,qCACvC,iBAAkB11B,EAAWoD,KAAKuyB,6BAClC,sBAAuB31B,EAAWoD,KAAKwyB,qCACvC,iBAAkB51B,EAAWoD,KAAKyyB,6BAClC,sBAAuB71B,EAAWoD,KAAK0yB,qCACvC,iBAAkB91B,EAAWoD,KAAK2yB,6BAClC,sBAAuB/1B,EAAWoD,KAAK4yB,qCACvC,kBAAmBh2B,EAAWoD,KAAK6yB,8BACnC,uBAAwBj2B,EAAWoD,KAAK8yB,sCACxC,kBAAmBl2B,EAAWoD,KAAK+yB,8BACnC,uBAAwBn2B,EAAWoD,KAAKgzB,sCACxC,kBAAmBp2B,EAAWoD,KAAKizB,8BACnC,uBAAwBr2B,EAAWoD,KAAKkzB,sCACxC,mBAAoBt2B,EAAWoD,KAAKmzB,+BACpC,wBAAyBv2B,EAAWoD,KAAKozB,uCACzC,mBAAoBx2B,EAAWoD,KAAKqzB,+BACpC,wBAAyBz2B,EAAWoD,KAAKszB,uCACzC,mBAAoB12B,EAAWoD,KAAKuzB,+BACpC,wBAAyB32B,EAAWoD,KAAKwzB,wCACvC,CAAA,EAER,CD7FwCC,CAA4Bt6B,EAAI5D,KAAKuD,UAAUsE,QAAQR,YACzFrH,KAAKm+B,iBExCX,SAA2Bv6B,GACzB,MAAO,CAEL0yB,QAAS1yB,EAAGiJ,cACZ2pB,QAAS5yB,EAAGoJ,KACZ0pB,OAAQ9yB,EAAGiJ,cACX+pB,OAAQhzB,EAAGoJ,KAEX8pB,QAASlzB,EAAG2J,eACZypB,QAASpzB,EAAG8J,MACZwpB,SAAUtzB,EAAGqK,WACbmpB,SAAUxzB,EAAGiJ,cACbyqB,SAAU1zB,EAAGoJ,KACbwqB,QAAS5zB,EAAGiJ,cACZ6qB,QAAS9zB,EAAGoJ,KAEZ4qB,QAASh0B,EAAG6K,aACZqpB,QAASl0B,EAAGkL,IACZkpB,SAAUp0B,EAAGwK,MACb8pB,SAAUt0B,EAAG2J,eACb6qB,SAAUx0B,EAAG8J,MACb4qB,UAAW10B,EAAGqK,WACduqB,WAAY50B,EAAGiJ,cACf,kBAAmBjJ,EAAGiJ,cAEtB4rB,WAAY70B,EAAGoJ,KACf2rB,UAAW/0B,EAAGiJ,cACdgsB,UAAWj1B,EAAGoJ,KACdkpB,WAAYtyB,EAAGiJ,cACf,kBAAmBjJ,EAAGiJ,cACtBksB,aAAcn1B,EAAGw6B,yBACjBnF,aAAcr1B,EAAGy6B,4BACjBlF,cAAev1B,EAAG06B,6BAElBjF,SAAUz1B,EAAG6K,aACb8qB,SAAU31B,EAAGkL,IACb2qB,UAAW71B,EAAGwK,MACdurB,WAAY/1B,EAAG2J,eACfssB,WAAYj2B,EAAG8J,MACfqsB,YAAan2B,EAAGqK,WAEhBgsB,WAAYr2B,EAAG6K,aACf0rB,WAAYv2B,EAAGkL,IACfurB,YAAaz2B,EAAGwK,MAEhBmsB,SAAU32B,EAAGiJ,cACb4tB,aAAc72B,EAAG2J,eACjBotB,YAAa/2B,EAAG6K,aAChB,uBAAwB7K,EAAG26B,kBAC3B1D,aAAcj3B,EAAGwK,MACjB,wBAAyBxK,EAAG46B,+BAEhC,CFZ8BC,CAAkB76B,GAC1C5D,KAAK0+B,mBGzCX,SAA6B96B,GAC3B,MAAO,CAEL0yB,QAAS1yB,EAAG+6B,IACZnI,QAAS5yB,EAAG+6B,IACZjI,OAAQ9yB,EAAG+6B,IACX/H,OAAQhzB,EAAG+6B,IAEX7H,QAASlzB,EAAG+6B,IACZ3H,QAASpzB,EAAG+6B,IACZzH,SAAUtzB,EAAG+6B,IACbvH,SAAUxzB,EAAGg7B,GACbtH,SAAU1zB,EAAGg7B,GACbpH,QAAS5zB,EAAGg7B,GACZlH,QAAS9zB,EAAGg7B,GAEZhH,QAASh0B,EAAG+6B,IACZ7G,QAASl0B,EAAG+6B,IACZ3G,SAAUp0B,EAAG+6B,IACbzG,SAAUt0B,EAAGg7B,GACbxG,SAAUx0B,EAAGg7B,GACbtG,UAAW10B,EAAGg7B,GACdpG,WAAY50B,EAAG8tB,KACf,kBAAmB9tB,EAAG8tB,KAEtB+G,WAAY70B,EAAG8tB,KACfiH,UAAW/0B,EAAG8tB,KACdmH,UAAWj1B,EAAG8tB,KACdwE,WAAYtyB,EAAG8tB,KACf,kBAAmB9tB,EAAG8tB,KACtBqH,aAAcn1B,EAAGi7B,IACjB5F,aAAcr1B,EAAG8tB,KACjByH,cAAev1B,EAAGi7B,IAElBxF,SAAUz1B,EAAGg7B,GACbrF,SAAU31B,EAAGg7B,GACbnF,UAAW71B,EAAGg7B,GACdjF,WAAY/1B,EAAG8tB,KACfmI,WAAYj2B,EAAG8tB,KACfqI,YAAan2B,EAAG8tB,KAEhBuI,WAAYr2B,EAAG8tB,KACfyI,WAAYv2B,EAAG8tB,KACf2I,YAAaz2B,EAAG8tB,KAEhB6I,SAAU32B,EAAG42B,eACbC,aAAc72B,EAAGk7B,gBACjBnE,YAAa/2B,EAAGk7B,gBAChB,uBAAwBl7B,EAAGqd,cAC3B4Z,aAAcj3B,EAAGk7B,gBACjB,wBAAyBl7B,EAAGqd,cAEhC,CHXgC8d,CAAoBn7B,IAEhD5D,KAAKu1B,YAA8BtyB,OAAOC,OAAO,MACjDlD,KAAKw1B,YAA8BvyB,OAAOC,OAAO,MACjDlD,KAAK21B,eAAiC1yB,OAAOC,OAAO,MACpDlD,KAAK+1B,mBAAoB,EACzB,IAAA,IAASn0B,EAAI,EAAGA,EAAI,GAAIA,IACtB5B,KAAKiB,KAAK4T,EAAQmqB,MAAOp9B,EAE7B,CAMA,UAAAq9B,CAAWlqB,GACT/U,KAAKiB,KAAK8T,EACZ,CACA,IAAA9T,CAAKa,EAASgQ,EAAW,GACvB,MAAMiD,EAASjT,EAAQiT,OACnBjT,GACF9B,KAAK+f,WAAWhL,EAAQjD,GACpB9R,KAAKg2B,sBACPh2B,KAAKk/B,aAAanqB,EAAO0e,MAAO3hB,KAGlC9R,KAAK+f,WAAW,KAAMjO,GAClB9R,KAAKg2B,sBACPh2B,KAAKk/B,aAAa,KAAMptB,GAG9B,CACA,UAAAiO,CAAWhL,EAAQjD,EAAW,GAC5B,MAAMlO,EAAK5D,KAAK2D,IAEhB,GADAoR,EAAOoqB,SAAWn/B,KAAKuD,UAAU67B,UAAUv9B,MACvC7B,KAAKy1B,eAAe3jB,KAAciD,EAAQ,CAC5C/U,KAAKy1B,eAAe3jB,GAAYiD,EAChC/U,KAAKq/B,kBAAkBvtB,GACvBiD,IAAWA,EAASF,EAAQmqB,MAAMjqB,QAClC,MAAMiL,EAAYhgB,KAAKigB,YAAYlL,GACnCnR,EAAG07B,YAAYtf,EAAU7K,OAAQ6K,EAAUle,QAC7C,CACF,CACA,YAAAo9B,CAAazL,EAAO3hB,EAAW,GAC7B,MAAMlO,EAAK5D,KAAK2D,IAChB,IAAK8vB,EAGH,OAFAzzB,KAAK21B,eAAe7jB,GAAY,UAChClO,EAAG27B,YAAYztB,EAAU,MAG3B,MAAM0tB,EAAUx/B,KAAKy/B,cAAchM,GAC/BzzB,KAAK21B,eAAe7jB,KAAc0tB,IACpCx/B,KAAK21B,eAAe7jB,GAAY0tB,EAChC57B,EAAG27B,YAAYztB,EAAU0tB,GAE7B,CACA,MAAAvuB,CAAOnP,GACL,MAAMiT,EAASjT,EAAQiT,OACjB2qB,EAAgB1/B,KAAKy1B,eACrB7xB,EAAK5D,KAAK2D,IAChB,IAAA,IAAS/B,EAAI,EAAGA,EAAI89B,EAActuB,OAAQxP,IACxC,GAAI89B,EAAc99B,KAAOmT,EAAQ,CAC/B/U,KAAKq/B,kBAAkBz9B,GACvB,MAAMoe,EAAYhgB,KAAKigB,YAAYlL,GACnCnR,EAAG07B,YAAYtf,EAAU7K,OAAQ,MACjCuqB,EAAc99B,GAAK,IACrB,CAEJ,CACA,iBAAAy9B,CAAkBvtB,GACZ9R,KAAK01B,yBAA2B5jB,IAClC9R,KAAK01B,uBAAyB5jB,EAC9B9R,KAAK2D,IAAIg8B,cAAc3/B,KAAK2D,IAAIi8B,SAAW9tB,GAE/C,CACA,WAAA+tB,CAAY9qB,GACV,MAAMnR,EAAK5D,KAAK2D,IACVqc,EAAY,IAAIyR,GAAU7tB,EAAGk8B,iBAInC,GAHA9f,EAAU7d,KAAOnC,KAAKm+B,iBAAiBppB,EAAO5F,QAC9C6Q,EAAUS,eAAiBzgB,KAAKi2B,2BAA2BlhB,EAAO5F,QAClE6Q,EAAU7Q,OAASnP,KAAK0+B,mBAAmB3pB,EAAO5F,QAC9C4F,EAAOgrB,sBAAwB//B,KAAKuD,UAAUsE,QAAQhB,SAASO,kBAAoB2N,EAAOirB,cAAe,CAC3G,MAAMC,EAAmB72B,KAAKC,IAAI0L,EAAO5M,MAAO4M,EAAO3M,QACvD2M,EAAOmrB,cAAgB92B,KAAK+2B,MAAM/2B,KAAKg3B,KAAKH,IAAqB,CACnE,CAaA,OAZAjgC,KAAKu1B,YAAYxgB,EAAO/T,KAAOgf,EAC1BhgB,KAAKs1B,gBAAgB+K,SAAStrB,KACjCA,EAAOtO,GAAG,SAAUzG,KAAKsgC,eAAgBtgC,MACzC+U,EAAOtO,GAAG,SAAUzG,KAAKsgC,eAAgBtgC,MACzC+U,EAAOtO,GAAG,cAAezG,KAAKugC,cAAevgC,MAC7C+U,EAAOtO,GAAG,UAAWzG,KAAKwgC,gBAAiBxgC,MAC3C+U,EAAOtO,GAAG,SAAUzG,KAAKygC,eAAgBzgC,MACzC+U,EAAOtO,GAAG,gBAAiBzG,KAAK0gC,gBAAiB1gC,MACjDA,KAAKs1B,gBAAgBzjB,KAAKkD,IAE5B/U,KAAKsgC,eAAevrB,GACpB/U,KAAK2gC,YAAY5rB,GAAQ,GAClBiL,CACT,CACA,aAAAugB,CAAcxrB,GACZ/U,KAAK2gC,YAAY5rB,GAAQ,EAC3B,CACA,WAAA4rB,CAAY5rB,EAAQgf,GAClB,MAAMnwB,EAAK5D,KAAK2D,IACVqc,EAAYhgB,KAAKigB,YAAYlL,GACnCnR,EAAG07B,YAAY17B,EAAG0Z,WAAY0C,EAAUle,SACxC9B,KAAKy1B,eAAez1B,KAAK01B,wBAA0B3gB,EACnDye,GACEze,EAAO0e,MACP7vB,EACAmR,EAAOmrB,cAAgB,EACvBlgC,KAAKuD,UAAUsE,QAAQR,WAAW2C,qBAClC,gBACApG,EAAG0Z,YAEFtd,KAAKuD,UAAUsE,QAAQhB,SAASK,oBAAsB6N,EAAOirB,aAC9DjM,EAEJ,CACA,cAAA0M,CAAe1rB,GACb,MAAMiL,EAAYhgB,KAAKu1B,YAAYxgB,EAAO/T,KACrCgf,IAELhgB,KAAKiR,OAAO8D,GACZ/U,KAAKu1B,YAAYxgB,EAAO/T,KAAO,KAC/BhB,KAAK2D,IAAIi9B,cAAc5gB,EAAUle,SACnC,CACA,cAAAw+B,CAAevrB,GACb,MAAMnR,EAAK5D,KAAK2D,IACVqc,EAAYhgB,KAAKigB,YAAYlL,GACnCnR,EAAG07B,YAAY17B,EAAG0Z,WAAY0C,EAAUle,SACxC9B,KAAKy1B,eAAez1B,KAAK01B,wBAA0B3gB,EACnD,MAAMtM,EAA0C,gCAArBsM,EAAO8rB,UAC9B7gC,KAAK+1B,oBAAsBttB,IAC7BzI,KAAK+1B,kBAAoBttB,EACzB7E,EAAGutB,YAAYvtB,EAAGk9B,+BAAgCr4B,IAEhDzI,KAAK41B,SAAS7gB,EAAOgsB,gBACvB/gC,KAAK41B,SAAS7gB,EAAOgsB,gBAAgBlP,OAAO9c,EAAQiL,EAAWpc,EAAI5D,KAAKuD,UAAUsE,QAAQyB,cAE1F1F,EAAGmuB,WAAWnuB,EAAG0Z,WAAY,EAAG1Z,EAAG8tB,KAAM3c,EAAO+K,WAAY/K,EAAOgJ,YAAa,EAAGna,EAAG8tB,KAAM9tB,EAAGiJ,cAAe,MAE5GkI,EAAOgrB,qBAAuBhrB,EAAOmrB,cAAgB,GACvDlgC,KAAK0gC,gBAAgB3rB,GAAQ,EAEjC,CACA,eAAA2rB,CAAgB3rB,EAAQ9T,GAAO,GACzBA,GACFjB,KAAK+f,WAAWhL,EAAQ,GAC1B,MAAMiL,EAAYhgB,KAAKigB,YAAYlL,GACnC/U,KAAK2D,IAAIq9B,eAAehhB,EAAU7K,OACpC,CACA,eAAAqrB,CAAgBzrB,GACdA,EAAOksB,IAAI,UAAWjhC,KAAKwgC,gBAAiBxgC,MAC5C+U,EAAOksB,IAAI,SAAUjhC,KAAKsgC,eAAgBtgC,MAC1C+U,EAAOksB,IAAI,SAAUjhC,KAAKsgC,eAAgBtgC,MAC1C+U,EAAOksB,IAAI,SAAUjhC,KAAKygC,eAAgBzgC,MAC1C+U,EAAOksB,IAAI,cAAejhC,KAAKugC,cAAevgC,MAC9C+U,EAAOksB,IAAI,gBAAiBjhC,KAAK0gC,gBAAiB1gC,MAClDA,KAAKs1B,gBAAgBhE,OAAOtxB,KAAKs1B,gBAAgB1Z,QAAQ7G,GAAS,GAClE/U,KAAKygC,eAAe1rB,EACtB,CACA,YAAAmsB,CAAazN,GACX,MAAM7vB,EAAK5D,KAAK2D,IACVw9B,EAAYnhC,KAAK2D,IAAIy9B,gBAY3B,OAXAphC,KAAKw1B,YAAY/B,EAAM4N,aAAeF,EACtC3N,GACEC,EACA7vB,EACA5D,KAAKy1B,eAAez1B,KAAK01B,wBAAwBwK,cAAgB,EACjElgC,KAAKuD,UAAUsE,QAAQR,WAAW2C,qBAClC,oBACAm3B,GACA,GACA,GAEKnhC,KAAKw1B,YAAY/B,EAAM4N,YAChC,CACA,aAAA5B,CAAcD,GACZ,OAAOx/B,KAAKw1B,YAAYgK,EAAQ6B,cAAgBrhC,KAAKkhC,aAAa1B,EACpE,CACA,WAAAvf,CAAYlL,GACV,OAAO/U,KAAKu1B,YAAYxgB,EAAO/T,MAAQhB,KAAK6/B,YAAY9qB,EAC1D,CACA,cAAAusB,CAAex/B,GACb,MAAMy/B,OAAEA,EAAAp5B,MAAQA,EAAAC,OAAOA,GAAWpI,KAAKwhC,UAAU1/B,GAC3CiG,EAASC,EAAWC,MAAMC,eAChCH,EAAOI,MAAQA,EACfJ,EAAOK,OAASA,EAChB,MAAMq5B,EAAM15B,EAAO8B,WAAW,MAC9B,GAAI43B,EAAK,CACP,MAAMC,EAAYD,EAAIE,gBAAgBx5B,EAAOC,GAC7Cs5B,EAAUv8B,KAAKzD,IAAI6/B,GACnBE,EAAIG,aAAaF,EAAW,EAAG,EACjC,CACA,OAAO35B,CACT,CACA,SAAAy5B,CAAU1/B,GACR,MAAMkU,EAAalU,EAAQiT,OAAOiB,WAC5B6rB,EAAQ//B,EAAQ+/B,MAChB15B,EAAQiB,KAAKC,IAAID,KAAK04B,MAAMD,EAAM15B,MAAQ6N,GAAa,GACvD5N,EAASgB,KAAKC,IAAID,KAAK04B,MAAMD,EAAMz5B,OAAS4N,GAAa,GACzDurB,EAAS,IAAIQ,WArOC,EAqO4B55B,EAAQC,GAClD7H,EAAWP,KAAKuD,UAChB0R,EAAe1U,EAAS0U,aAAaC,gBAAgBpT,GACrDkgC,EAAiBzhC,EAAS0U,aAAagI,mBAAmBhI,GAC1DrR,EAAKrD,EAASqD,GAcpB,OAbAA,EAAGsZ,gBAAgBtZ,EAAGuZ,YAAa6kB,EAAe5kB,0BAClDxZ,EAAGq+B,WACD74B,KAAK04B,MAAMD,EAAMtkB,EAAIvH,GACrB5M,KAAK04B,MAAMD,EAAMrkB,EAAIxH,GACrB7N,EACAC,EACAxE,EAAG8tB,KACH9tB,EAAGiJ,cACH00B,GAKK,CAAEA,OAAQ,IAAIW,kBAAkBX,EAAO7+B,QAASyF,QAAOC,SAChE,CACA,OAAA1E,GACE1D,KAAKs1B,gBAAgB6M,QAAQlkB,QAASlJ,GAAW/U,KAAKwgC,gBAAgBzrB,IACtE/U,KAAKs1B,gBAAkB,KACvBt1B,KAAKu1B,YAAc,KACnBv1B,KAAKw1B,YAAc,KACnBx1B,KAAKy1B,eAAiB,KACtBz1B,KAAK21B,eAAiB,KACtB31B,KAAKi2B,2BAA6B,KAClCj2B,KAAKm+B,iBAAmB,KACxBn+B,KAAK0+B,mBAAqB,KAC1B1+B,KAAK41B,SAAW,KAChB51B,KAAKuD,UAAY,IACnB,CACA,UAAAmD,GACE1G,KAAK01B,wBAAyB,EAC9B11B,KAAKy1B,eAAe2M,KAAKvtB,EAAQmqB,MAAMjqB,QACvC/U,KAAK21B,eAAiC1yB,OAAOC,OAAO,MACpD,MAAMU,EAAK5D,KAAK2D,IAChB3D,KAAK+1B,mBAAoB,EACzBnyB,EAAGutB,YAAYvtB,EAAGk9B,+BAAgC9gC,KAAK+1B,kBACzD,EAGFV,GAAgBnzB,UAAY,CAC1BC,KAAM,CACJC,EAAcuE,aAEhBrE,KAAM,WIvRR,MAAM+/B,GACJ,aAAA5hC,CAAcF,GACZ,MAAMsoB,EAAW,IAAI2C,EAAa,CAChC8W,OAAQ,CAAE5mB,MAAO,IAAI8G,aAAa,CAAC,EAAG,EAAG,EAAG,IAAKrgB,KAAM,aACvDogC,iBAAkB,CAAE7mB,MAAO,IAAI8mB,EAAUrgC,KAAM,eAC/CsgC,OAAQ,CAAE/mB,MAAO,EAAGvZ,KAAM,SAEtB8U,EAAc1W,EAASuD,OAAOsT,qBAC9B/V,EAAYqhC,EAA2B,CAC3CpgC,KAAM,WACNqgC,KAAM,CACJC,EACAC,EAA0B5rB,GAC1B6rB,EACAC,KAGJ/iC,KAAKc,OAAS,IAAI4T,EAAO,CACvBrT,YACAsT,UAAW,CACTquB,cAAena,EACfoa,cAAeC,EAA6BjsB,KAGlD,CACA,OAAA3V,CAAQ6hC,EAAcC,GACpB,MAAMv7B,EAAUu7B,EAAWv7B,QACrB/G,EAAS+G,EAAQw7B,cAAgBrjC,KAAKc,OACtCP,EAAW4iC,EAAa5iC,SACxB+iC,EAAgB/iC,EAASgjC,iBACzBC,QACJA,EAAAC,aACAA,GACEH,EAAcI,qBAAqB77B,GACvC/G,EAAOwqB,OAAO,GAAK/qB,EAASY,eAAewiC,UAC3CpjC,EAASkB,MAAMC,IAAIyhC,EAAa1hC,OAChClB,EAASO,OAAOG,KAAKH,GACrBP,EAASM,SAASI,KAAKuiC,EAAQ3iC,SAAUC,EAAOO,WAChD,MAAMuiC,EAAUH,EAAaA,aAC7B,IAAA,IAAS7hC,EAAI,EAAGA,EAAI6hC,EAAaI,gBAAiBjiC,IAAK,CACrD,MAAML,EAAQqiC,EAAQhiC,GACtB,GAAIL,EAAMU,KAAM,CACd,IAAA,IAASwP,EAAI,EAAGA,EAAIlQ,EAAMI,SAASE,MAAO4P,IACxClR,EAASuB,QAAQb,KAAKM,EAAMI,SAASA,SAAS8P,GAAIA,GAEpDlR,EAASM,SAASkB,KAAKR,EAAMS,SAAUT,EAAMU,KAAMV,EAAMZ,MAC3D,CACF,CACF,CACA,OAAA+C,GACE1D,KAAKc,OAAO4C,SAAQ,GACpB1D,KAAKc,OAAS,IAChB,EAGFuhC,GAAkBngC,UAAY,CAC5BC,KAAM,CACJC,EAAcC,mBAEhBC,KAAM,YC5DR,MAAMwhC,GACJ,IAAAzjC,GACE,MAAMgB,EAAYqhC,EAA2B,CAC3CpgC,KAAM,OACNqgC,KAAM,CACJG,EACAiB,EACAhB,KAGJ/iC,KAAKgkC,QAAU,IAAItvB,EAAO,CACxBrT,YACAsT,UAAW,CACTC,SAAUC,EAAQmqB,MAAMjqB,OACxBkvB,gBAAiB,CACfC,eAAgB,CAAE/hC,KAAM,cAAeuZ,MAAO,IAAI8mB,MAI1D,CACA,OAAAlhC,CAAQ6iC,EAAUC,GAChB,MAAM7jC,EAAW4jC,EAAS5jC,SAC1B,IAAIO,EAASsjC,EAAKJ,QAClB,GAAKljC,GAOL,IAAYA,EAAOO,UAEjB,YADAyG,EAAK,+BAAgCs8B,EAAKtjC,YAR/B,CACXA,EAASd,KAAKgkC,QACd,MAAMliC,EAAUsiC,EAAKtiC,QACfiT,EAASjT,EAAQiT,OACvBjU,EAAO6T,UAAUC,SAAWG,EAC5BjU,EAAO6T,UAAU0vB,SAAWtvB,EAAO0e,MACnC3yB,EAAO6T,UAAUsvB,gBAAgBpb,SAASqb,eAAiBpiC,EAAQwiC,cAAcC,QACnF,CAIAzjC,EAAOwqB,OAAO,KAAO/qB,EAASY,eAAewiC,UAC7C7iC,EAAOwqB,OAAO,KAAO6Y,EAASK,uBAC9BjkC,EAASsV,QAAQ9T,KAAK,CACpBlB,SAAUujC,EAAKK,UACf3jC,SACAW,MAAO2iC,EAAK3iC,OAEhB,CACA,OAAAiC,GACE1D,KAAKgkC,QAAQtgC,SAAQ,GACrB1D,KAAKgkC,QAAU,IACjB,EAEFF,GAAc5hC,UAAY,CACxBC,KAAM,CACJC,EAAcC,mBAEhBC,KAAM,QCvCR,MAAMoiC,GAAsB,IACvBC,EACH3oB,GACA5F,EACAhK,EACA4K,GACAjU,EACAsyB,GACA5T,GACApS,EACAgd,GACAlC,GACA1T,GACA+a,GACA/Z,GACApB,IAEIuuB,GAAoB,IAAIC,GACxBC,GAAuB,CAAChlC,EAAgBgkC,GAAezB,IACvD0C,GAAU,GACVC,GAAc,GACdC,GAAqB,GAC3B59B,EAAW69B,kBAAkB9iC,EAAcuE,YAAao+B,IACxD19B,EAAW69B,kBAAkB9iC,EAAc+iC,WAAYH,IACvD39B,EAAW69B,kBAAkB9iC,EAAcC,kBAAmB4iC,IAC9D59B,EAAW3G,OAAOgkC,MAAwBE,MAAsBE,IAChE,MAAMM,WAAsBC,EAC1B,WAAAtlC,GAQEmc,MAPqB,CACnB5Z,KAAM,QACNH,KAAMmjC,EAAaC,MACnBR,WACAC,eACAC,uBAGJ","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49]}